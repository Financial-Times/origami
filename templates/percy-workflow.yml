{{=<% %>=}}
name: percy
concurrency:
  group: ${{ github.head_ref }}-${{ github.workflow }}
  cancel-in-progress: true

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - labeled
    paths:
      - "package.json"
      - "package-lock.json"
      - "components/**"
      - "!components/**/*.md"
  push:
    paths:
      - "package.json"
      - "package-lock.json"
      - "components/**"
      - "!components/**/*.md"

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      components: ${{ steps.set-matrix.outputs.changes }}
    steps:
      - uses: actions/checkout@v2
      - uses: volta-cli/action@v4
      - uses: actions/cache@v2
        with:
          volta-version: "1.0.8"
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm ci
      - name: Find components affected by changes
        id: percy-changes
        run: |
          git fetch
          git branch
          changes=()
          for component in components/*/; do
            RESULT=$(WORKSPACE=$component node ./scripts/should-percy-run.js | grep "\-RESULT:" | cut -d ":" -f 2)
            echo "RESULT=$RESULT"
            if [[ $RESULT -eq 'true' ]]; then
              changes+=("$component")
            fi
          done
          echo "Changes:";
          json_array=$(jq -n '$ARGS.positional' --args "${changes[@]}");
          echo "$json_array";
          echo "CHANGES=$(echo ${json_array})" >> "$GITHUB_OUTPUT";
      - name: Set Matrix
        id: set-matrix
        run: |
          CHANGES_AS_JSON_ARRAY=$(echo '${{ steps.percy-changes.outputs.changes }}'  | jq 'map({component: .})' | tr '\n' ' ')
          MATRIX=$(echo "{}" | jq --argjson changes "${CHANGES_AS_JSON_ARRAY}" '. + {include: $changes}' )
          echo "CHANGES=$(echo "$CHANGES_AS_JSON_ARRAY")" >> "$GITHUB_OUTPUT";
  run-percy:
      if: ${{ needs.changes.outputs.components != '[]' && needs.changes.outputs.components != '' }}
      needs: changes
      runs-on: ubuntu-latest
      strategy:
        fail-fast: false
        matrix:
          component: ${{ fromJson(needs.changes.outputs.components) }}
      steps:
        - run: |
            echo "Running percy for ${{ matrix.component }}"
