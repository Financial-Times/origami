
$o-colors-is-silent: true !default;

@import 'src/scss/functions';
@import 'src/scss/mixins';
@import 'src/scss/palette';
@import 'src/scss/use-cases';

// Output use case placeholders and (if noisy) concrete classes
@each $usecase, $props in $o-colors-usecases {
	@each $prop, $color in $props {
		$selector: 'o-colors-' + $usecase + '-' + $prop;
		@if (not $o-colors-is-silent) {
			$selector: $selector + ', .' + $selector;
		}
		%#{$selector} {
			@if $prop == text or $prop == all {
				color: oColorsGetPaletteColor($color);
			}
			@if $prop == background or $prop == all {
				background-color: oColorsGetPaletteColor($color);
			}
			@if $prop == border or $prop == all {
				border-color: oColorsGetPaletteColor($color);
			}
		}
	}
}

// Output palette placeholders and (if noisy) concrete classes
@each $name, $csscolor in $o-colors-palette {
	$selector: 'o-colors-palette-' + $name;
	@if (not $o-colors-is-silent) {
		$selector: $selector + ', .' + $selector;
	}
	%#{$selector} {
		background-color: $csscolor;
	}
}
