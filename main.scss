@import 'o-colors/main';
@import 'o-grid/main';
@import 'o-normalise/main';
@import 'o-spacing/main';

@import 'src/scss/variables';
@import 'src/scss/color-use-cases';
@import 'src/scss/functions';
@import 'src/scss/share';

@mixin oShare($opts: (
  'icons': $_o-share-icons,
  'sizes': ('small', 'thingy'),
  'vertical': true,
  'inverse': true
)) {
  $icons: map-get($opts, 'icons');
  $vertical-enabled: map-get($opts, 'vertical');
  $inverse-enabled: map-get($opts, 'inverse');
  $sizes: map-get($opts, 'sizes');

  // Error if the global $system-code variable is not set.
  @if (global-variable-exists('system-code') == false or type-of($system-code) != 'string') {
	  @error 'A global "$system-code" Sass variable must be set to a valid Bizops system code (\e]8;;https://biz-ops.in.ft.com/list/Systems\e\\https://biz-ops.in.ft.com/list/Systems\e]8;;\e\\).';
  }

  @include _oShareBase();

  @each $icon in $_o-share-icons {
	  @include _oShareActionIcon($icon);
  }

  @if index($sizes, 'small') != null {
    .o-share--small {
      @include _oShareSize('small');
    }
  }

  @if index($sizes, 'thingy') != null {
    .o-share--thingy {
      @include _oShareSize('default');
      @include oGridRespondTo('M') {
        @include _oShareSize('small');
      }
    }
  }

  @if $inverse-enabled {
	  @include _oShareInverse($icons);
  }

  @if $vertical-enabled {
    @include _oShareVertical();
  }
}

@if (not $o-share-is-silent) {
	@include oShare();
	// Set to silent again to avoid being output twice
	$o-share-is-silent: true !global;
}
