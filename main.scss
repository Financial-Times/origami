@import "o-spacing/main";
@import "o-colors/main";
@import "o-typography/main";
@import "o-icons/main";

@import "src/scss/variables";
@import "src/scss/color-use-cases";

// ensure that the placeholders are only output once
$_o-quote-placeholders-defined: false!default;
@import "src/scss/base";
@import "src/scss/editorial";
$_o-quote-placeholders-defined: true;

/// Default styles for o-quote
///
/// @example Output all o-quote rules.
/// 	@include oQuote();
///
/// @example Output a selection of o-quote rules.
///     @include oQuote((
///     	'cite': false,
///     	'editorial': true
///     ));
///
/// @param {Map} $opts [('cite': true, 'editorial': true] - The feature set to output rules for.
/// @output The output includes the `.o-quote*` selectors
@mixin oQuote($opts: (
	cite: true,
	editorial: true
)) {
	.o-quote {
		@include oQuoteBase();
	}

	@if $cite-enabled {
		.o-quote__cite {
			@include oQuoteBaseCite();
		}
	}

	@if $editorial-enabled {
		.o-quote--editorial {
			@include oQuoteEditorial();
			.o-quote__author {
				@include oQuoteAuthor();
			}
		}
	}

	@if $editorial-enabled and $cite-enabled {
		.o-quote--editorial .o-quote__cite {
			@include oQuoteEditorialCite();
		}
	}
}

@if (not $o-quote-is-silent) {
	@include oQuote();
	// Set to silent again to avoid being output twice
	$o-quote-is-silent: true !global;
}
