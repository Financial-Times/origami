////
/// @group o-colors
/// @link http://registry.origami.ft.com/components/o-colors
////

/// Add a custom use case property
///
/// @example scss
///  @include oColorsSetUseCase(email, text, grey-tint5);
///
/// @param {String} $usecase - Name of the use case
/// @param {String} $property - Property it applies to
/// @param {String} $color - One of $o-colors-palette
@mixin oColorsSetUseCase($usecase, $property, $color) {
	$propmap: ($property: $color);
	@if (map-has-key($o-colors-usecases, $usecase)) {
		$propmap: map-merge(map-get($o-colors-usecases, $usecase), $propmap);
	}
	$newmap: ($usecase: $propmap);
	$o-colors-usecases: map-merge($o-colors-usecases, $newmap) !global;
}

/// Output property declarations for all defined properties for the specified use case
///
/// @example scss
///  .my-thing {
///  	@include oColorsFor(custom-box box);
///  }
///  .my-other-thing {
///  	@include oColorsFor(custom-box box, background border);
///  }
///
/// @param {String|list} $useCaseList
/// @param {String|list} $propertyList [all]
@mixin oColorsFor($useCaseList, $propertyList: all) {
	@if ($propertyList == 'all' or index($propertyList, 'background')) {
		$col: oColorsGetColorFor($useCaseList, background, (default:undefined));
		@if ($col != undefined) {
			background-color: $col;
		}
	}
	@if ($propertyList == 'all' or index($propertyList, 'text')) {
		$col: oColorsGetColorFor($useCaseList, text, (default:undefined));
		@if ($col != undefined) {
			color: $col;
		}
	}
	@if ($propertyList == 'all' or index($propertyList, 'border')) {
		$col: oColorsGetColorFor($useCaseList, border, (default:undefined));
		@if ($col != undefined) {
			border-color: oColorsGetColorFor($useCaseList, border);
		}
	}
}
