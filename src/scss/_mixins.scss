/// Styles used witin o-teaser-collection__heading, including size modifiers.
///
/// @example - Include all heading styles.
///		.my-collection-heading {
///			@include oTeaserCollectionContentHeading();
///		}
/// @example - Include the standard heading styles but do not style any child anchor element, and do not output modifier classes for different sized headings.
///		.my-collection-heading {
///			@include oTeaserCollectionContentHeading($opts: (
///				'anchor': false,
///				'divider': true,
///				'sizes': ()
///			));
///		}
/// @example - Output a modifier class for a "small" collection heading.
///		.my-collection-heading {
///			@include oTeaserCollectionContentHeading($opts: (
///				'anchor': true,
///				'divider': true,
///				'sizes': ('small') // .my-collection-heading--small
///			));
///		}
/// @param {Map} $opts [('anchor': true,'divider': true,'sizes': ('full-width', 'half-width', 'small'))]
@mixin oTeaserCollectionContentHeading($opts: (
	'anchor': true,
	'divider': true,
	'sizes': ('full-width', 'half-width', 'small')
)) {
	$anchor: map-get($opts, 'anchor');
	$divider: map-get($opts, 'divider');

	$sizes: map-get($opts, 'sizes');
	$full-width: index($sizes, 'full-width');
	$half-width: index($sizes, 'half-width');
	$small: index($sizes, 'small');

	@include oTypographySize(3);
	position: relative;
	width: 100%;
	margin: 0;
	font-family: $o-typography-sans;
	font-weight: normal;
	padding-top: oSpacingByName('s3');
	padding-bottom: oSpacingByIncrement(5);
	// sass-lint:disable no-vendor-prefixes
	-webkit-font-smoothing: antialiased;
	// sass-lint:enable no-vendor-prefixes

	@if($divider) {
		&:before,
		&:after {
			border-top: 8px solid rgba(oColorsGetPaletteColor('black'), 0.05);
			content: '';
			left: 0;
			top: 0;
			position: absolute;
			width: 100%;
		}

		&:after {
			border-top-color: oColorsGetPaletteColor('black');

			@include oGridRespondTo(L) {
				width: 32.5%;
			}
		}
	}

	@if($divider and $full-width) {
		&--full-width:after {
			width: 100%;
		}
	}

	@if($divider and $half-width) {
		&--half-width:after {
			@include oGridRespondTo(L) {
				width: 49%;
			}
		}
	}

	@if($small) {
		&--small {
			margin-bottom: oSpacingByIncrement(5);
			border-bottom: 1px solid $_o-teaser-collection-color-bottom-border;

			@if($divider) {
				&:after {
					width: 100%;
				}
			}
		}
	}

	@if ($anchor) {
		> a {
			@include _oTeaserCollectionHeadingLink;
		}
	}
}


/// @access private
@mixin _oTeaserCollectionHeadingLink {
	color: inherit;
	text-decoration: none;
	border: 0;
	padding: 1px 0px 3px; // Magic numbers to make the focus style the same height for the text and > icon

	&:hover {
		@include oColorsFor('o-teaser-collection-heading', text, 55);
	}

	&:after {
		@include oIconsGetIcon('arrow-right', oColorsGetPaletteColor('black'), 30, $iconset-version: 1);
		content: '';
		display: inline-block;
		position: relative;
		top: 8px;
		right: -13px;
		margin-left: -13px;
		margin-top: -10px;
	}
}

@mixin _oTeaserCollectionNumbered() {
	.o-teaser-collection__items {
		counter-reset: o-teaser-collection-items;
	}

	.o-teaser-collection__item {
		counter-increment: o-teaser-collection-items;
		padding-left: 28px;
		position: relative;

		&:before {
			@include oTypographySize(4);
			font-family: $o-typography-display;
			content: counter(o-teaser-collection-items);
			position: absolute;
			top: 0;
			left: 0;
		}
	}
}

@mixin _oTeaserCollectionSpecial($colour) {
	position: relative;
	border-top: 0;
	margin-bottom: 50px;

	&:after {
		content: '';
		position: absolute;
		top: 0;
		z-index: -1;
		background-color: $colour;
		right: -50%;
		left: -50%;
		height: 100%;

		@supports (width: 100vw) {
			margin-left: -50vw;
			width: 100vw;
			right: auto;
			left: 50%;
		}
	}
}

@mixin _oTeaserCollectionBigStory() {
	.o-teaser-collection__heading,
	.o-teaser-collection__heading--inverse {
		z-index: 1;
		position: absolute;
		// sass-lint:disable no-vendor-prefixes
		-webkit-font-smoothing: antialiased;
		// sass-lint:enable no-vendor-prefixes

		@include oGridRespondTo(L) {
			width: 32.5%;
		}

		&:before {
			display: none;
		}

		&:after {
			width: 100%;
		}
	}

	.o-teaser-collection__related {
		margin: 10px 0 0;

		// Modify o-teaser: remove the related teaser borders when stacked
		.o-teaser {
			@include oGridRespondTo(M) {
				border-bottom-width: 0;
			}
			@include oGridRespondTo(L) {
				border-bottom-width: 1px;
			}
		}
	}
}
