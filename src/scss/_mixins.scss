////
/// @group o-loading
/// @link http://registry.origami.ft.com/components/o-loading
////

/// Output the keyframe animation definition
///
/// @private
@mixin _oLoadingAnimationKeyframes {
	@if not $o-loading-animation-keyframes {
		@keyframes o-loading-spinner {
			0% {
				transform: rotate(0deg);
			}
			100% {
				transform: rotate(360deg);
			}
		}

		$o-loading-animation-keyframes: true !global;
	}
}

/// Output the colors for a variant of a brand
///
/// @private
@mixin _oLoadingGetColors($variant) {
	@include oBrandConfigureFor('o-loading', $variant) {
		border: 4px solid rgba(oBrandGet('default-color'), 0.25);
		border-top-color: oBrandGet('default-color');
	};
}

/// Base styles for a loading indicator
@mixin oLoading() {

	// the keyframes must be defined _before_ first use
	@at-root {
		@include _oLoadingAnimationKeyframes();
	}

	// HACK: creates a new selector to output the rules _after_ keyframes
	& {
		display: inline-block;
		border-radius: 50%;
		animation: o-loading-spinner 1s infinite linear;
	}
}

/// Color variation for a loading indicator
///
/// @param {String|Color} $color
@mixin oLoadingColor($color) {
	@if type-of($color) == 'string' {
		@include _oLoadingGetColors($color);

		@if not $color {
			@warn "Color not found for o-loading";
		}
	}
}

/// Size variation for a loading indicator
///
/// @param {String|Number} $size
@mixin oLoadingSize($size) {
	@if type-of($size) == 'string' {
		$size: indexof($o-loading-sizes, $size);

		@if not $size {
			@warn "Size not found for o-loading";
		}
	}

	width: $size;
	height: $size;
}
