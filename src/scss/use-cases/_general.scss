////
/// @group Use cases
/// @link http://registry.origami.ft.com/components/o-typography
////

/// Body text styles
@mixin oTypographyBody {
	// If family style is not given default to sans.
	$type: _oTypographyGet('font-type', 'body');
	$type: if($type, $type, 'sans');
	$font-family: _oTypographyFontFamilyForType($type);
	// If scale isn't given default to 1.
	$scale: _oTypographyGet('scale', 'body');
	$scale: if($scale, $scale, 1);
	@include _oTypographyFor($font-family, $opts: (
		'family': true,
		'scale': $scale,
		'custom-line-height':  _oTypographyGet('custom-line-height', 'body'),
	));
	// Add bottom margin if set.
	$bottom-spacing-size: _oTypographyGet('bottom-spacing-size', 'body');
	@if $bottom-spacing-size {
		margin: 0 0 oSpacingByIncrement($bottom-spacing-size);
	}
	color: oColorsGetColorFor('body', 'text');
}

/// Subscript text
@mixin oTypographySub {
	@include oTypographySans(-2);
	display: inline-block;
	margin-bottom: _oTypographyAdjustUnit(-5px);
	vertical-align: sub;
}

/// Superscript text
@mixin oTypographySuper {
	@include oTypographySans(-2);
	display: inline-block;
	margin-top: _oTypographyAdjustUnit(-3px);
	vertical-align: super;
}

/// Output link styles.
///
/// @example Output the styles for a standard link.
///     .my-link {
///     	@include oTypographyLink();
///     }
///
/// @example Output the styles for an external link.
///     .my-external-link {
///     	@include oTypographyLink($external: true);
///     }
///
/// @example Output the styles for an external link, without repeating styles shared by standard links.
///     .my-link--external {
///     	@include oTypographyLink($external: true, $include-base-styles: false);
///     }
///
/// @example Output a custom, claret coloured link to go on the default background colour (paper for the master brand, white otherwise).
///     .my-claret-link {
///     	@include oTypographyLink($theme: (
///     		'base': 'claret',
///     		'hover': 'claret-30',
///     	));
///     }
///
/// @example Output a custom, lemon coloured link to go on a slate background.
///     .my-inverse-link {
///     	@include oTypographyLink($theme: (
///     		'base': 'lemon',
///     		'hover': 'lemon-30',
///     		'context': 'slate',
///     	));
///     }
///
/// @param {Boolean} $external [false] - If the style is for external links, set to true to output an external link icon.
/// @param {Map|Null} $theme [null] - A custom theme to change the look of a link, with colours for properties `base` (the main link colour), `hover` (the links over colour), and optional `context` key. Context is the colour the link will be placed on, it defaults to the page background (paper for the master brand, white otherwise).
/// @param {Boolean} $include-base-styles [true] - If set to false standard link styles will not be output, only additional styles required by a custom theme or external link.
@mixin oTypographyLink($external: false, $theme: null, $include-base-styles: true) {
	// Default link colours.
	// These may be `null` if the usecase is not set, i.e. for the whitelabel brand.
	$base-color: oColorsGetColorFor(link, text);
	$hover-color: oColorsGetColorFor(link-hover, text);
	$context-color: oColorsGetColorFor(page, background);

	// If a custom theme is given check it is a map with the required keys.
	// And update the link colours.
	$required-theme-keys: ('base', 'hover');
	@if($theme and type-of($theme) != 'map') {
		@error 'The link $theme argument must `null` or a map. ' +
		'Found: "#{inspect($theme)}"';
	}
	@if(type-of($theme) == 'map') {
		$theme-base: map-get($theme, 'base');
		$theme-hover: map-get($theme, 'hover');
		$theme-context: map-get($theme, 'context');
		@if(type-of($theme-base) != 'string') {
			@error 'A custom link theme must have a `base` property with a palette colour name e.g. `claret`. But found #{$theme-base}.';
		}
		@if(type-of($theme-hover) != 'string') {
			@error 'A custom link theme must have a `hover` property with a palette colour name e.g. `claret`. But found #{$theme-hover}.';
		}
		@if($theme-context and type-of($theme-context) != 'string') {
			@error 'A custom link theme may optionally have a `context` property with a palette colour name, to indicate the colour of the page behind the link, e.g. `null` or `paper`. But found #{$theme-context}.';
		}
		$base-color: oColorsGetPaletteColor($theme-base);
		$hover-color: oColorsGetPaletteColor($theme-hover);
		// theme context is optional, use the default if not set
		@if($theme-context) {
			$context-color: oColorsGetPaletteColor($theme-context);
		}
	}

	// Output external link styles.
	// Fallback to a black icon if no link colour is given.
	@if($external) {
		$icon-color: if($base-color, $base-color, oColorsGetPaletteColor('black'));
		$icon-padding: calc(1em + 0.5ch);
		@include oIconsGetIcon('outside-page', $icon-color, 24, $apply-base-styles: false, $apply-width-height: false, $iconset-version: 1);
		background-repeat: no-repeat;
		background-position-x: right;
		padding-right: $icon-padding;
		background-origin: border-box;
		// IE11 does not size and position the svg icon background correctly
		// using `background-size: contain`. Use @supports to exclude IE11,
		// as IE11 does not support @supports
		background-size: $icon-padding $icon-padding; // IE11 fallback
		@supports (background-size: contain) {
			background-size: contain;
		}
		&[target="_blank"]:after {
			@include oNormaliseVisuallyHidden();
			content: '(opens a new window)';
		}
	}

	// Output base styles shared by all links.
	@if($include-base-styles) {
		text-decoration: none;
		cursor: pointer;
		border-bottom: 2px solid;
	}

	// Output base styles shared by all links, or
	// required for a custom link theme.
	@if($include-base-styles or $theme) {
		color: $base-color;
		border-bottom-color: if($base-color, oColorsMix($base-color, $context-color, $percentage: 20), null);
	}

	&:hover {
		@if($include-base-styles or $theme) {
			color: $hover-color;
			border-bottom-color: if($base-color, oColorsMix($base-color, $context-color, $percentage: 40), null);
		}
	}

	// o-normalise provides extra focus styles for links
	&:focus {
		@if($include-base-styles) {
			border-bottom-color: transparent;
		}
		@if($include-base-styles or $theme) {
			color: $hover-color;
		}
	}
}

/// Styling for <ul> and <ol>
@mixin oTypographyList {
	margin-top: 0;
	margin-bottom: oSpacingByIncrement(7);

	li {
		$type: _oTypographyGet('font-type', 'body');
		$type: if($type, $type, 'sans');
		$font-family: _oTypographyFontFamilyForType($type);
		@include _oTypographyFor($font-family, $opts: (
			'family': true,
			'scale': 1,
			'custom-line-height': 28px,
		));
		margin-top: 0;
		margin-bottom: 0;
		color: oColorsGetColorFor('body', 'text');
	}
}

/// Styles for <ol> tags
@mixin oTypographyListOrdered {
	padding-left: 0;

	// Counter-increment/counter-reset is not supported in
	// <IE8, so use browserhack to only target supported browsers
	:root & {
		counter-reset: item;

		> li {
			display: block;
			position: relative;
			padding-left: oSpacingByIncrement(6);


			&:before {
				@include oTypographySans (
					$scale: 0,
					$weight: 'semibold'
				);
				position: absolute;
				display: inline-block;
				width: oSpacingByIncrement(5);
				font-feature-settings: "tnum";
				margin-right: oSpacingByIncrement(-1);
				content: counter(item);
				counter-increment: item;
				left: 0;
				top: 4px;
				color: oColorsGetColorFor('body', 'text');
			}
		}
	}
}

/// Styles for <ul> tags
/// Bullet size and spacing was suited to article font-size (18px at time of writing).
/// This has since been updated to use `em` units but maintain that ratio.
@mixin oTypographyListUnordered {
	padding-left: 0;

	li {
		display: block;
		position: relative;
		padding-left: 1.333333333em; // padding-left 24px for `li` items with font-size of 18px

		&:before {
			color: oColorsGetColorFor('body', 'text');
			display: inline-block;
			position: absolute;
			content: '\2022'; // dot character
			left: -0.0625em;
			font-size: 1.777777778em; // font-size 32px for `li` items with font-size of 18px
		}
	}
}

/// Style for <footer> tags
/// @brand master
@mixin oTypographyFooter {
	@include oTypographySans($scale: 1, $line-height: 24px);
	color: oColorsGetColorFor('body', 'text');
}

/// Styles for photo or video credit/caption
/// @brand master
@mixin oTypographyCaption {
	@include oTypographySans($scale: -1);
	margin-top: oSpacingByName('s2');
	margin-bottom: 0;
	color: oColorsGetColorFor('body', 'text');
}

