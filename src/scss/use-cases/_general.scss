////
/// @group Use cases
/// @link http://registry.origami.ft.com/components/o-typography
////

/// Body text styles
@mixin oTypographyBody {
	// If family style is not given default to sans.
	$type: _oTypographyGet('font-type', 'body');
	$type: if($type, $type, 'sans');
	$font-family: _oTypographyFontFamilyForType($type);
	// If scale isn't given default to 1.
	$scale: _oTypographyGet('scale', 'body');
	$scale: if($scale, $scale, 1);
	@include _oTypographyFor($font-family, $opts: (
		'family': true,
		'scale': $scale,
		'custom-line-height':  _oTypographyGet('custom-line-height', 'body'),
	));
	// Add bottom margin if set.
	$bottom-spacing-size: _oTypographyGet('bottom-spacing-size', 'body');
	@if $bottom-spacing-size {
		margin: 0 0 oSpacingByIncrement($bottom-spacing-size);
	}
	color: oColorsGetColorFor('body', 'text');
}

/// Subscript text
@mixin oTypographySub {
	@include oTypographySans(-2);
	display: inline-block;
	margin-bottom: _oTypographyAdjustUnit(-5px);
	vertical-align: sub;
}

/// Superscript text
@mixin oTypographySuper {
	@include oTypographySans(-2);
	display: inline-block;
	margin-top: _oTypographyAdjustUnit(-3px);
	vertical-align: super;
}

/// Custom link styles
/// @breaking Remove `$outlineColor` on the next major release. Instead use `o-normalise` to provide the focus outline: https://github.com/Financial-Times/o-typography/issues/169
@mixin oTypographyLinkCustom($baseColor, $hoverColor, $backgroundColor: oColorsGetUseCase(page, background), $outlineColor: _oTypographyGet('custom-link-focus-outline-color')) {
	color: oColorsGetPaletteColor($baseColor);
	text-decoration: none;
	cursor: pointer;
	border-bottom: 2px solid oColorsMix(oColorsGetPaletteColor($baseColor), oColorsGetPaletteColor($backgroundColor), $percentage: 20);

	&:hover {
		color: oColorsGetPaletteColor($hoverColor);
		border-bottom-color: oColorsMix(oColorsGetPaletteColor($baseColor), oColorsGetPaletteColor($backgroundColor), $percentage: 40);
	}

	&:focus {
		color: oColorsGetPaletteColor($hoverColor);
		border-bottom-color: transparent;

		@if $outlineColor {
			outline: 2px solid if($outlineColor, oColorsGetPaletteColor($outlineColor), null);
		}
	}
}

/// Standard link styles
@mixin oTypographyLink {
	$base-color: oColorsGetUseCase(link, text);
	$hover-color: oColorsGetUseCase(link-hover, text);
	@if $base-color and $hover-color {
		@include oTypographyLinkCustom($base-color, $hover-color);
	}
}

/// Standard link styles + external link icon.
@mixin oTypographyLinkExternal {
	@include oTypographyLink();
	@include oTypographyLinkExternalIcon();
}

/// External link icon.
/// @param {Color} $color - Color of the icon. Default to the link `o-color` usecase.
@mixin oTypographyLinkExternalIcon($color: null) {
	// If no link colour usecase (i.e. whitelabel brand) fallback to a black icon.
	// `oColorsGetUseCase` if statement prevents warnings when calling `oColorsGetColorFor`.
	@if not $color {
		@if oColorsGetUseCase(link, text) {
			$color: oColorsGetColorFor(link, text);
		} @else {
			$color: black;
		}
	}
	// IE9-11 does not size the svg icon background correctly.
	// Use @supports to target modern (non-IE) browsers.
	@supports (background-size: contain) {
		@include oIconsGetIcon('outside-page', $color, 24, $apply-base-styles: false, $apply-width-height: false, $iconset-version: 1);
		background-repeat: no-repeat;
		background-position-x: right;
		background-size: contain;
		padding-right: calc(1em + 0.5ch);
		background-origin: border-box;
	}
	&::after {
		// Fallback to a pseudo element icon for IE9-11.
		// The downside is the icon may wrap to newline.
		@include oIconsGetIcon('outside-page', $color, 24, $apply-base-styles: false, $iconset-version: 1);
		content: 'Opens a new window';
		width: 1rem;
		height: 1rem;
		display: inline-block;
		background-origin: content-box;
		vertical-align: middle;
		border-bottom: inherit;
		border-color: transparent;
		overflow: hidden;
		text-indent: -10000px;
		text-align: left;
		color: rgba(0, 0, 0, 0);
		// Visually hide pseudo element if the pseudo element icon fallback is not needed.
		// @breaking update to use oNormaliseVisuallyHidden
		// https://github.com/Financial-Times/o-typography/issues/161
		@supports (background-size: contain) {
			position: absolute;
			clip: rect(0 0 0 0);
			margin: -1px;
			border: 0;
			overflow: hidden;
			padding: 0;
			width: 1px;
			height: 1px;
			white-space: nowrap;
		}
	}
}

/// Make something italic
@mixin oTypographyItalic {
	font-style: italic;
}

/// Styling for <ul> and <ol>
@mixin oTypographyList {
	margin-top: 0;
	margin-bottom: oSpacingByIncrement(7);

	li {
		$type: _oTypographyGet('font-type', 'body');
		$type: if($type, $type, 'sans');
		$font-family: _oTypographyFontFamilyForType($type);
		@include _oTypographyFor($font-family, $opts: (
			'family': true,
			'scale': 1,
			'custom-line-height': 28px,
		));
		margin-top: 0;
		margin-bottom: 0;
		color: oColorsGetColorFor('body', 'text');
	}
}

/// Styles for <ol> tags
@mixin oTypographyListOrdered {
	padding-left: 0;

	// Counter-increment/counter-reset is not supported in
	// <IE8, so use browserhack to only target supported browsers
	:root & {
		counter-reset: item;

		> li {
			display: block;
			position: relative;
			padding-left: oSpacingByIncrement(6);


			&:before {
				@include oTypographySansBold($scale: 0);
				position: absolute;
				display: inline-block;
				width: oSpacingByIncrement(5);
				font-feature-settings: "tnum";
				margin-right: oSpacingByIncrement(-1);
				content: counter(item);
				counter-increment: item;
				left: 0;
				top: 4px;
				color: oColorsGetColorFor('body', 'text');
			}
		}
	}
}

/// Styles for <ul> tags
/// Bullet size and spacing was suited to article font-size (18px at time of writing).
/// This has since been updated to use `em` units but maintain that ratio.
@mixin oTypographyListUnordered {
	padding-left: 0;

	li {
		display: block;
		position: relative;
		padding-left: 1.333333333em; // padding-left 24px for `li` items with font-size of 18px

		&:before {
			color: oColorsGetColorFor('body', 'text');
			display: inline-block;
			position: absolute;
			content: '\2022'; // dot character
			left: -0.0625em;
			font-size: 1.777777778em; // font-size 32px for `li` items with font-size of 18px
		}
	}
}

/// Style for <footer> tags
/// @brand master
@mixin oTypographyFooter {
	@include oTypographySans($scale: 1, $line-height: 24px);
	color: oColorsGetColorFor('body', 'text');
}

/// Styles for photo or video credit/caption
/// @brand master
@mixin oTypographyCaption {
	@include oTypographySans($scale: -1);
	margin-top: oSpacingByName('s2');
	margin-bottom: 0;
	color: oColorsGetColorFor('body', 'text');
}

