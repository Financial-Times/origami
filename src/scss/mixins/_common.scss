////
/// @group Common
////

/// @access public
/// @output Styles for the main o-forms/fieldset group which contains a label/input.
@mixin oFormsGroup {
	position: relative;
	max-width: $_o-forms-field-max-width;
	margin: 0 0 $_o-forms-section-spacing; // Reset top and side margins for fieldset usage
	// reset <fieldset> defaults
	padding: 0;
	border: 0;
	min-width: auto;

	// sass-lint:disable mixins-before-declarations
	@include oGridRespondTo(S) {
		padding-right: $_o-forms-padding;
		padding-left: $_o-forms-padding;
	}
	// sass-lint:enable mixins-before-declarations
}

/// @access public
/// @require {mixin} oFormsGroup
/// @output Styles to modify the o-forms/fieldset group for inline fields.
@mixin oFormsGroupInline($class: 'o-forms') {
	@supports (display: grid) {
		@include _oFormsGroupInlineStyles();
	}
	// IE10-11 (no @supports but its own grid
	// sass-lint:disable no-vendor-prefixes
	&,
	_:-ms-lang(x) {
		@include _oFormsGroupInlineStyles();
	}
	// sass-lint:enable no-vendor-prefixes
}

/// @access private
@mixin _oFormsGroupInlineStyles() {
	max-width: $_o-forms-inline-field-max-width;
	@include oGridRespondTo(S) {
		margin: 0 0 $_o-forms-inline-section-spacing;
	}
}

/// @access public
/// @require {mixin} oFormsGroup
/// @require {mixin} oFormsGroupInline
/// @output Styles to modify the alignment of inline o-forms/fieldset group for checkboxes and radio buttons.
@mixin oFormsGroupInlineRadioCheckbox($class: 'o-forms') {
	@include _oFormsMessagingElementSelectors($class) {
		align-self: baseline;
		-ms-grid-row-align: start; // sass-lint:disable-line no-vendor-prefixes IE10-11 no baseline support
	}
	align-items: baseline;
}

/// @access public
/// @require {mixin} oFormsGroup
/// @require {mixin} oFormsGroupInline
/// @output Styles for the o-forms/fieldset inline container.
@mixin oFormsGroupInlineContainer($class: 'o-forms') {
	@include _oFormsBaseInlineStyles($class);
	.#{$class}__status--left {
		@include _oFormsInlineStatusLeftStyles();
	}
}

/// @access public
/// @require {mixin} oFormsGroup
/// @require {mixin} oFormsGroupInline
/// @output Container for small controls of the same width E.g. repeated yes/no radios in a narrow container.
@mixin oFormsGroupInlineControls($class: 'o-forms') {
	&  > .#{$class}__inline-container {
		@include _oFormsBaseInlineStyles($class);
		grid-template-columns: 1fr min-content min-content;
		.#{$class}__group {
			justify-self: end;
		}

		@include oGridRespondTo(S) {
			.#{$class}__status--left {
				@include _oFormsInlineStatusLeftStyles();
			}
		}
	}

	&.#{$class}--error {
		margin: 0 0 $_o-forms-inline-control-with-error-section-spacing;
	}
}

/// @access private
/// @output Styles to position form status (e.g. "saving") to the left of an input.
@mixin _oFormsInlineStatusLeftStyles() {
	grid-column: 2;
	-ms-grid-column: 3; // sass-lint:disable-line no-vendor-prefixes IE10-11 has a fake column for a grid gap.
	grid-row: 1;
	justify-content: flex-end;
	margin-top: 0px;
	// Override `display: none` when inline and left to maintain status width.
	display: flex;
	visibility: hidden;
	&[aria-hidden="false"] {
		visibility: visible;
	}
}

/// @access private
/// @output Shared styles to make a form inline e.g. for for a generic inline form or inline controls.
@mixin _oFormsBaseInlineStyles($class: 'o-forms') {
	// sass-lint:disable mixins-before-declarations no-vendor-prefixes
	$grid-column-gap: 10px;
	display: grid;
	grid-template-columns: 1fr min-content 1fr;
	grid-column-gap: $grid-column-gap;
	-ms-grid-columns: 1fr $grid-column-gap min-content $grid-column-gap 1fr;
	min-width: none;
	align-items: baseline;

	@include _oFormsMessagingElementSelectors($class) {
		grid-column: 1;
		align-self: center;
	}

	// Explicitly position input elements in the css grid.
	// IE10-11 do not support auto placement.
	@include _oFormsInputElementSelectors($class) {
		grid-column: 3;
		-ms-grid-column: 5; // IE10-11 has a fake column for a grid gap.
		grid-row: 1;
		align-self: start; // IE10-11 defaults to stretch with align-items.
	}

	@include _oFormsInputElementSelectors($class, $children-only: false) {
		// Reset margins only if grid is supported.
		@supports (display: grid) {
			margin-top: 0;
		}
		// Reset margins for IE10-11 (@supports unsupported).
		@at-root {
			&,
			_:-ms-lang(x) {
				margin-top: 0;
			}
		}
	}

	// Explicitly position status in the css grid.
	.#{$class}__status {
		grid-column: 3;
		-ms-grid-column: 5; // IE10-11 has a fake column for a grid gap.
		grid-row: 2;
		justify-content: flex-start;
		min-width: none;
		align-self: center;
		align-items: center;
		&:after {
			order: -1;
		}
		&:before {
			order: -1;
		}
	}

	// Hack to display the status icon within the column gap.
	.#{$class}__status--icon-only {
		margin-right: -$grid-column-gap;
		margin-left: $grid-column-gap;
	}

	// Explicitly position error text in the css grid.
	> .#{$class}__errortext {
		grid-column: 3;
		-ms-grid-column: 5; // IE10-11 has a fake column for a grid gap.
		grid-row: 2;
	}

	// For long labels and or additional text.
	// Spans error text so the error text is against its input.
	> .#{$class}__inline-item--long {
		align-self: start;
		grid-row: 1 / span 3;
	}
	// sass-lint:enable mixins-before-declarations no-vendor-prefixes
}

/// @access private
/// @output A provided content block wrapped in selectors for form messaging, such as labels and additonal info.
@mixin _oFormsMessagingElementSelectors($class: 'o-forms') {
	> .#{$class}__label,
	> .#{$class}__additional-info,
	> .#{$class}__inline-item {
		@content;
	}
}

/// @access private
/// @output A provided content block wrapped in selectors for form input elements / groups.
@mixin _oFormsInputElementSelectors($class: 'o-forms', $children-only: true) {
	#{if($children-only, '>', '')} .#{$class}__affix-wrapper,
	#{if($children-only, '>', '')} .#{$class}__text,
	#{if($children-only, '>', '')} .#{$class}__select,
	#{if($children-only, '>', '')} .#{$class}__textarea,
	#{if($children-only, '>', '')} .#{$class}__group,
	#{if($children-only, '>', '')} .#{$class}__inline-item--right {
		@content;
	}
}

/// @access public
/// @output Basic styles shared between input, textarea, select etc.
@mixin oFormsCommonFieldBase {
	@include oBrandConfigureFor('o-forms') {
		@include oTypographySize($_o-forms-typography-scale-regular);
		color: oBrandGet('field-standard-text');
		border-color: oBrandGet('field-standard-border');
		background-color: oBrandGet('field-standard-background');
		margin-top: $_o-forms-spacing;
		box-sizing: border-box;
		width: 100%;
		max-width: $_o-forms-field-max-width;
		min-height: $_o-forms-field-default-height;
		padding: $_o-forms-field-default-padding-top $_o-forms-field-default-padding-leftright $_o-forms-field-default-padding-bottom;
		border: $_o-forms-field-border;
		border-radius: $_o-forms-field-border-radius;
		background-clip: padding-box;
		font-family: $o-forms-font-family;
		outline: none;
		transition: 0.15s box-shadow ease-in;
		appearance: none;

		&:focus {
			@include oFormsCommonFieldFocus;
		}

		&:disabled {
			@include oFormsCommonFieldDisabled;
		}

		&::placeholder {
			color: oBrandGet('field-placholder-text');
		}
	}
}

/// @access public
/// @output Shared focus state styles.
@mixin oFormsCommonFieldFocus {
	@include oBrandConfigureFor('o-forms') {
		border-color: oBrandGet('field-focus-border');
		box-shadow: 0 0 0 2px $o-normalise-focus-color;
	}
}

/// @access public
/// @output Shared disabled state styles.
@mixin oFormsCommonFieldDisabled {
	@include oBrandConfigureFor('o-forms') {
		color: oBrandGet('field-disabled-text');
		border-color: oBrandGet('field-disabled-border');
		background-color: oBrandGet('field-disabled-background');
		cursor: default;
	}
}

/// @access public
/// @output Shared invalid state styles.
@mixin oFormsCommonFieldInvalid {
	@include oBrandConfigureFor('o-forms') {
		&:not(:disabled) {
			color: oBrandGet('field-invalid-text');
			border-color: oBrandGet('field-invalid-border');
			background-color: oBrandGet('field-invalid-background');

			&:focus {
				border-color: oBrandGet('field-invalid-border');
				outline-offset: 0;
			}
		}
	}
}

/// @access public
/// @output Shared valid state styles.
@mixin oFormsCommonFieldValid {
	@include oBrandConfigureFor('o-forms') {
		&:not(:disabled) {
        	color: oBrandGet('field-valid-text');
        	border-color: oBrandGet('field-valid-border');
			background-color: rgba(oBrandGet('field-valid-background'), 0.05);
			&:focus {
				border-color: oBrandGet('field-valid-border');
				outline-offset: 0;
			}
		}
	}
}

/// @access public
/// @output Shared styles to make an input smaller, e.g select or text.
@mixin oFormsCommonSmall {
	padding-top: 0;
	padding-bottom: 0;
	min-height: $_o-forms-field-small-height;
	background-size: $_o-forms-select-small-iconsize $_o-forms-select-small-iconsize;
	background-position-x: 99%; // Make the smaller icon size visually match the padding on the left of the input
	line-height: $_o-forms-field-small-height - ($_o-forms-field-border-width * 2);
}
