////
/// @group Radio & Checkbox
////

/// @access public
/// @param {string} $class - The block level class name (BEM naming convention).
/// @require {mixin} oFormsRadioCheckbox - The shared radio/checkbox styles must be output for this to build upon them.
/// @output Styles for radio inputs.
@mixin oFormsRadio($class: 'o-forms') {
    & + .#{$class}__label::before {
        // Equivalent to border-radius 50%. Fixes an old WebKit bug where rounding wouldn't be applied properly
        border-radius: 9999px;
    }
    &:checked + .#{$class}__label::before {
        // Outer ring changes to teal when the radio button is checked
        border: 1px solid oColorsGetColorFor(o-forms-checkbox-radio-checked, background);
    }
    & + .#{$class}__label::after {
        background-color: oColorsGetColorFor(o-forms-checkbox-radio-checked, background);
        // sass-lint:disable no-vendor-prefixes
        @media screen and (-ms-high-contrast: active) {
 		         background-color: windowText;
        }
        // sass-lint:enable no-vendor-prefixes
        // Equivalent to border-radius 50%. Fixes an old WebKit bug where rounding wouldn't be applied properly
        border-radius: 9999px;
        height: $_o-forms-radio-internal-default-size;
        width: $_o-forms-radio-internal-default-size;
        left: ($_o-forms-radiocheckbox-default-size - $_o-forms-radio-internal-default-size) / 2;
        top: ($_o-forms-radiocheckbox-default-size - $_o-forms-radio-internal-default-size) / 2;
    }
}

/// @access public
/// @param {string} $class - The block level class name (BEM naming convention).
/// @require {mixin} oFormsRadioCheckbox - The shared radio/checkbox styles must be output for this to build upon them.
/// @output Styles for checkbox inputs.
@mixin oFormsCheckbox($class: 'o-forms') {
    & + .#{$class}__label::after {
        @include oIconsGetIcon('tick', oColorsGetPaletteColor('white'), $_o-forms-radiocheckbox-default-size);
        background-color: oColorsGetColorFor(o-forms-checkbox-radio-checked, background);
    }
}

/// Draws a fake control (radio or checkbox) using pseudo-elements.
/// @access public
/// @param {string} $class - The block level class name (BEM naming convention).
/// @output Shared styles of radio and checkbox inputs, including label changes.
@mixin oFormsRadioCheckbox($class: 'o-forms') {
    position: absolute;
    opacity: 0; // better than display: none as it allows tabbing

    & + .#{$class}__label {
        @include _oFormsRadioCheckboxLabel();
    }

    & + .#{$class}__label::before {
        @include oColorsFor(o-forms-field-focus);
        position: absolute;
        top: 0;
        left: 0;
        width: $_o-forms-radiocheckbox-default-size;
        height: $_o-forms-radiocheckbox-default-size;
        border: 1px solid oColorsGetColorFor(o-forms-field-standard, border);
        box-sizing: border-box;
        content: '';
        background-color: oColorsGetColorFor(o-forms-field-standard, background);
        transition: all 0.1s ease-in;
    }

	&:focus + .#{$class}__label::before {
		@include oFormsCommonFieldFocus;
    }

    & + .#{$class}__label::after {
        content: '';
        opacity: 0;
        position: absolute;
        top: 0;
        left: 0;
        transition: 0.1s opacity ease-in;
    }

    &:checked + .#{$class}__label::after {
        opacity: 1;
    }

    &:disabled + .#{$class}__label {
        opacity: 0.4;
        cursor: default;
    }
}

/// @access public
/// @param {string} $class - The block level class name (BEM naming convention).
/// @require {mixin} oFormsRadioCheckbox - The basic checkbox/radio styles must be output for these styles to modify.
/// @output Styles to position radio/checkbox inputs to the right of their label.
@mixin oFormsRadioCheckboxRight($class: 'o-forms') {
    & + .#{$class}__label {
        padding-right: $_o-forms-radiocheckbox-default-size + $_o-forms-label-padding-left;
        padding-left: 0;
        text-align: right;
    }

    & + .#{$class}__label::before,
    & + .#{$class}__label::after {
        right: 0;
        left: auto;
    }
}

/// @access public
/// @param {string} $class - The block level class name (BEM naming convention).
/// @output Styles to wrap a group of checkboxes or a group of radios for purposes of positioning etc.
@mixin oFormsGroupContainer($class: 'o-forms') {
    margin: 0 0 #{-$_o-forms-spacing};

    input + .#{$class}__label {
        width: 100%; // We do not use display:block to maintain consistent margins (not collapsed).
        box-sizing: border-box;
        margin: $_o-forms-checkbox-legend-spacing $_o-forms-checkbox-horizontal-spacing $_o-forms-spacing 0; // margins do not collapse, making the space between checkbox/radio inputs a little larger
        &:last-of-type {
            margin-right: 0;
        }
    }

    &--inline {
        input + .#{$class}__label {
            width: auto;
        }
    }

    &--inline-together {
        @supports (display: grid) {
            display: inline-grid;
            grid-auto-columns: 1fr;
            grid-auto-flow: column;
        }
        input + .#{$class}__label {
            margin-right: 0;
            width: auto;
            float: left; // Float to support non-grid browsers.
        }
        // Float clearfix for non-grid browsers.
        &:after {
            content: "";
            display: table;
            clear: both;
        }
        @supports (display: grid) {
            &:after {
                display: none;
            }
        }
    }
}

/// @access private
/// @require {mixin} oFormsErrorText - Foundation error text styles are required.
/// @output Modifying styles to update the position of error text which pertains to a group.
@mixin _oFormsGroupContainerErrorText {
    margin-top: $_o-forms-checkbox-legend-spacing;
}

/// @access private
/// @output Styles to modify checkbox/radio labels.
@mixin _oFormsRadioCheckboxLabel {
    @include oTypographySize($_o-forms-typography-scale-regular);
    display: inline-block;
    padding-left: $_o-forms-radiocheckbox-default-size + $_o-forms-label-padding-left; // radio/checkboxes are being styled as pseudo-elements, which means we have to account for the width of the radio/checkboxes when adding padding to the labels
    position: relative;
    cursor: pointer;
    font-weight: oFontsWeight('normal');
    padding-top: 2px; // To align the text with the center of the checkbox/radio
    user-select: none;
}

/// @access public
/// @param {string} $class - The block level class name (BEM naming convention).
/// @output Styles for radios which look like a group of buttons, where one can be selected.
@mixin oFormsRadioButtonsStyled($class: 'o-forms') {
    @include oNormaliseVisuallyHidden;
    $sidePadding: 32px;
    & + .#{$class}__label {
        @include oColorsFor(o-forms-radio-buttons-styled, text);
        cursor: pointer;
        font-size: $_o-forms-field-default-font-size;
        font-weight: oFontsWeight('semibold');
        padding: 5px $sidePadding 7px;
        position: relative;
        text-align: center;
        transition: 0.3s background-color, 0.15s color ease-out;
        display: inline-block;
        border-left: 1px solid oColorsGetColorFor(o-forms-radio-buttons-styled, border);
        &:first-of-type {
            margin-left: 3px;
            border-left: 0;
        }
        &:before {
            content: '';
            position: absolute;
            top: -3px;
            right: -3px;
            bottom: -3px;
            left: -3px;
            border: 1px solid oColorsGetColorFor(o-forms-radio-buttons-styled, border);
            border-left: 0;
            border-right: 0;
        }
        &:last-of-type:before {
            border-right: 1px solid oColorsGetColorFor(o-forms-radio-buttons-styled, border);
        }
        &:first-of-type:before {
            border-left: 1px solid oColorsGetColorFor(o-forms-radio-buttons-styled, border);
        }
    }
    &:not(:disabled):not(:checked) + .#{$class}__label:hover {
        background-color: rgba(oColorsGetPaletteColor('teal-50'), 0.15);
    }
    &:checked + .#{$class}__label {
        @include oColorsFor(o-forms-radio-buttons-styled-checked, background);
        @include oColorsFor(o-forms-radio-buttons-styled-checked, text);
    }
    &--negative:checked + .#{$class}__label {
            @include oColorsFor(o-forms-radio-buttons-styled-negative-checked, background);
    }
    &:focus + .#{$class}__label {
        @include oFormsCommonFieldFocus;
        z-index: 1;
    }
    &:disabled + .#{$class}__label {
        opacity: 0.5;
        cursor: default;
        // Hack for odd border break with applied opacity.
        &:last-of-type {
            left: -1px;
            padding-left: $sidePadding + 1;
            position: relative;
        }
    }
}
