/////
/// @group o-overlay
/// @link http://registry.origami.ft.com/components/o-overlay
////

///
/// Base overlay style
///
/// @requires {function} oFontsGetFontFamilyWithFallbacks
/// @requires {function} oColorsGetColorFor
///
@mixin oOverlay {
	position: fixed;
	font-family: oFontsGetFontFamilyWithFallbacks(BentonSans);
	top: 50%;
	left: 50%;
	z-index: 10;
	box-sizing: border-box;
	opacity: 1;
	transition: opacity 0.3s ease-in-out;
	border: $_o-overlay-border-width solid oColorsGetColorFor(o-overlay, border);
	background: oColorsGetColorFor(o-overlay, background);
	border-radius: 5px;
}

///
/// Base overlay modal shadow style
///
@mixin oOverlayShadow {
	// IE8 hack to get the opacity working
	filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0,startColorstr='#33000000', endColorstr='#33000000'); /* IE */
	background-color: rgba(0, 0, 0, 0.2);
	position: fixed;
	height: 150%; // because on some phones scrolling upwards detaches a 100% height overlay from the bottom of the screen
	width: 100%;
	top: 0;
	left: 0;
	z-index: 10;
	opacity: 1;
	transition: opacity 0.3s ease-in-out;
}

///
/// Base overlay heading style
///
/// @requires {mixin} oFtTypographyFontSize
/// @requires {function} oColorsGetColorFor
///
@mixin oOverlayHeading {
	@include oFtTypographyFontSize(16);
	margin: 0;
	overflow: auto;
	background: oColorsGetColorFor(o-overlay-heading, background);
	color: oColorsGetColorFor(o-overlay-heading, text);
	font-weight: bold;
}

///
/// Base overlay title style
///
@mixin oOverlayTitle {
	margin: 10px 0 10px 20px;
	display: block;
	line-height: 20px;
	overflow: auto;
}

///
/// Base overlay close style
///
@mixin oOverlayClose {
	cursor: pointer;
	padding: 10px;
	margin: 0;
	border: 0;
	background: transparent;
	float: right;
	outline: none;
}

///
/// Base overlay close icon style
///
/// @requires {mixin} oColorsFor
/// @requires {function} oColorsGetColorFor
///
@mixin oOverlayCloseIcon {
	width: 18px;
	height: 18px;
	font-size: 15px;
	line-height: 17px;
	border: 1px solid;
	border-radius: 50%;
	@include oColorsFor(o-overlay-close);

	&:after {
		// Hex code for multiplication sign
		content: "\00D7";
	}

	#{$o-hoverable-if-hover-enabled} &:hover {
		color: oColorsGetColorFor(o-overlay-close-shaded, text);
		background-color: oColorsGetColorFor(o-overlay-close-shaded, background);
	}
}

///
/// Base overlay content style
///
@mixin oOverlayContent {
	position: relative;
	box-sizing: border-box;
	overflow: auto;
	padding: 20px;

	> *:first-child {
		margin-top: 0;
	}

	> *:last-child {
		margin-bottom: 0;
	}
}

///
/// Base overlay arrow styles
///
/// @param {String} direction - one of 'top', 'bottom', 'left' or 'right'
/// @requires {mixin} oOverlayUpArrow
/// @requires {mixin} oOverlayDownArrow
/// @requires {mixin} oOverlayLeftArrow
/// @requires {mixin} oOverlayRightArrow
///
@mixin oOverlayArrow($direction) {
	position: absolute;

	@if ($direction == 'top') {
		@include oOverlayUpArrow();
	} @else if ($direction == 'bottom') {
		@include oOverlayDownArrow();
	} @else if ($direction == 'left') {
		@include oOverlayLeftArrow();
	} @else if ($direction == 'right') {
		@include oOverlayRightArrow();
	}
}
