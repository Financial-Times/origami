////
/// @group o-share
/// @link http://registry.origami.ft.com/components/o-share
////

/// Generate base share styles
/// @param {String}
@mixin _oShareBase() {
	.o-share {
		display: inline-block;

		ul {
			margin: 0;
			padding: 0;
		}
	}

	.o-share__action {
		box-sizing: border-box;
		float: left;
		width: $o-share-icon-size;
		height: $o-share-icon-size;
		margin: 0 5px 0 0;
		list-style-type: none;
		line-height: $o-share-icon-size;
		border: 1px solid oColorsByName('black-50');
		cursor: pointer;

		@include oGridRespondTo(S) {
			margin-right: 10px;
		}
	}

	.o-share__text {
		position: absolute;
		clip: rect(0 0 0 0);
		margin: -1px;
		border: 0;
		overflow: hidden;
		padding: 0;
		width: 1px;
		height: 1px;
		white-space: nowrap;
	}

	.o-share__icon {
		display: block;
		position: relative;
		top: -1px;
		left: -1px;
		width: $o-share-icon-size;
		height: $o-share-icon-size;
		border: 0;
		cursor: pointer;
		padding: 0;
		background-color: transparent;

		// Increase the hit target to improve a11y
		&:after {
			position: absolute;
			display: block;
			content: '';
			width: $o-share-icon-size + 5;
			height: $o-share-icon-size + 5;
			top: -2px;
			left: -2px;

			@include oGridRespondTo(S) {
				width: $o-share-icon-size + 10px;
				height: $o-share-icon-size + 10px;
				top: -5px;
				left: -5px;
			}
		}
	}
}

/// Icon
///
/// @param {String}  $name - Name of the icon
/// @param {String}  $classname [o-share] - base class name
/// @param {Boolean} $hover [true] - whether to output the hover styles
@mixin _oShareActionIcon($icon-name, $hover: true) {
	// sass-lint:disable-all
	$scheme: "ftsocial-v#{$o-share-social-icons-version}";

	@if (index($o-share-ft-icons-names, $icon-name)) {
		$scheme: "fticon-v#{$o-share-ft-icons-version}";
	}

	$service-url: "#{$o-share-image-service-base-url}/#{$o-share-image-service-version}/images/raw/#{$scheme}:#{$icon-name}";
	$query: "?source=o-share";

	$hover-color: oColorsByName('white');

	$hover-color: str-slice(ie-hex-str($hover-color), 4);
	$tint: "&tint=%23#{$hover-color},%23#{$hover-color}";

	// scss-lint:disable DuplicateProperty
	.o-share__icon--#{$icon-name}:before {
		content: '';
		display: block;
		width: #{$o-share-icon-size};
		height: #{$o-share-icon-size};
		background-image: url($service-url + $query + "&format=svg");

		// Hack to load icon early to prevent FOIC on hover
		&:after {
			content: '';
			background-image: url($service-url + $query + "&format=svg#{$tint}");
		}
	}

	// Targets displays using any of Windowsâ€™ High Contrast Mode themes:
	// target all high-contrast themes and force a white icon with black background
	@media screen and (-ms-high-contrast: active) {
		$hover-color: oColorsByName('white');

		$hover-color: str-slice(ie-hex-str($hover-color), 4);
		$tint: "&tint=%23#{$hover-color},%23#{$hover-color}";

		.o-share__icon--#{$icon-name}:before {
			background-color: oColorsByName('black');
			background-image: url($service-url + $query + "&format=svg#{$tint}");
		}
	}

	.o-share__icon--#{$icon-name}:hover,
	.o-share__icon--#{$icon-name}:focus {
		$usecase: if(
			index($o-share-ft-icons-names, $icon-name),
			'o-share/ft-icon',
			'o-share/#{$icon-name}-icon'
		);
		border-color: oColorsByUsecase($usecase, 'border');
		background-color: oColorsByUsecase($usecase, 'background');
		&:before {
			background-image: url($service-url + $query + "&format=svg#{$tint}");
		}
	}
	// scss-lint:enable DuplicateProperty
}

@mixin _oShareVertical() {
	.o-share--vertical {
		.o-share__action {
			float: none;
			margin-bottom: 5px;
		}
	}
}

@mixin _oShareInverse($icons) {
	.o-share--inverse {
		.o-share__action:not(:hover) {
			border: 1px solid rgba(oColorsByName('white'), 0.5);
		}

		@each $icon-name in $icons {

			// sass-lint:disable-all
			$scheme: "ftsocial-v#{$o-share-social-icons-version}";

			@if (index($o-share-ft-icons-names, $icon-name)) {
				$scheme: "fticon-v#{$o-share-ft-icons-version}";
			}

			$service-url: "#{$o-share-image-service-base-url}/#{$o-share-image-service-version}/images/raw/#{$scheme}:#{$icon-name}";
			$query: "?source=$system-code";

			$hover-color: oColorsByName('white');

			$hover-color: str-slice(ie-hex-str($hover-color), 4);
			$tint: "&tint=%23#{$hover-color},%23#{$hover-color}";

			.o-share__icon--#{$icon-name} {
				$usecase: if(
					index($o-share-ft-icons-names, $icon-name),
					'o-share/ft-icon',
					'o-share/#{$icon-name}-icon'
				);
				border-color: oColorsByUsecase($usecase, 'border');

				&:before {
					background-image: url($service-url + $query + "&format=svg#{$tint}");

					// Force the background to be black in high-contrast mode
					@media screen and (-ms-high-contrast: active) {
						background-color: oColorsByName('black');
					}
				}
			}
		}
	}
}
