/// Sans font-family
/// @deprecated Output/set font family using the provided mixins.
/// @see '_o-band.scss' where default typography variables are set.
/// @type String
$o-typography-sans: '' !default;

/// Serif font-family
/// @deprecated Output/set font family using the provided mixins.
/// @see '_o-brand.scss' where default typography variables are set.
/// @type String
$o-typography-serif: '' !default;

/// Display font-family
/// @deprecated Output/set font family using the provided mixins.
/// @see '_o-brand.scss' where default typography variables are set.
/// @type String
$o-typography-display: '' !default;

/// Helper for `o-brand` function.
/// @access private
@function _oTypographyGet($variables, $from: null) {
    @return oBrandGet($component: 'o-typography', $variables: $variables, $from: $from);
}

/// Helper for `o-brand` function.
/// @access private
@function _oTypographySupports($variant) {
    @return oBrandSupportsVariant($component: 'o-typography', $variant: $variant);
}

/// Helper for `whitelabel` brand variable customisation.
/// @brand whitelabel
/// @param {Map} $variables - Brand variables to customise
/// @access public
/// @example scss
///    @include oTypographyCustomize((
///        'heading-level-one': (
///            'scale': 7,
///        ),
///        'heading-level-two': (
///            'scale': 6
///        ),
///        'heading-level-three': (
///            'scale': 5
///        ),
///        'heading-level-four': (
///            'scale': 4
///        ),
///        'heading-level-five': (
///            'scale': 3
///        ),
///        'heading-level-six': (
///            'scale': 2
///        ),
///        'body': (
///            'bottom-spacing-size': 8,
///        )
///    ));
@mixin oTypographyCustomize($variables) {
    // Only allow certain brand variables to be customised.
    $allowed-brand-variables: (
        'heading-level-one',
        'heading-level-two',
        'heading-level-three',
        'heading-level-four',
        'heading-level-five',
        'heading-level-six',
        'body',
    );
    @each $brand-variable in map-keys($variables) {
        @if not index($allowed-brand-variables, $brand-variable) {
            @error 'You cannot customise the brand variable "#{$brand-variable}". Did you mean one of: "#{$allowed-brand-variables}"? Please contact the Origami team if you need to customise something new.';
        }
    }
    // Customise the brand.
    @include oBrandCustomize('o-typography', $variables);
}


// Register Georgia font and allowed variants with `o-fonts`.
// Shared by all brands.
@include oFontsDefineCustomFont('Georgia, serif', (
    (weight: regular, style: normal),
    (weight: regular, style: italic),
    (weight: bold, style: normal),
    (weight: bold, style: italic)
));

@if oBrandGetCurrentBrand() == 'master' {
    $o-typography-sans: if($o-typography-sans != '', $o-typography-sans, oFontsGetFontFamilyWithFallbacks(MetricWeb)) !global;
    $o-typography-serif: if($o-typography-serif != '', $o-typography-serif, (Georgia, serif)) !global;
    $o-typography-display: if($o-typography-display != '', $o-typography-display, oFontsGetFontFamilyWithFallbacks(FinancierDisplayWeb)) !global;

    @include oBrandDefine('o-typography', 'master', (
        'variables': (
            'author-color': oColorsGetColorFor('body', 'text'),
            'author-hover-color': oColorsGetPaletteColor('claret'),
            'custom-link-focus-outline-color': oColorsGetPaletteColor('black-50'), //deprecated
            'heading-level-one': (
                'scale': 5,
                'weight': 'semibold'
            ),
            'heading-level-two': (
                'scale': 5
            ),
            'heading-level-three': (
                'scale': 4,
                'weight': 'semibold'
            ),
            'heading-level-four': (
                'scale': 4
            ),
            'heading-level-five': (
                'scale': 3,
                'weight': 'semibold'
            ),
            'heading-level-six': (
                'scale': 2,
                'weight': 'semibold'
            ),
            'body': (
                'font-type': 'serif',
                'bottom-spacing-size': 7,
                'custom-line-height': 28px,
            )
        ),
        'supports-variants': ()
    ));
}

@if oBrandGetCurrentBrand() == 'internal' {
    $o-typography-sans: if($o-typography-sans != '', $o-typography-sans, oFontsGetFontFamilyWithFallbacks(MetricWeb)) !global;
    $o-typography-serif: if($o-typography-serif != '', $o-typography-serif, (Georgia, serif)) !global;
    $o-typography-display: if($o-typography-display != '', $o-typography-display, oFontsGetFontFamilyWithFallbacks(MetricWeb)) !global;

    @include oBrandDefine('o-typography', 'internal', (
        'variables': (
            'custom-link-focus-outline-color': oColorsGetPaletteColor('oxford-80'), //deprecated
            'heading-level-one': (
                'scale': 5,
                'weight': 'semibold'
            ),
            'heading-level-two': (
                'scale': 5
            ),
            'heading-level-three': (
                'scale': 4,
                'weight': 'semibold'
            ),
            'heading-level-four': (
                'scale': 4
            ),
            'heading-level-five': (
                'scale': 3,
                'weight': 'semibold'
            ),
            'heading-level-six': (
                'scale': 2,
                'weight': 'semibold'
            ),
            'body': (
                'bottom-spacing-size': 7,
            )
        ),
        'supports-variants': ()
    ));
}

@if oBrandGetCurrentBrand() == 'whitelabel' {
    // Register Arial font with `o-fonts`.
    @include oFontsDefineCustomFont('Arial, sans', (
        (weight: regular, style: normal),
        (weight: regular, style: italic),
        (weight: semibold, style: normal),
        (weight: bold, style: normal),
        (weight: semibold, style: italic),
        (weight: bold, style: italic)
    ));

    $o-typography-sans: if($o-typography-sans != '', $o-typography-sans, (Arial, sans)) !global;
    $o-typography-serif: if($o-typography-serif != '', $o-typography-serif, (Georgia, serif)) !global;
    $o-typography-display: if($o-typography-display != '', $o-typography-display, (Arial, sans)) !global;

    // Other components may get values from the scale map and assume a px value.
    // Therefore we must set a line height of px value.
    // @breaking Allow scale to have `null` line-heights, for the default browser line height.
    $o-typography-font-scale: (
       -2: (12, (12 * 1.2)),
       -1: (14, (14 * 1.2)),
        0: (16, (16 * 1.2)),
        1: (18, (18 * 1.2)),
        2: (20, (20 * 1.2)),
        3: (24, (24 * 1.2)),
        4: (28, (28 * 1.2)),
        5: (32, (32 * 1.2)),
        6: (40, (40 * 1.2)),
        7: (48, (48 * 1.2)),
        8: (56, (56 * 1.2)),
        9: (72, (72 * 1.2)),
       10: (84, (84 * 1.2)),
    ) !global;

    @include oBrandDefine('o-typography', 'whitelabel', (
        'variables': (
            'heading-level-one': (
                'scale': 6,
            ),
            'heading-level-two': (
                'scale': 5
            ),
            'heading-level-three': (
                'scale': 4
            ),
            'heading-level-four': (
                'scale': 3
            ),
            'heading-level-five': (
                'scale': 2
            ),
            'heading-level-six': (
                'scale': 1
            ),
            'body': (
                'bottom-spacing-size': 7,
            )
        ),
        'supports-variants': ()
    ));
}
