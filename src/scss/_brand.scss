/// Helper for `o-brand` function.
/// @access private
@function _oButtonsGet($variables, $from: null) {
	@return oBrandGet($component: 'o-buttons', $variables: $variables, $from: $from);
}

/// Helper for `o-brand` function.
/// @access private
@function _oButtonsSupports($variant) {
	@return oBrandSupportsVariant($component: 'o-buttons', $variant: $variant);
}

$_o-buttons-shared-brand-config: (
	'scale': -1,
	'background-size': 21px, // Magic number to reduce poor antialiasing on icons at small sizes
	'min-height': 28px,
	'min-width': 60px,
	'padding': 0 8px,
	'icon-padding': 22px,
	'big': (
		'scale': 0,
		'background-size': 40px,
		'min-height': 40px,
		'min-width': 80px,
		'padding': 0 20px,
		'icon-padding': 40px
	),
);

@if oBrandGetCurrentBrand() == 'master' {
	@include oBrandDefine('o-buttons', 'master', (
		'variables': map-merge($_o-buttons-shared-brand-config, (
			'color': 'teal',
			'inverse': (
				'color': 'white',
				'context': 'slate'
			),
			'mono': (
				'color': 'slate'
			),
			'b2c': (
				'color': 'org-b2c-dark'
			)
		)),
		'supports-variants': (
			'primary',
			'secondary',
			'primary-b2c',
			'primary-inverse',
			'primary-mono',
			'secondary-inverse',
			'secondary-mono',
		))
	);
}

@if oBrandGetCurrentBrand() == 'internal' {
	@include oBrandDefine('o-buttons', 'internal', (
		'variables': map-merge($_o-buttons-shared-brand-config, (
			'color': 'teal',
			'inverse': (
				'color': 'white',
				'context': 'slate'
			),
			'mono': (
				'color': 'slate'
			)
		)),
		'supports-variants': (
			'primary',
			'primary-inverse',
			'primary-mono',
			'secondary',
			'secondary-inverse',
			'secondary-mono'
		))
	);
}

@if oBrandGetCurrentBrand() == 'whitelabel' {
	@include oBrandDefine('o-buttons', 'whitelabel', (
		'variables': map-merge($_o-buttons-shared-brand-config, (
			'color': 'black'
		)),
		'supports-variants': (
			'primary',
			'secondary',
		)
	));
}
