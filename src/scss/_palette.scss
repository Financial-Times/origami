

// Define universal primary palette.
$_o-colors-default-palette-colors: join((
	('transparent', transparent),
), $_o-colors-default-palette-colors);

// Master brand palette.
@if oBrandGetCurrentBrand() == master {
	$_o-colors-default-palette-colors: join((
		// primary palette
		('black', #000000),
		('white', #ffffff),
		('ft-pink', #fcd0b1),
		('brand-ft-pink', #fcd0b1, ('deprecated': 'Replace "brand-ft-pink" with "ft-pink". This is so we can align our naming with our designers, including the Brand team.')),
		('ft-grey', #333333),

		//secondary palette
		('claret', #990f3d, ('allow-tones': true)),
		('teal', #0d7680, ('allow-tones': true)),
		('oxford', #0f5499, ('allow-tones': true)),
		('slate', #262a33),
		('paper', #fff1e5),

		//tertiary palette
		('mandarin', #ff8833),
		('light-blue', #00a0dd),
		('crimson', #cc0000),
		('graphics-dark-blue', #006f9b),
		('wheat', #f2dfce, ('allow-tones': true)),
		('candy', #ff7faa),
		('wasabi', #96cc28),
		('jade', #00994d),
		('velvet', #593380),
		('lemon', #ffec1a),
		('sky', #cce6ff),

		//b2c palette
		('org-b2c', #4e96eb),
		('org-b2c-dark', #3a70af),
		('org-b2c-light', #99c6fb),

		//partner content palette
		('matisse', #355778),
	), $_o-colors-default-palette-colors);
}

// Internal brand palette.
@if oBrandGetCurrentBrand() == internal {
	$_o-colors-default-palette-colors: join((
		// primary palette
		('black', #000000),
		('white', #ffffff),
		('oxford', #0f5499, ('allow-tones': true)),
		('teal', #0d7680, ('allow-tones': true)),

		//secondary palette
		('lemon', #ffec1a),
		('slate', #262a33),
		('slate-white-15', #dedfe0), // oColorsMix('slate', 'white', 15)
		('slate-white-5', #f4f4f5), // oColorsMix('slate', 'white', 5)

		//tertiary palette
		('jade', #00994d),
		('crimson', #cc0000),
		('mandarin', #ff8833)
	), $_o-colors-default-palette-colors);
}

// Whitelabel brand palette.
@if oBrandGetCurrentBrand() == 'whitelabel' {
	$_o-colors-default-palette-colors: join((
		// primary palette
		('black', #000000),
		('white', #ffffff),
		//tertiary palette
		('jade', #00994d),
		('crimson', #cc0000)
	), $_o-colors-default-palette-colors);
}

// Default palette tones.
@if oBrandGetCurrentBrand() == master {
	$_o-colors-default-palette-tones: map-merge((
		'claret': (30, 40, 50, 60, 70, 80, 90, 100),
		'oxford': (30, 40, 50, 60, 70, 80, 90, 100),
		'teal': (20, 30, 40, 50, 60, 70, 80, 90, 100)
	), $_o-colors-default-palette-tones);
}

@if oBrandGetCurrentBrand() == internal {
	$_o-colors-default-palette-tones: map-merge((
		'oxford': (30, 40, 50, 60, 70, 80, 90, 100),
		'teal': (20, 30, 40, 50, 60, 70, 80, 90, 100),
	), $_o-colors-default-palette-tones);
}

@if oBrandGetCurrentBrand() == whitelabel {
	$_o-colors-default-palette-tones: map-merge((), $_o-colors-default-palette-tones);
}

// Default palette mixes.
@if oBrandGetCurrentBrand() == master {
	$_o-colors-default-palette-mixes: (
		'black': (5, 10, 20, 30, 40, 50, 60, 70, 80, 90),
		'white': (10, 20, 40, 60, 80)
	);
}

@if oBrandGetCurrentBrand() == internal {
	$_o-colors-default-palette-mixes: (
		'black': (5, 10, 20, 30, 40, 50, 60, 70, 80, 90)
	);
}

@if oBrandGetCurrentBrand() == whitelabel {
	$_o-colors-default-palette-mixes: (
		'black': (5, 10, 20, 30, 40, 50, 60, 70, 80, 90)
	);
}
