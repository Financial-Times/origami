@mixin oMessageAddState($name, $opts, $types) {
	// If no options are given assume we are adding a default state.
	// @see _brand.scss for configuration by name.
	$opts: if($opts, $opts, $name);
	.o-message.o-message--#{$name} {
		@include _oMessageState($name, $opts, $types);
	}
}

/// message state styling
/// @param {String} $opts - the name of the state for the message ('success', 'neutral', 'error', 'warning', 'warning-light', 'inform', 'inform-inverse')
/// @access private
@mixin _oMessageState($name, $opts, $types) {
	$error-message: 'Cannot add o-message state "#{$name}"';
	// get foreground colour
	$foreground-color-arg: _oMessageGet('foreground-color', $from: $opts);
	$foreground-color: if(
		type-of($foreground-color-arg) == 'string',
		oColorsByName($foreground-color-arg),
		$foreground-color-arg
	);
	// get highlight colour
	$highlight-color-arg: _oMessageGet('highlight-color', $from: $opts);
	$highlight-color: if(
		type-of($highlight-color-arg) == 'string',
		oColorsByName($highlight-color-arg),
		$highlight-color-arg
	);
	// get background colour
	$background-color-arg: _oMessageGet('background-color', $from: $opts);
	$background-color: if(
		type-of($background-color-arg) == 'string',
		oColorsByName($background-color-arg),
		$background-color-arg
	);

	// Confirm minimum foreground contrast ratio.
	@if $foreground-color {
		$foreground-contrast: oColorsGetContrastRatio(
			$foreground-color,
			$background-color
		);
		@if($foreground-contrast < 4.5) {
			@error ('#{$error-message}: The foreground colour ' +
			'"#{$foreground-color-arg}" and background colour ' +
			'"#{$background-color-arg}" do not pass WCAG AA contrast checks.');
		}
	}

	// Confirm minimum highlight contrast ratio.
	@if $highlight-color {
		$highlight-contrast: oColorsGetContrastRatio(
			$highlight-color,
			$background-color
		);
		@if($highlight-contrast < 4.5) {
			@error ('#{$error-message}: The highlight colour ' +
			'"#{$highlight-color-arg}" and background colour ' +
			'"#{$background-color-arg}" do not pass WCAG AA contrast checks.');
		}
	}

	// set default foreground and background colour
	color: $foreground-color;
	background-color: $background-color;

	// class to set the highlight colour
	.o-message__content-highlight-color {
		color: $highlight-color;
	}

	// content links
	.o-message__content-main a,
	.o-message__content-additional a {
		@include oTypographyLink(
			$theme: (
				'base':  $foreground-color,
				'hover':  $foreground-color,
				'context':  $background-color
			),
			$include-base-styles: false
		);
	}

	// action button
	.o-message__actions__primary {
		$button-type: _oMessageGet('button-type', $from: $opts);
		$button-type: if($button-type, $button-type, 'secondary');
		$button-color: if($highlight-color, $highlight-color, $foreground-color);
		@include oButtonsContent((
			'type': $button-type,
			'theme': (
				'color': $button-color,
				'context': $background-color
			)
		), $include-base-styles: false);
		margin-right: oSpacingByName('s6');
	}

	// action link
	.o-message__actions__secondary {
		@include oTypographyLink(
			$theme: (
				'base':  $foreground-color,
				'hover':  $foreground-color,
				'context':  $background-color
			),
			$include-base-styles: false
		);
	}

	// state icon, only for alert messages
	$state-icon: _oMessageGet('icon', $from: $opts);
	$supports-alert-type: index($types, 'alert');
	@if ($supports-alert-type and not $state-icon) {
		@error '#{$error-message}: To support the "alert" type include an "icon". ' +
			'If an alert with icon is not needed update the "types" argument.';
	}

	@if $supports-alert-type and $state-icon {
		&.o-message--alert .o-message__container:before {
			@include _oMessageIcon($state-icon, $foreground-color, $_o-message-alert-icon-size);
			min-width: $_o-message-alert-icon-size * 1px;
			position: absolute;
		}
	}

	.o-message__close {
		@include _oMessageIcon('cross', $foreground-color, $_o-message-close-icon-size);
		position: absolute;
		top: ($_o-message-close-icon-size / 2) * 1px;
		right: oSpacingByName('s2');
		vertical-align: middle;
		border: 0;
	}
}
