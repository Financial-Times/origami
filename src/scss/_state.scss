/// message status styling
/// @param {String} $state - the name of the status for the message ('success', 'neutral', 'error', 'warning', 'warning-light', 'inform', 'inform-inverse')
/// @access private
@mixin _oMessageState ($state) {
	// get foreground colour
	$foreground-color: _oMessageGet('foreground-color', $from: $state);
	$foreground-color: if(type-of($foreground-color) == 'string', oColorsByName($foreground-color), $foreground-color);
	// get background colour
	$background-color: _oMessageGet('background-color', $from: $state);
	$background-color: if(type-of($background-color) == 'string', oColorsByName($background-color), $background-color);

	.o-message--#{$state} {
		color: $foreground-color;
		background-color: $background-color;

		.o-message__content-main a,
		.o-message__content-additional a {
			@include oTypographyLink(
				$theme: (
					'base':  $foreground-color,
					'hover':  $foreground-color,
					'context':  $background-color
				),
				$include-base-styles: false
			);
		}

		.o-message__actions__primary {
			@include oButtonsContent((
				'type': 'secondary',
				'theme': (
					'color': $foreground-color,
					'context': $background-color
				)
			), $include-base-styles: false);
			margin-right: oSpacingByName('s6');
		}

		.o-message__actions__secondary {
			@include oTypographyLink(
				$theme: (
					'base':  $foreground-color,
					'hover':  $foreground-color,
					'context':  $background-color
				),
				$include-base-styles: false
			);
		}

		@if (_oMessageGet('icon', $from: $state)) {
			.o-message__container:before {
				@include _oMessageIcon(_oMessageGet('icon', $from: $state), $foreground-color, $_o-message-alert-icon-size);
				min-width: $_o-message-alert-icon-size * 1px;
				position: absolute;
			}
		}

		.o-message__close {
			@include _oMessageIcon('cross', $foreground-color, $_o-message-close-icon-size);
			position: absolute;
			top: ($_o-message-close-icon-size / 2) * 1px;
			right: oSpacingByName('s2');
			vertical-align: middle;
			border: 0;
		}
	}
}
