/// Silent mode
/// @type Bool
/// @access public
$o-colors-is-silent: true !default;

/// Ensure default mixins are only called once
/// @type Bool
/// @access private
$_o-colors-is-initialised: false !default;

/// A map to define default palette colours:
/// A list of arguments for `oColorsSetColor`, except the project name.
///
/// @see _oColorsSetDefaultPaletteColors
/// @see oColorsSetColor
/// @type List
/// @access private
$_o-colors-default-palette-colors: () !default;

/// A map to define default tones in the palette.
/// This is also used to decide which colours are
/// allowed to have tones, when users request a
/// non-default tone.
/// @see _oColorsSetPaletteTones
/// @type Map
/// @access private
$_o-colors-default-palette-tones: ();

/// A map to define default mixes in the palette.
/// @see _oColorsSetPaletteMixes
/// @type Map
/// @access private
$_o-colors-default-palette-mixes: ();

/// A map to define default colour usecases:
/// A list of arguments for `oColorsSetUseCase`, except the project name.
///
/// @see _oColorsSetDefaultUsecases
/// @see oColorsSetUseCase
/// @type List
/// @access private
$_o-colors-default-usecases: () !default;

/// A map to store all set colour usecases.
/// @see oColorsSetUseCase
/// @type Map
/// @access private
$_o-colors-usecases: () !default;

/// A map to store all set palette colours.
/// @see oColorsSetColor
/// @type Map
/// @access private
$_o-colors-palette: () !default;

/// A list of keys to indicate warnings which have been output,
/// so that they aren't output a second time.
/// @access private
/// @type List
$_o-colors-deprecation-warnings-output: ();

/// Function errors may return a string rather than error
/// when in test mode, so automated tests may assert errors.
/// @access private
/// @type Bool
$_o-colors-test-environment: false !default;
