/// @access private
/// @param {String} $logo [ft-logo depending on brand (pink or white)]
/// @outputs styling for title section of header
@mixin _oHeaderServicesTop($logo) {
	.o-header-services__top {
		@include oGridContainer;
		background-color: _oHeaderServicesGet('top-background');
		color: _oHeaderServicesGet('top-text');
		display: flex;
		overflow: hidden;
		z-index: $_o-header-services-top-bar-z-index;

		a {
			color: inherit;
		}
	}

	.o-header-services__title {
		display: flex;
		align-items: center;
	}

	@if $logo {
		.o-header-services__logo {
			background-image: url(_oHeaderServicesLogo($logo));
			background-repeat: no-repeat;
			background-size: contain;
			background-position: 0;
			margin: 0;
			height: $_o-header-services-top-bar-short;
			width: $_o-header-services-top-bar-short;

			@include oGridRespondTo(M) {
				margin: oTypographySpacingSize(2) oTypographySpacingSize(2) oTypographySpacingSize(2) 0;
				height: $_o-header-services-top-icon-size;
				width: $_o-header-services-top-icon-size;
			}
		}

		.o-header-services__title {
			padding-left: 10px;
		}
	}

	.o-header-services__hamburger {
		height: $_o-header-services-top-bar-short;
		width: $_o-header-services-top-bar-short;
		@include oGridRespondTo(M) {
			display: none;
		}
	}

	.o-header-services__hamburger-icon {
		@include oIconsGetIcon(
			$icon-name: 'hamburger',
			$color: _oHeaderServicesGet('top-text'),
			$container-width: $_o-header-services-top-icon-size
		);
		height: $_o-header-services-top-bar-short;
		width: $_o-header-services-top-bar-short;
		transition: transform 0.2s ease;

		&.o-header-services__hambuger--open {
			transform: rotate(90deg);
		}
	}

	.o-header-services__product-name {
		@include oTypographySize($scale: 4);
		@include oTypographyBold('sans');
		text-overflow: ellipsis;

		@include oGridRespondTo($until: M) {
			@include oTypographySize($scale: 2);
		}
	}

	.o-header-services__product-tagline {
		@include oTypographySize($scale: 3);
		margin-left: $_o-header-services-padding;
		text-overflow: ellipsis;
		overflow: hidden;

		@include oGridRespondTo($until: L) {
			display: none;
		}
	}

	.o-header-services__related-content {
		margin: 0 0 0 auto;
		padding: oTypographySpacingSize(3)/2 $_o-header-services-padding;
		display: flex;

		li {
			background-color: _oHeaderServicesGet('top-background');

			@if _oHeaderServicesGet('nav-background') == _oHeaderServicesGet('nav-hover-background') {
				&:hover:before {
					content: none;
				}
			}

			a {
				@include oTypographyBold('sans');
				margin: 0;
				color: _oHeaderServicesGet('top-text');

				@include oGridRespondTo($from: M) {
					display: block;
					padding: $_o-header-services-padding oTypographySpacingSize(3);
					margin: 0;
				}


				&:hover {
					text-decoration: underline;
					background-color: transparent;
				}
			}
		}
	}
};
