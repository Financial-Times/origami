---
import {getCollection} from "astro:content"
import DocLayout from "@/layouts/DocLayout.astro"

import {convertToSlug, formatDateString} from "@/helpers/utils"

export async function getStaticPaths() {
	const postEntries = await getCollection("posts")
	return postEntries.map(entry => ({
		params: {slug: entry.slug},
		props: {entry},
	}))
}

const {entry} = Astro.props
const {Content} = await entry.render()
const slugifiedName = convertToSlug(entry.data.title)
const formatedDateString = formatDateString(entry.data.publishDate)
const tags = entry.data?.tags?.length > 0 && entry.data.tags.join(",")
const hasCharts = entry.data.hasCharts

---

<DocLayout>
	<h1 id={slugifiedName} class="o-layout__linked-heading">
		<a
			href={`#${slugifiedName}`}
			title="Link directly to this section of the page"
			class="o-layout__linked-heading__link"
		>
			<span class="o-layout__linked-heading__content">{entry.data.title}</span>
			<span class="o-layout__linked-heading__label">#</span>
		</a>
	</h1>
	<p>
		Posted on <time datetime={entry.data.datePublished}
			>{formatedDateString}</time
		>
		by {entry.data.author}.
		{
			tags && (
				<>
					<br />
					Tagged with <span>{tags}</span>
				</>
			)
		}
	</p>
	{}
	<p>
		<abbr title="Too long; didn't read">
			<strong>TL;DR:</strong>
		</abbr>{entry.data.tldr || entry.data.description}
	</p>
	<Content />
</DocLayout>

{
	hasCharts && (
		<>
			<script
				src="https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/Chart.min.js"
				integrity="sha256-R4pqcOYV8lt7snxMQO/HSbVCFRPMdrhAFMH+vr9giYI="
				crossorigin="anonymous"
				defer
			/>
			<script src="/assets/charts.js" defer />
		</>
	)
}
