---
import { Icon } from '@astrojs/starlight/components';
---

{/* This is intentionally inlined to avoid FOUC. */}
<script is:inline>
	window.StarlightThemeProvider = (() => {
		const storedTheme =
			typeof localStorage !== 'undefined' && localStorage.getItem('starlight-theme');
		const theme =
			storedTheme || 'core';
		document.documentElement.dataset.theme = 'light';
        document.addEventListener('DOMContentLoaded', () => {
            document.querySelector('.main-pane')?.classList.remove(`o3-brand-core`);
            document.querySelector('.main-pane')?.classList.remove(`o3-brand-professional`);
            document.querySelector('.main-pane')?.classList.remove(`o3-brand-internal`);
            document.querySelector('.main-pane')?.classList.remove(`o3-brand-whitelable`);
            document.querySelector('.main-pane')?.classList.remove(`o3-brand-sustainable-views`);
            document.querySelector('.main-pane')?.classList.add(`o3-brand-${theme}`);

        })
		return {
			updatePickers(theme = storedTheme || 'auto') {
				document.querySelectorAll('starlight-theme-select').forEach((picker) => {
					const select = picker.querySelector('select');
					if (select) select.value = theme;
					/** @type {HTMLTemplateElement | null} */
					const tmpl = document.querySelector(`#theme-icons`);
					const newIcon = tmpl && tmpl.content.querySelector('.' + theme);
					if (newIcon) {
						const oldIcon = picker.querySelector('svg.label-icon');
						if (oldIcon) {
							oldIcon.replaceChildren(...newIcon.cloneNode(true).childNodes);
						}
					}
				});
			},
		};
	})();
</script>

<template id="theme-icons">
	<Icon name="laptop" class="core" label="Core" />
	<Icon name="laptop" class="professional" label="Professional" />
	<Icon name="laptop" class="internal" label="Internal" />
	<Icon name="laptop" class="whitelable" label="Whitelable" />
	<Icon name="laptop" class="sustainable-views" label="Sustainable Views" />
</template>
