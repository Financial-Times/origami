---
const allTokens = await import(`@financial-times/o3-tooling-token/${Astro.props.brand}.js`);

// Extract type scale tokens
const typeScaleTokens = Object.entries(allTokens.default).filter(([key]) => key.includes('o3-font-lineheight-') || key.includes('o3-font-size-'));
const typeScaleDetails = typeScaleTokens.map(([_key, value]) => ({
	scale: parseInt(value.shortName.replace('negative', '').trim()),
	type: value.type,
	value: value.value,
	figma: value.figma,
	css: value.css,
	originalValue: value.originalValue,
}));

// Combine line height and font size tokens into a single object.
const typeScale = {};
typeScaleDetails.forEach(token => {
	typeScale[token.scale] = typeScale[token.scale] || {};
	typeScale[token.scale][token.type] = token;
});

// Order iterable type scale.
const typeScaleOrdered = Object.entries(typeScale).sort((a, b) => {
	return parseInt(a[0]) > parseInt(b[0]) ? 1 : -1
});
---

<table class="type-scale-table">
	<thead>
		<tr>
			<th width="230px">Sample</th>
			<th width="70px">Scale</th>
			<th>Font Size</th>
			<th>Line Height</th>
		</tr>
	</thead>
	<tbody>
	{
		typeScaleOrdered.map(([scaleKey, scale]) => {

			return (<tr>
					<td
						class="token-sample"
						style=`line-height: ${scale.lineHeights.value}; font-size: ${scale.fontSizes.value}`>Don't settle for black and white
					</td>
					<td>{scaleKey}</td>
					<td class="token-value">{scale.fontSizes.css} <br> ({scale.fontSizes.value} / {scale.fontSizes.originalValue}px)</td>
					<td class="token-value">{scale.lineHeights.css} <br> ({scale.lineHeights.value} / {scale.lineHeights.originalValue}px)</td>
					</tr>)
		})
	}
	</tbody>
</table>

<style>

	@font-face {
		src: url('https://www.ft.com/__origami/service/build/v3/font?version=1.13&font_name=Metric2-VF&system_code=origami&font_format=woff2')
			format('woff2');
		font-family: 'Metric2-VF';
		font-weight: 500;
		font-style: normal;
		type-scale-table: swap;
	}

	.token-sample {
		vertical-align: center;
		font-weight: 500;
		font-family: 'Metric2-VF', sans-serif;
		overflow: hidden;
	}

	.type-scale-table.type-scale-table {
        display: table;
        width: 100%;
        table-layout: fixed;
    }

	.type-scale-table.type-scale-table th {
		text-align: left;
	}

</style>
