---
import StarlightPage from '@astrojs/starlight/components/StarlightPage.astro';
import {getCollection} from 'astro:content';
import {formatDateString, generateBlogPostURL} from '@/helpers/utils';

const title = 'Origami Blog';
const description =
	'A blog for announcements relating to the Origami team, components, and services.';
const template = 'splash';

const allPosts = await getCollection('posts');
const sortedPosts = allPosts.sort(
	(a, b) => b.data.publishDate - a.data.publishDate
);

const postsByYearMap = Map.groupBy(allPosts, ({data}) => {
	const date = new Date(data.publishDate);
	return date.getFullYear();
});

const postsByYear = Array.from(postsByYearMap);


---

<style>

	ol {
		padding: 0;
	}
	li {
		list-style-type: none;
	}
</style>



<StarlightPage
	frontmatter={{
		title: 'Origami Blog',
	}}
	headings={
		postsByYearMap.keys().map(year => ({
	depth: 2,
	text: year,
	slug: `blog-${year}`
}))
	}
>
	<p>
		A blog for announcements relating to the Origami team, components, and
		services.
		<a href="/feed.xml">Subscribe to our feed for updates</a>.
	</p>


		{
			postsByYear.map(([year, posts]) => {
				return (
					<h2 id={`blog-${year}`}>{year}</h2>
					<ol>
						{posts.map(post => {
						return <li>
							<h3 className="blog-post-link">
								<a href={'/blog/' + generateBlogPostURL(post.slug)}>
									{post.data.title}
								</a>
							</h3>
							{post.data.description.length !== 0 && (
								<p>{post.data.description}</p>
							)}
							<p>
								Posted {formatDateString(post.data.publishDate)} by{' '}
								{post.data.author}.
								{post.data.tags && <span> Tagged {post.data.tags}.</span>}
							</p>
						</li>
						})}
					</ol>
				);
			})
		}

</StarlightPage>
