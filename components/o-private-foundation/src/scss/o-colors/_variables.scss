/// Ensure default mixins are only called once
/// @type Bool
/// @access private
$_o-pf-colors-is-initialised: false !default;

/// A map to define default palette colours:
/// A list of arguments for `oPrivateColorsSetColor`, except the project name.
///
/// @see _oPrivateColorsSetDefaultPaletteColors
/// @see oPrivateColorsSetColor
/// @type List
/// @access private
$_o-pf-colors-default-palette-colors: () !default;

/// A map to define default tones in the palette.
/// This is also used to decide which colours are
/// allowed to have tones, when users request a
/// non-default tone.
/// @see _oPrivateColorsSetPaletteTones
/// @type Map
/// @access private
$_o-pf-colors-default-palette-tones: ();

/// A map to define default mixes in the palette.
/// @see _oPrivateColorsSetPaletteTones
/// @type Map
/// @access private
$_o-pf-colors-default-palette-mixes: ();

/// A map to define default colour usecases:
/// A list of arguments for `oPrivateColorsSetUseCase`, except the project name.
///
/// @see _oPrivateColorsSetDefaultPaletteColors
/// @see oPrivateColorsSetUseCase
/// @type List
/// @access private
$_o-pf-colors-default-usecases: () !default;

/// A map to store all set colour usecases.
/// @see oPrivateColorsSetUseCase
/// @type Map
/// @access private
$_o-pf-colors-usecases: () !default;

/// A map to store all set palette colours.
/// @see oPrivateColorsSetColor
/// @type Map
/// @access private
$_o-pf-colors-palette: () !default;

/// Function errors may return a string rather than error
/// when in test mode, so automated tests may assert errors.
/// @access private
/// @type Bool
$_o-pf-colors-test-environment: false !default;

/// Is the current execution context the oColors primary mixin?
/// This can be helpful to know internally to provide alternate
/// behaviour, e.g. reduce warning noise if a user is outputting
/// all available styles – including deprecated styles – without
/// necessarily using them directly.
/// @access private
/// @type Bool
$_o-pf-colors-mixin-output: false !default;
