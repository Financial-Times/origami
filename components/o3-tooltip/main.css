@import '@financial-times/o3-web-token/icons.css';

@font-face {
	src: url('https://www.ft.com/__origami/service/build/v3/font?version=1.13&font_name=Metric2-VF&system_code=origami&font_format=woff2')
		format('woff2');
	font-family: 'Metric2-VF';
	font-weight: 400;
	font-style: normal;
	font-display: swap;
}

o3-tooltip {
	--_o3-tooltip-padding-top: var(--o3-spacing-3xs);
	--_o3-tooltip-padding-right: var(--o3-spacing-2xs);
	--_o3-tooltip-close-button-size: var(--o3-spacing-xs);

	position: absolute;
	top: 0;
	left: 0;
	z-index: 10;
}
o3-tooltip > .o3-tooltip-wrapper {
	box-sizing: border-box;
	width: max-content;
	max-width: 250px;
	/* TODO: Values are copied from figma but this can be replaced by tokens */
	box-shadow: 2px 2px 6px 0px rgba(26, 26, 26, 0.1),
		5px 5px 24px 0px rgba(26, 26, 26, 0.17);
	background: #ffffff;
	font-weight: var(--o3-font-weight-regular);
	font-family: var(--o3-font-family-metric), sans-serif;
	font-size: var(--o3-font-size-negative-1);
}

.o3-tooltip-content {
	position: relative;
	box-sizing: border-box;
	overflow: auto;
	padding: var(--_o3-tooltip-padding-top) var(--_o3-tooltip-padding-right)
		var(--_o3-tooltip-padding-right);
	margin-right: var(--_o3-tooltip-close-button-size);
	hyphens: auto;
}

.o3-tooltip-content-title {
	font-weight: var(--o3-font-weight-semibold);
	font-size: var(--o3-font-size-0);
	color: inherit;
	margin-bottom: var(--o3-spacing-4xs);
}
/* CLOSE BUTTON */
.o3-tooltip-wrapper .o3-tooltip-close {
	width: var(--_o3-tooltip-close-button-size);
	height: var(--_o3-tooltip-close-button-size);
	mask-image: var(--o3-icons-ft-icon-cross);
	mask-repeat: no-repeat;
	mask-size: contain;
	display: inline-block;
	background-color: var(--o3-color-palette-black-90);
	position: absolute;
	top: var(--_o3-tooltip-padding-top);
	right: var(--_o3-tooltip-padding-right);
	cursor: pointer;
	user-select: none;
}

.o3-tooltip-wrapper .o3-tooltip-close:hover {
	background-color: var(--o3-color-palette-black-30);
}

.o3-tooltip-wrapper .o3-tooltip-close:active {
	background-color: var(--o3-color-palette-black-50);
}

/* ARROW STYLES */
o3-tooltip > .o3-tooltip-wrapper > [data-tooltip-arrow],
o3-tooltip > .o3-tooltip-wrapper > [data-tooltip-arrow]::before {
	--_o3-tooltip-arrow-size: 20px;
	--_o3-tooltip-arrow-offset: calc(var(--_o3-tooltip-arrow-size) / 2);
	--_o3-tooltip-negative-arrow-offset: calc(-1 * var(--_o3-tooltip-arrow-offset));
	position: absolute;
	width: var(--_o3-tooltip-arrow-size);
	height: var(--_o3-tooltip-arrow-size);
	background: inherit;
}
o3-tooltip > .o3-tooltip-wrapper > [data-tooltip-arrow]::before {
	visibility: visible;
	content: '';
	transform: rotate(45deg);
}

o3-tooltip [data-tooltip-arrow] {
	visibility: hidden;
}

o3-tooltip[data-popper-placement^='top']
	> .o3-tooltip-wrapper
	> [data-tooltip-arrow] {
	bottom: var(--_o3-tooltip-negative-arrow-offset);
}

o3-tooltip[data-popper-placement^='bottom']
	> .o3-tooltip-wrapper
	> [data-tooltip-arrow] {
	top: var(--_o3-tooltip-negative-arrow-offset);
}

o3-tooltip[data-popper-placement^='left']
	> .o3-tooltip-wrapper
	> [data-tooltip-arrow] {
	right: var(--_o3-tooltip-negative-arrow-offset);
}

o3-tooltip[data-popper-placement^='right']
	> .o3-tooltip-wrapper
	> [data-tooltip-arrow] {
	left: var(--_o3-tooltip-negative-arrow-offset);
}

o3-tooltip[data-popper-placement='top-start']
	> .o3-tooltip-wrapper
	> [data-tooltip-arrow] {
	left: var(--_o3-tooltip-arrow-offset);
}

o3-tooltip[data-popper-placement='top-end']
	> .o3-tooltip-wrapper
	> [data-tooltip-arrow] {
	right: var(--_o3-tooltip-arrow-offset);
}

o3-tooltip[data-popper-placement='top']
	> .o3-tooltip-wrapper
	> [data-tooltip-arrow] {
	left: 50%;
	transform: translateX(-50%);
}

o3-tooltip[data-popper-placement='bottom-start']
	> .o3-tooltip-wrapper
	> [data-tooltip-arrow] {
	left: var(--_o3-tooltip-arrow-offset);
}

o3-tooltip[data-popper-placement='bottom-end']
	> .o3-tooltip-wrapper
	> [data-tooltip-arrow] {
	right: var(--_o3-tooltip-arrow-offset);
}

o3-tooltip[data-popper-placement='bottom']
	> .o3-tooltip-wrapper
	> [data-tooltip-arrow] {
	left: 50%;
	transform: translateX(-50%);
}

o3-tooltip[data-popper-placement='left-start']
	> .o3-tooltip-wrapper
	> [data-tooltip-arrow] {
	top: var(--_o3-tooltip-arrow-offset);
}

o3-tooltip[data-popper-placement='left-end']
	> .o3-tooltip-wrapper
	> [data-tooltip-arrow] {
	bottom: var(--_o3-tooltip-arrow-offset);
}

o3-tooltip[data-popper-placement='left']
	> .o3-tooltip-wrapper
	> [data-tooltip-arrow] {
	top: 50%;
	transform: translateY(-50%);
}

o3-tooltip[data-popper-placement='right-start']
	> .o3-tooltip-wrapper
	> [data-tooltip-arrow] {
	top: var(--_o3-tooltip-arrow-offset);
}

o3-tooltip[data-popper-placement='right-end']
	> .o3-tooltip-wrapper
	> [data-tooltip-arrow] {
	bottom: var(--_o3-tooltip-arrow-offset);
}

o3-tooltip[data-popper-placement='right']
	> .o3-tooltip-wrapper
	> [data-tooltip-arrow] {
	top: 50%;
	transform: translateY(-50%);
}

/* ANIMATION */

o3-tooltip[render-on-open] > .o3-tooltip-wrapper {
	--_first-bounce-offset: var(--o3-spacing-m); /* 32px */
	--_second-bounce-offset: calc(var(--_first-bounce-offset) / 2);
}

o3-tooltip[placement^='top'][render-on-open] > .o3-tooltip-wrapper {
	animation: bounce-top 0.8s ease;
}
o3-tooltip[placement^='bottom'][render-on-open] > .o3-tooltip-wrapper {
	animation: bounce-bottom 0.8s ease;
}
o3-tooltip[placement^='left'][render-on-open] > .o3-tooltip-wrapper {
	animation: bounce-left 0.8s ease;
}
o3-tooltip[placement^='right'][render-on-open] > .o3-tooltip-wrapper {
	animation: bounce-right 0.8s ease;
}

@keyframes bounce-top {
	0%,
	20%,
	50%,
	80%,
	100% {
		transform: translateY(0);
	}
	40% {
		transform: translateY(calc(-1 * var(--_first-bounce-offset)));
	}
	60% {
		transform: translateY(calc(-1 * var(--_second-bounce-offset)));
	}
}
@keyframes bounce-bottom {
	0%,
	20%,
	50%,
	80%,
	100% {
		transform: translateY(0);
	}
	40% {
		transform: translateY(var(--_first-bounce-offset));
	}
	60% {
		transform: translateY(var(--_second-bounce-offset));
	}
}
@keyframes bounce-left {
	0%,
	20%,
	50%,
	80%,
	100% {
		transform: translateX(0);
	}
	40% {
		transform: translateX(calc(-1 * var(--_first-bounce-offset)));
	}
	60% {
		transform: translateX(calc(-1 * var(--_second-bounce-offset)));
	}
}

@keyframes bounce-right {
	0%,
	20%,
	50%,
	80%,
	100% {
		transform: translateX(0%);
	}
	40% {
		transform: translateX(var(--_first-bounce-offset));
	}
	60% {
		transform: translateX(var(--_second-bounce-offset));
	}
}
