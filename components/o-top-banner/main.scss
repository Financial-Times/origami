@import '@financial-times/o-brand/main';
@import '@financial-times/o-grid/main';
@import '@financial-times/o-colors/main';
@import '@financial-times/o-spacing/main';
@import '@financial-times/o-typography/main';
@import '@financial-times/o-buttons/main';

@import './src/scss/variables';
@import 'src/scss/brand';
/// Output all oTopBanner features
/// @param {Map} $opts [()] - A map of options to configure the output
/// @access public
/// @example scss
///		@include oTopBanner($opts: (
///			// your opts here
///		))
@mixin oTopBanner ($opts: (
	'themes': ('new-world', 'professional-inverse')
)) {
	$themes: map-get($opts, 'themes');
	$themes: if($themes, $themes, ());

	.o-top-banner {
		display: flex;
		justify-content: center;
		border-bottom: oSpacingByName('s2') solid transparent;
	}

	.o-top-banner__container {
		display: inline-flex;
		align-items: center;
		padding: oSpacingByName('s4') oGridGutter(S) oSpacingByName('s2') oGridGutter(S);
		gap: oSpacingByName('s4') oSpacingByName('l24');
		flex-wrap: wrap;
		@include oGridRespondTo(S) {
			padding: oSpacingByName('s8') oGridGutter(M) oSpacingByName('s6') oGridGutter(M);
		}
	}

	.o-top-banner__content {
		flex-grow: 1;
		max-width: oTypographyMaxLineWidth($optimal-characters-per-line: 100);
	}

	.o-top-banner__heading,
	.o-top-banner__copy {
		padding: 0;
		margin: 0;
	}

	.o-top-banner__heading {
		@include oTypographySans(
			$scale: ('default': 2, 'S': 3),
			$weight: semibold
		);
	}

	.o-top-banner__copy {
		@include oTypographySans(
			$scale: ('default': 0, 'S': 1),
			$weight: regular
		);
	}

	@each $theme in $themes {
		@include oTopBannerAddTheme($theme);
	}
}

/// Add a theme modifier for banners.
///
/// @param {String} $theme-name - The banner theme to output styles for. See README for available themes, or specify a custom one if providing $opts.
/// @param {Map} $opts [null] - A brand configuration which can be used to create a custom banner theme. See README for more examples.
/// @output The output includes the `.o-top-banner--THEME` modifier class definition, which includes all overrides.
/// @example scss - A fully customised top banner theme
///   @include oTopBannerAddTheme('my-theme-name', (
///       'background-color': oColorsByName('slate'),
///       'button-background-color': oColorsByName('ft-pink'),
///       'heading-color': oColorsByName('ft-pink'),
///       'copy-color': oColorsByName('white')
///   ));
/// @example scss - Existing banner theme
///   @include oTopBannerAddTheme('professional');
/// @access public
@mixin oTopBannerAddTheme($theme-name, $opts: null) {

	// If we have a custom config, we use that instead of one of the
	// preconfigured themes
	$variant: if($opts, $opts, $theme-name);

	@if(type-of($opts) == 'map') {
		$required-opts: ('background-color', 'button-background-color', 'copy-color');
		@each $required-opt in $required-opts {
			@if(not map-has-key($opts, $required-opt)) {
				@error 'o-top-banner: Missing required option `#{$required-opt}` for theme `#{$theme-name}`';
			}
		}
	}

	.o-top-banner--#{$theme-name} {
		@include _oTopBannerTheme($variant);
	}
}


@mixin _oTopBannerTheme($theme) {
	$button-color: _oTopBannerGet('button-background-color', $theme);
	$copy-color: _oTopBannerGet('copy-color', $theme);
	$heading-color: _oTopBannerGet('heading-color', $theme);
	$background-color: _oTopBannerGet('background-color', $theme);
	$brand-border-color: _oTopBannerGet('brand-border-color', $theme);

	background-color: $background-color;
	color: $copy-color;
	border-color: $brand-border-color;

	@if($heading-color) {
		.o-top-banner__heading {
				color: $heading-color;
		}
	}

	@if($brand-border-color) {
		.o-top-banner__container {
			padding-bottom: oSpacingByIncrement(4);
			@include oGridRespondTo(S) {
				padding: oSpacingByIncrement(7) oGridGutter(M) oSpacingByIncrement(7) oGridGutter(M);
			}
		}
	}

	.o-top-banner__button {
		$button-theme: if(
			$button-color,
			(
				'color': $button-color,
				'context': $background-color
			),
			$theme
		);
		@include oButtonsContent((
			'type': 'primary',
			'theme': $button-theme
		));

		@include oGridRespondTo(S) {
			@include oButtonsContent((
				'size': 'big'
			), $include-base-styles: false);
		}
	}
}
