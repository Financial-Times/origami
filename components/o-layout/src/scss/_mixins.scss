/// Styles decorative rules for containers
///
///@param {String} $side â€” left or right rule to be styled
/// @access private
@mixin _oLayoutRule($side: 'left') {
	border-#{$side}: 2px solid oColorsByName('teal');
	padding-#{$side}: oSpacingByName('s3');
}

/// Base styling for the layout content
/// @access private
@mixin _oLayoutTypography () {
	.o-layout-typography {
		@include oTypographySans($scale: 1, $line-height: 1.4);

		p:not(.o-layout__unstyled-element),
		a:not(.o-layout__unstyled-element),
		h1:not(.o-layout__unstyled-element),
		h2:not(.o-layout__unstyled-element),
		h3:not(.o-layout__unstyled-element),
		h4:not(.o-layout__unstyled-element),
		h5:not(.o-layout__unstyled-element),
		h6:not(.o-layout__unstyled-element),
		ul:not(.o-layout__unstyled-element),
		ol:not(.o-layout__unstyled-element) {
			max-width: 60ch;
		}

		p:not(.o-layout__unstyled-element) {
			@include oTypographyBody;
			@include oTypographySans($scale: 1, $line-height: 1.4);
		}

		a:not(.o-layout__unstyled-element) {
			@include oTypographyLink();
		}

		h1:not(.o-layout__unstyled-element) {
			@include oTypographyHeading($level: 1);
		}

		h2:not(.o-layout__unstyled-element) {
			@include oTypographyHeading($level: 2);
		}

		h3:not(.o-layout__unstyled-element) {
			@include oTypographyHeading($level: 3);
		}

		h4:not(.o-layout__unstyled-element) {
			@include oTypographyHeading($level: 4);
		}

		h5:not(.o-layout__unstyled-element) {
			@include oTypographyHeading($level: 5);
		}

		h6:not(.o-layout__unstyled-element) {
			@include oTypographyHeading($level: 6);
		}

		aside:not(.o-layout__unstyled-element) {
			@include _oLayoutRule('left');
			align-self: flex-start;
		}

		ol:not(.o-layout__unstyled-element),
		ul:not(.o-layout__unstyled-element) {
			@include oTypographyList();
		}

		ul:not(.o-layout__unstyled-element) {
			@include oTypographyList($type: 'unordered', $include-base-styles: false);
		}

		ol:not(.o-layout__unstyled-element) {
			@include oTypographyList($type: 'ordered', $include-base-styles: false);
		}

		blockquote:not(.o-layout__unstyled-element) {
			@include oQuoteStandard;
			margin-bottom: oSpacingByIncrement(7);
			cite {
				@include oQuoteStandardCite();
			}
		}

		figure img {
			display: block;
		}

		figcaption:not(.o-layout__unstyled-element) {
			@include oTypographyCaption();
		}

		figure,
		table {
			margin: 0 0 oSpacingByName('s4');
		}
	}
}

/// Navigation
/// Outputs navigation styles
/// @param {boolean} $query-layout - Should the query layout be supported?
/// @access private
@mixin _oLayoutNavigation($query-layout) {
	.o-layout__navigation {
		@include oGridRespondTo($from: M) {
			position: sticky;
			top: $_o-layout-gutter;
			max-height: 100vh;
			overflow-y: auto;
		}
	}

	.o-layout__navigation li {
		list-style: none;
	}

	.o-layout__navigation ul,
	.o-layout__navigation ol {
		padding: 0;
	}

	.o-layout__navigation > ul,
	.o-layout__navigation > ol {
		border: 0;
		text-align: left;
		margin: 0 0 oSpacingByIncrement(7); // matches `oTypographyBody`

		@include oGridRespondTo($from: M) {
			text-align: right;
			margin-top: $_o-layout-gutter;
		}

		li {
			&:not(.o-layout__navigation-title) [aria-current="location"] {
				color: oColorsByName('teal-30');
				background: oColorsMix('teal', 'white', 20);
			}

			a {
				@include oTypographySans(1);
				@include oTypographyLink();
				display: inline-block;
				padding: 0.4em 1em;
				// Where supported `overflow-wrap: anywhere` is better than
				// `word-break: break-word` as it only breaks a word where
				// no otherwise-acceptable break points exist.
				overflow-wrap: anywhere;
				word-break: break-all; // For browsers which do not support break-word, or overflow-wrap: anywhere.
				word-break: break-word; // stylelint-disable-line declaration-block-no-duplicate-properties
				@supports (overflow-wrap: anywhere) {
					word-break: normal;
				}
				border-color: oColorsByName('teal');
				border-left: 2px solid;
				@include oGridRespondTo($from: M) {
					border-left: 0 solid;
					border-right: 2px solid;
				}
			}

			// Remove standard Origami link decoration styles.
			// This is in its own declaration to ensure correct
			// source order after compilation because `oTypographyLink`
			// uses `@supports`
			a {
				border-bottom: inherit;
				text-decoration: none;
			}

			&.o-layout__navigation-title a { // stylelint-disable-line selector-no-qualifying-type
				@include oTypographySans($weight: 'semibold', $include-font-family: false);
				@include oGridRespondTo($from: M) {
					border: 0;
				}
			}

			// For sub-nav headings, where there is no parent anchor.
			span {
				@include oTypographySans(1);
				display: inline-block;
				padding: 0.4em 1em;
			}
		}
	}

	// Style sub-nav items.
	.o-layout__navigation ul li:not(.o-layout__navigation-title) ul a,
	.o-layout__navigation ol li:not(.o-layout__navigation-title) ol a {
		border-color: rgba(oColorsByName('teal'), 0.4);
	}

	@if $query-layout {
		// To align the nav with the edge of the query sidebar.
		// Whilst supporting a scrollable navigation.
		.o-layout--query .o-layout__navigation,
		.o-layout--query .o-layout__navigation {
			margin-right: calc(-#{$_o-layout-gutter} - 1px);
		}
		// Undo the negative margin for any element in the nav which is not the nav list.
		// E.g. an input to filter the nav.
		.o-layout--query .o-layout__navigation > *:not(ul):not(ol) {
			margin-right: calc(#{$_o-layout-gutter} + 1px);
		}
	}
}

/// Linked Heading
/// Outputs styles for the linked headings
/// @access private
@mixin _oLayoutLinkedHeading () {
	.o-layout__linked-heading:not(.o-layout__unstyled-element) {

		padding-right: 1.5ch; // for the octothorpe

		// Increased specificity needed to counteract
		// default link styles
		& .o-layout__linked-heading__link,
		& .o-layout__linked-heading__link:visited {
			color: inherit;
			text-decoration: none;
			border-bottom: 0;
			position: relative;
		}

		.o-layout__linked-heading__label {
			color: oColorsGetColorFor(link, text);
			display: none;
			user-select: none;
			font-weight: normal;
			position: absolute;
			bottom: 0;
			right: -1.5ch; // Keeps the octothorpe in line with the heading if the heading spans a whole grid-column
			padding-left: 0.5ch;
		}

		.o-layout__linked-heading__link:hover .o-layout__linked-heading__label {
			display: inline-block;
		}

		&:target .o-layout__linked-heading__link {
			animation-delay: 0;
			animation-duration: 5s;
			animation-timing-function: $o-visual-effects-timing-fade;
			animation-name: o-layout-linked-heading-fade;
		}

	}

	@keyframes o-layout-linked-heading-fade {
		0% {
			background-color: oColorsMix('teal', 'white', 15);
		}
		100% {
			background-color: transparent;
		}
	}
}
