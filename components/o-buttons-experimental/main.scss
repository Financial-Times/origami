@import '@financial-times/o-brand/main';
@import '@financial-times/o-colors/main';
@import '@financial-times/o-typography/main';
@import '@financial-times/o-icons/main';
@import '@financial-times/o-normalise/main';

@import './src/scss/brand';
@import './src/scss/variables';
@import './src/scss/functions';
@import './src/scss/mixins';

@if oBrandIs('core') {
  @import '../../../apps/dictionary/build/css/brands/core/_variables.css';
}

@if oBrandIs('whitelabel') {
  @import '../../../apps/dictionary/build/css/brands/whitelabel/_variables.css';
}

@if oBrandIs('internal') {
  @import '../../../apps/dictionary/build/css/brands/internal/_variables.css';
}

/// Output o-buttons classes.
///
/// @example All default o-buttons styles.
///     @include oButtons();
///
/// @example Primary and secondary button classes, plus the big button modifier class.
///    @include oButtons($opts: (
///        'types': ('primary', 'secondary', 'ghost'),
///        'sizes': ('big')
///    ));
///
/// @example Primary and secondary button classes, plus an inverse theme modifier class, and classes for arrow left and arrow right icon buttons.
///    @include oButtons($opts: (
///        'types': ('primary', 'secondary', 'ghost'),
///        'themes': ('inverse'),
///        'icons': ('arrow-left', 'arrow-right')
///    ));
///
/// @example Secondary button classes, plus classes to support button groups and pagination.
///    @include oButtons($opts: (
///        'types': ('secondary', 'ghost'),
///        'pagination': true,
///        'groups': true
///    ));
///
/// @param {List} $opts
@mixin oButtonsExperimental($opts: (
	'sizes': $_o-buttons-sizes,
	'types': $_o-buttons-types,
	'themes': $_o-buttons-themes,
	'icons': $_o-buttons-icons,
	'pagination': true,
	'groups': true
)) {
  $types: map-get($opts, 'types');
  $types: if($types, $types, ());
  $sizes: map-get($opts, 'sizes');
  $sizes: if($sizes, $sizes, ());
  $themes: map-get($opts, 'themes');
  $themes: if($themes, $themes, ());
  $icons: map-get($opts, 'icons');
  $icons: if($icons, $icons, ());
  $pagination-enabled: map-get($opts, 'pagination');
  $groups-enabled: map-get($opts, 'groups');

  // Base button class.
  .o-buttons-experimental {
	@include _oButtonsBaseContent();

	background-color: var(--color-background-button-primary-active);
	color: var(--color-button-primary-active);
	border-color: var(--color-border-secondary);
	//
	&:hover {
	  //next up, define colours for all of these
	  background-color: var(--color-background-button-primary-hover);
	  color: var(--color-button-primary-hover);
	  border-color: var(--color-border-secondary);
	  text-decoration: none;
	}

	// https://www.w3.org/TR/wai-aria-1.1/#aria-selected
	// https://www.w3.org/TR/wai-aria-1.1/#aria-pressed
	//&[aria-selected=true], // e.g. A selected tab or page number in pagination.
	//&[aria-current], // e.g. A selected tab or page number in pagination (for links only).
	//&[aria-pressed=true], // e.g. A "follow" button that is pressed.
	//&:active {
	//  background-color: map-get($button-colors-map, 'active-background');
	//  color: map-get($button-colors-map, 'active-color');
	//  border-color: map-get($button-colors-map, 'active-border');
	//}
  }

  .o-buttons-experimental--secondary {
	background-color: var(--color-background-button-secondary-active);
	color: var(--color-button-secondary-active);
	border-color: var(--color-border-secondary);

	&:hover {
	  //next up, define colours for all of these
	  background-color: var(--color-background-button-secondary-hover);
	  color: var(--color-button-secondary-hover);
	  border-color: var(--color-border-secondary);
	  text-decoration: none;
	}
  }
  // Helper class to hide disabled buttons.
  .o-buttons--hide-disabled[disabled] {
	visibility: hidden;
  }

  .o-buttons-experimental-icon__label {
	@include oNormaliseVisuallyHidden();
  }
}
@if ($o-buttons-is-silent == false) {
  @include oButtonsExperimental();

  // Set module to silent again
  $o-buttons-is-silent: true !global;
}
