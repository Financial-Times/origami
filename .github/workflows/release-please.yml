on:
  push:
    branches:
      - main
name: release-please
jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: GoogleCloudPlatform/release-please-action@v3
        id: release
        with:
          token: ${{ secrets.ORIGAMI_GITHUB_TOKEN }}
          command: manifest
          monorepo-tags: true
      - name: Dump release action output & connectivity (diagnostic)
        if: always()
        run: |
          echo "release step outcome: ${{ steps.release.outcome }}"
          echo "release outputs (sanitised JSON):"
          # Write raw outputs to a temp file then have Node safely read and sanitise it.
          echo '${{ toJSON(steps.release.outputs) }}' > /tmp/release-outputs-raw.json || true
          node -e "const fs=require('fs'); let o={}; try{o=JSON.parse(fs.readFileSync('/tmp/release-outputs-raw.json','utf8'))}catch(e){}; ['NPM_TOKEN','NODE_AUTH_TOKEN','SLACK_ANNOUNCER_AUTH_TOKEN','SLACK_ANNOUNCER_CHANNEL_ID','ORIGAMI_GITHUB_TOKEN'].forEach(k=>{if(o[k])o[k]='<redacted>'}); console.log(JSON.stringify(o,null,2));" || true
          rm -f /tmp/release-outputs-raw.json || true
          echo "Workflow run id: $GITHUB_RUN_ID"
          echo "Resolve api.github.com:"
          nslookup api.github.com || true
          echo "Curl GitHub api (headers only):"
          curl -sS -I https://api.github.com/ || true
      - uses: actions/checkout@v4
        if: ${{ steps.release.outputs.releases_created }}
      - name: Save release outputs for debug
        if: ${{ steps.release.outputs.releases_created }}
        run: |
          # Save raw outputs and sanitise them safely (avoid shell-embedding issues)
          echo '${{ toJSON(steps.release.outputs) }}' > release-outputs-raw.json
          node -e "const fs=require('fs'); let o={}; try{o=JSON.parse(fs.readFileSync('release-outputs-raw.json','utf8'))}catch(e){}; ['NPM_TOKEN','NODE_AUTH_TOKEN','SLACK_ANNOUNCER_AUTH_TOKEN','SLACK_ANNOUNCER_CHANNEL_ID','ORIGAMI_GITHUB_TOKEN'].forEach(k=>{if(o[k])o[k]='<redacted>'}); fs.writeFileSync('release-outputs.json',JSON.stringify(o,null,2));" || true
          rm -f release-outputs-raw.json || true
          cat release-outputs.json
      - name: Upload release outputs artifact
        if: ${{ steps.release.outputs.releases_created }}
        uses: actions/upload-artifact@v4
        with:
          name: release-outputs
          path: release-outputs.json
          if-no-files-found: warn
      - uses: actions/setup-node@v4
        with:
          cache: 'npm'
          node-version: 22
          registry-url: 'https://registry.npmjs.org'
        if: ${{ steps.release.outputs.releases_created }}
      - run: npm ci
        if: ${{ steps.release.outputs.releases_created }}
      - run: node ./scripts/publish.js '${{toJSON(steps.release.outputs)}}'
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
          SLACK_ANNOUNCER_AUTH_TOKEN: ${{secrets.SLACK_ANNOUNCER_AUTH_TOKEN}}
          SLACK_ANNOUNCER_CHANNEL_ID: ${{secrets.SLACK_ANNOUNCER_CHANNEL_ID}}
        if: ${{ steps.release.outputs.releases_created }}
