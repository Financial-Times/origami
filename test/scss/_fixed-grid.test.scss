$o-grid-mode: 'fixed';

@include describe('oGrid - fixed') {
	@include describe('function: oGridGetMaxWidthForLayout') {
		@include it('gets the max width for S') {
			@include assert-equal(oGridGetMaxWidthForLayout(S), (490px));
		};

		@include it('gets the max width for M') {
			@include assert-equal(oGridGetMaxWidthForLayout(M), (740px));
		};

		@include it('gets the max width for L') {
			@include assert-equal(oGridGetMaxWidthForLayout(L), (980px));
		};

		@include it('gets the max width for XL') {
			@include assert-equal(oGridGetMaxWidthForLayout(XL), (1220px));
		};
	};

	@include describe('mixin: oGridColspan') {
		@include test('sass mixin complies base column styles') {
			@include assert() {
				@include output($selector: false) {
					.test-colspan {
						@include oGridColspan();
					}
				};

				@include expect($selector: false) {
					.test-colspan {
						position: relative;
						float: left;
						flex: 1 1 0%;
						/*autoprefixer: off*/
						// sass-lint:disable no-vendor-prefixes
						-webkit-box-sizing: border-box;
						-moz-box-sizing: border-box;
						box-sizing: border-box;
						// sass-lint:enable no-vendor-prefixes
						padding-left: 20px;
					}

					@media \0screen {
						.test-colspan {
							min-width: 0 !important; // sass-lint:disable-line no-important
						}
					}
				};
			};
		};
	};

	@include describe('mixin: oGridContainer') {
		@include test('sass mixin compiles correctly for regular container') {
			@include assert() {
				@include output($selector: false) {
					.test-container {
						@include oGridContainer;
					};
				};

				@include expect($selector: false) {
					.test-container {
						position: relative;
						margin-left: auto;
						margin-right: auto;
						min-width: 240px;
						max-width: 980px;
						/*autoprefixer: off*/
						// sass-lint:disable no-vendor-prefixes
						-webkit-box-sizing: border-box;
						-moz-box-sizing: border-box;
						box-sizing: border-box;
						// sass-lint:enable no-vendor-prefixes
						width: 980px; // sass-lint:disable-line no-duplicate-properties
						padding-left: 20px;
						padding-right: 20px;
					}
				};
			};
		};

		@include test('sass mixin compiles correctly for bleed container') {
			@include assert() {
				@include output($selector: false) {
					.test-container {
						@include oGridContainer($bleed: true);
					};
				};

				@include expect($selector: false) {
					.test-container {
						position: relative;
						margin-left: auto;
						margin-right: auto;
						min-width: 240px;
						max-width: 980px;
						/*autoprefixer: off*/
						// sass-lint:disable no-vendor-prefixes
						-webkit-box-sizing: border-box;
						-moz-box-sizing: border-box;
						box-sizing: border-box;
						// sass-lint:enable no-vendor-prefixes
						padding-left: 0;
						padding-right: 0;
						width: 980px; // sass-lint:disable-line no-duplicate-properties
					}
				};
			};
		};
	};

	@include describe('mixin: oGridRow') {
		@include test('sass mixin complies correctly') {
			@include assert() {
				@include output($selector: false) {
					.test-row {
						@include oGridRow();
					}
				};

				@include expect($selector: false) {
					.test-row {
						clear: both;
						flex-wrap: wrap;
						display: flex;
						margin-left: -20px;
						zoom: 1;
					}

					@media print {
						.test-row {
							display: inherit;
						}
					}

					.test-row:before,
					.test-row:after {
						content: '';
						// sass-lint:disable no-duplicate-properties
						display: table;
						display: flex;
						// sass-lint:disable no-duplicate-properties
					}

					.test-row:after {
						clear: both;
					}
				};
			};
		};
	};
};
