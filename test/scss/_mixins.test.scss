// sass-lint:disable no-vendor-prefixes,no-duplicate-properties
@include describe('oButtons') {
	@include it('outputs big modifier by default') {
		@include assert() {
			@include output($selector: false)  {
				@include oButtons();
			};

			@include contains($selector: false) {
	  			.o-buttons--big {
	  				min-height: 40px;
	  			}
			};
		};
	};

	@include it('outputs types by default') {
		@include assert() {
			@include output($selector: false)  {
				@include oButtons();
			};

			// primary is a type of button
			@include contains($selector: false) {
	  			.o-buttons--primary {
	  			  background-color: #0d7680;
	  			}
			};
		};
	};

	@include it('outputs themes by default') {
		@include assert() {
			@include output($selector: false)  {
				@include oButtons();
			};

			// inverse is an example of a theme
			@include contains($selector: false) {
	  			.o-buttons--primary.o-buttons--inverse {
	  			  background-color: #ffffff;
	  			}
			};
		};
	};

	@include it('outputs icons by default') {
		@include assert() {
			@include output($selector: false)  {
				@include oButtons();
			};

			// arrow-left is an example of an icon
			@include contains($selector: false) {
				.o-buttons--secondary.o-buttons-icon--arrow-left {
					background-image: url("https://www.ft.com/__origami/service/image/v2/images/raw/fticon-v1:arrow-left?source=o-icons&tint=%230D7680,%230D7680&format=svg");
				}
			};
		};
	};

	@include it('outputs pagination styles default') {
		@include assert() {
			@include output($selector: false)  {
				@include oButtons();
			};

			@include contains($selector: false) {
	  			.o-buttons-pagination > .o-buttons {
	  			  padding-left: 5px;
	  			}
			};
		};
	};

	@include it('outputs group styles default') {
		@include assert() {
			@include output($selector: false)  {
				@include oButtons();
			};

			@include contains($selector: false) {
	  			.o-buttons-group {
	  			  display: flex;
	  			}
			};
		};
	};

	@include it('outputs only base styles when an empty options map is given') {
		@include assert() {
			@include output($selector: false)  {
				@include oButtons($opts: ());
			};

			@include expect($selector: false) {
				.o-buttons {
					font-family: MetricWeb, sans-serif;
					font-weight: 600;
					font-family: MetricWeb, sans-serif;
					font-size: 14px;
					line-height: 1;
					background-size: 21px;
					min-height: 28px;
					min-width: 60px;
					padding: 0 8px;
					display: inline-block;
					box-sizing: border-box;
					vertical-align: middle;
					margin: 0;
					border-style: solid;
					text-align: center;
					text-decoration: none;
					cursor: pointer;
					transition: 0.3s background-color, 0.15s color ease-out, 0.15s border-color ease-out;
					user-select: none;
					background-clip: border-box;
					border-width: 1px;
					-webkit-font-smoothing: antialiased;
					-moz-osx-font-smoothing: grayscale;
					-moz-appearance: none;
					-webkit-appearance: none;
				}

				.o-typography--loading-sans .o-buttons {
					font-size: 12.18px;
					font-family: sans-serif;
				}

				.o-buttons[disabled] {
					pointer-events: none;
					opacity: 0.4;
					cursor: default;
				}

				.o-buttons--hide-disabled[disabled] {
					visibility: hidden;
				}
			};
		};
	};
};

@include describe('oButtonsContent') {
	@include it('outputs a button of type, theme, size, and with an icon') {
		@include assert() {
			@include output()  {
				@include oButtonsContent(
					$opts: (
						'type': 'primary',
						'theme': 'mono',
						'size': 'big',
						'icon': 'arrow-left'
					)
				);
			};

			@include expect() {
				& {
					font-family: MetricWeb, sans-serif;
					font-weight: 600;
					font-family: MetricWeb, sans-serif;
					font-size: 16px;
					line-height: 1;
					background-size: 40px;
					min-height: 40px;
					min-width: 80px;
					padding: 0 20px;
					display: inline-block;
					box-sizing: border-box;
					vertical-align: middle;
					margin: 0;
					border-style: solid;
					text-align: center;
					text-decoration: none;
					cursor: pointer;
					transition: 0.3s background-color, 0.15s color ease-out, 0.15s border-color ease-out;
					user-select: none;
					background-clip: border-box;
					border-width: 1px;
					-webkit-font-smoothing: antialiased;
					-moz-osx-font-smoothing: grayscale;
					-moz-appearance: none;
					-webkit-appearance: none;
					background-color: #262a33;
					color: white;
					border-color: transparent;
					display: inline-block;
					background-repeat: no-repeat;
					background-position: 3px;
					padding-left: 40px;
					background-image: url("https://www.ft.com/__origami/service/image/v2/images/raw/fticon-v1:arrow-left?source=o-icons&tint=%23FFFFFF,%23FFFFFF&format=svg");
				}

				.o-typography--loading-sans & {
					font-size: 13.92px;
					font-family: sans-serif;
				}

				&[disabled] {
					pointer-events: none;
					opacity: 0.4;
					cursor: default;
				}

				&[aria-selected=true],
				&[aria-current],
				&[aria-pressed=true],
				&:active {
					background-color: #727071;
					color: white;
					border-color: transparent;
				}

				&:not([disabled]):hover {
					background-color: #515257;
					color: white;
					border-color: transparent;
					text-decoration: none;
				}

				&:not([disabled]):focus {
					background-color: #515257;
					color: white;
					border-color: transparent;
				}

				&:not([disabled]):focus {
					background-image: url("https://www.ft.com/__origami/service/image/v2/images/raw/fticon-v1:arrow-left?source=o-icons&tint=%23FFFFFF,%23FFFFFF&format=svg");
				}

				@media screen and (-ms-high-contrast: active) {
					& {
						background-image: url("https://www.ft.com/__origami/service/image/v2/images/raw/fticon-v1:arrow-left?source=o-icons&tint=%23FFFFFF,%23FFFFFF&format=svg");
					}
				}

				@media screen and (-ms-high-contrast: black-on-white) {
					& {
						background-image: url("https://www.ft.com/__origami/service/image/v2/images/raw/fticon-v1:arrow-left?source=o-icons&tint=%23000000,%23000000&format=svg");
					}
				}
			};
		};
	};
	@include it('outputs only a type with base styles disabled') {
		@include assert() {
			@include output()  {
				@include oButtonsContent(
					$opts: (
						'type': 'primary'
					),
					$include-base-styles: false,
					$include-base-icon-styles: false
				);
			};

			// expect nothing is output
			@include expect() {
				& {
					background-color: #0d7680;
					color: white;
					border-color: transparent;
				}

				&[aria-selected=true],
				&[aria-current],
				&[aria-pressed=true],
				&:active {
					background-color: #052f33;
					color: white;
					border-color: transparent;
				}

				&:not([disabled]):hover {
					background-color: #095359;
					color: white;
					border-color: transparent;
					text-decoration: none;
				}

				&:not([disabled]):focus {
					background-color: #095359;
					color: white;
					border-color: transparent;
				}
			};
		};
	};
}
// sass-lint:enable no-vendor-prefixes,no-duplicate-properties
