
@include describe('oLoading') {
	@include it('outputs both the light and dark variants by default') {
		// assert the light variant is output
		@include assert() {
			@include output($selector: false)  {
				@include oLoading();
			};

			@include contains($selector: false) {
      			.o-loading--light {
      			  border-top-color: #ffffff;
      			}
			};
		};

		// assert the dark variant is output
		@include assert() {
			@include output($selector: false)  {
				// output o-loading.
				@include oLoading();
			};

			@include contains($selector: false) {
      			.o-loading--dark {
      			  border-top-color: #33302e;
      			}
			};
		};
	};
};


@include describe('oLoadingCustomize') {
	@include it('sets the light and dark variant colours') {
		// Set o-brand to whitelabel for `oLoadingCustomize` test.
		$o-brand-stash: $o-brand;
		$o-brand: 'whitelabel' !global;

		// Customise o-loading.
		@include oLoadingCustomize((
			'light': (
				default-color: hotpink
			),
			'dark': (
				default-color: black
			)
		));

		// assert the light variant is customised
		@include assert() {
			@include output($selector: false)  {
				@include oLoading();
			};

			@include contains($selector: false) {
      			.o-loading--light {
      			  border-top-color: hotpink;
      			}
			};
		};

		// assert the dark variant is customised
		@include assert() {
			@include output($selector: false)  {
				// output o-loading.
				@include oLoading();
			};

			@include contains($selector: false) {
      			.o-loading--dark {
      			  border-top-color: black;
      			}
			};
		};

		// Restore default brand
		$o-brand: $o-brand-stash !global;
	};
};
