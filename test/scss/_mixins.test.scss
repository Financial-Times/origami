@include describe('oColors mixins') {
	@include describe('oColors') {
		@include it('outputs palette custom properties, palette classes, and usecase classes by default') {
			@include assert() {
				@include output($selector: false) {
					@include oColors();
				};

				@include contains($selector: false) {
					:root {
						--o-colors-white: #ffffff;
					}
				};
			};
		};

		@include it('palette custom properties with only the "palette-custom-properties" option') {
			@include assert() {
				@include output($selector: false) {
					@include oColors($opts: (
						'palette-custom-properties': true
					));
				};

				@include contains($selector: false) {
					:root {
						--o-colors-white: #ffffff;
					}
				};
			};
		};
		@include it('palette classes with only the "palette-classes" option') {
			@include assert() {
				@include output($selector: false) {
					@include oColors($opts: (
						'palette-classes': true
					));
				};

				@include contains($selector: false) {
					.o-colors-palette-white {
						background-color: #ffffff;
						color: black;
					}
				};
			};
		};
	}

	@include describe('oColorsSetColor') {
		@include it('adds a custom palette color') {
			@include oColorsSetColor('o-colors', 'olive', #808000);
			@include assert-equal(oColorsByName('olive'), (#808000));
		};
		@include it('override a default o-colors palette color') {
			@include oColorsSetColor('o-colors', 'paper', #808000);
			@include assert-equal(oColorsByName('paper'), (#808000));
			// reset paper color
			@include oColorsSetColor('o-colors', 'paper', #fff1e5);
		};
	};

	@include describe('oColorSetUseCase') {
		@include it('add a custom use case property') {
			@include oColorsSetUseCase('o-colors', 'test-case', (
				'text': 'candy'
			));
			@include assert-equal(oColorsByUsecase(test-case, text), oColorsByName('candy'));
		};
		@include it('override a default o-colors custom use case property') {
			@include oColorsSetUseCase('o-colors', 'page', (
				'background': 'candy'
			));
			@include assert-equal(oColorsByUsecase('page', 'background'), oColorsByName('candy'));
		};
	};
};
