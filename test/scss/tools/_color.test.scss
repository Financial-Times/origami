@include describe('color functions') {
	@include describe('oColorsColorBrightness') {
		@include test('returns the % of brightness in a color') {
			@include assert-equal(round(oColorsColorBrightness(#ffffff)), 100%);
			@include assert-equal(round(oColorsColorBrightness(#000000)), 0%);
			@include assert-equal(round(oColorsColorBrightness(#fff1e5)), 96%);
		};
		@include test('returns the % of brightness in a palette color') {
			@include assert-equal(round(oColorsColorBrightness('teal')), 41%);
		};
	};

	@include describe('oColorsColorLuminance')  {
		@include test('returns luminance of a color as float') {
			@include assert-equal(oColorsColorLuminance(#ffffff), 1);
			@include assert-equal(oColorsColorLuminance(#000000), 0);
		};
		@include test('returns luminance of a palette color as float') {
			@include assert-equal(oColorsColorLuminance('teal'), 0.14601, $inspect: true);
		};
	};

	@include describe('oColorsGetContrastRatio') {
		@include test('calculate the contrast ratio between two colors') {
			@include assert-equal(oColorsGetContrastRatio(#ffffff, #fff1e5), 1.1, $inspect: true);
			@include assert-equal(oColorsGetContrastRatio(#000000, #fff1e5), 18.96, $inspect: true);
		};
		@include test('calculate the contrast ratio between two palette colors') {
			@include assert-equal(oColorsGetContrastRatio('paper', 'black-10'), 1.24, $inspect: true);
		};
	};
};
