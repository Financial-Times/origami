<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="https://origami.ft.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://origami.ft.com/" rel="alternate" type="text/html" /><updated>2023-07-05T09:59:30+01:00</updated><id>https://origami.ft.com/feed.xml</id><title type="html">Origami Newsletter</title><subtitle>Origami is a group of services, components, and tools used to help design &amp; build digital products for FT brands.</subtitle><entry><title type="html">Goodbye Sass?</title><link href="https://origami.ft.com/blog/2023/06/21/sass/" rel="alternate" type="text/html" title="Goodbye Sass?" /><published>2023-06-21T00:00:00+01:00</published><updated>2023-06-21T00:00:00+01:00</updated><id>https://origami.ft.com/blog/2023/06/21/sass</id><content type="html" xml:base="https://origami.ft.com/blog/2023/06/21/sass/">&lt;p&gt;&lt;abbr title=&quot;Too long; didn't read&quot;&gt;
&lt;strong&gt;
TL;DR:
&lt;/strong&gt;
&lt;/abbr&gt; There’s a bunch of reasons it would be desirable to drop Sass. Though there are some complexities and caveats to think through, I think now could be the time. Starting with Origami. Please send your thoughts and feedback, and keep an eye on future TGG (technical governance group) proposals.&lt;/p&gt;

&lt;h2 id=&quot;what-is-sass&quot;&gt;What is Sass&lt;/h2&gt;

&lt;p&gt;Sass is a stylesheet language that’s compiled to CSS, this is what gives a web based project its style, layout, brand.&lt;/p&gt;

&lt;p&gt;I use the term “style authors” throughout this post to refer to engineers, designers, and anyone who might be working with CSS. At the FT this predominantly means engineers.&lt;/p&gt;

&lt;h2 id=&quot;why-try-to-drop-sass&quot;&gt;Why try to drop Sass&lt;/h2&gt;

&lt;p&gt;Sass is a compiled language. There’s a build step to transpile Sass to CSS, so the client (browser) can understand and render our product.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Transpilation slows a CSS author’s feedback loop, reducing productivity.&lt;/li&gt;
  &lt;li&gt;It also makes publishing projects a little slower.&lt;/li&gt;
  &lt;li&gt;Sass adds language features for CSS authors to learn, increasing training and onboarding costs.&lt;/li&gt;
  &lt;li&gt;CSS is introducing native nesting, which works differently to Sass nesting. Therefore, Sass will no longer be a superset of CSS. Meaning a person could write the exact same Sass as CSS and get different results. This is confusing as authors must understand the distinction and shift mental models depending on the project at hand.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Until recently it was easier to argue that Sass’ benefits outweighed its costs. That’s a more difficult argument to make today as CSS natively has a solution for many Sass features.&lt;/p&gt;

&lt;h2 id=&quot;variables&quot;&gt;Variables&lt;/h2&gt;

&lt;p&gt;Sass variables allowed us to share and reuse values, such as the hex code for FT Pink:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;o-syntax-highlight--scss&quot;&gt;$ft-pink: #fcd0b1;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As the FT has finally, &lt;em&gt;finally&lt;/em&gt;, dropped support for Internet Explorer we can use CSS Custom Properties now:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;o-syntax-highlight--css&quot;&gt;--ft-pink: #fcd0b1;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;These are actually way more interesting than Sass variables because, &lt;a href=&quot;https://css-tricks.com/difference-between-types-of-css-variables/&quot;&gt;unlike Sass variables, CSS Custom Properties work with the CSS cascade&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;functions&quot;&gt;Functions&lt;/h2&gt;

&lt;p&gt;Sass provides a number of functions which return a value and may take arguments.&lt;/p&gt;

&lt;p&gt;I’ve struggled to find an example in Origami which couldn’t be replaced by a CSS Custom Property (&lt;a href=&quot;https://registry.origami.ft.com/components/o-spacing@3.2.3/sassdoc?brand=core#function-ospacingbyname&quot;&gt;oSpacingByName&lt;/a&gt;) or which couldn’t be handled by other tooling more effectively (&lt;a href=&quot;https://registry.origami.ft.com/components/o-colors@6.6.1/sassdoc?brand=core#function-ocolorsgetcontrastratio&quot;&gt;oColorsGetContrastRatio&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Sass also provides helpful built in functions such as to manipulate colour. For example, to darken a colour:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;o-syntax-highlight--scss&quot;&gt;.example {
	$paper: #fff1e5;
	background: darken($paper, 10%);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We could achieve the same thing using CSS’ &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hsl&lt;/code&gt; function, but would have to publish hue and saturation CSS Custom Properties for all colours in our palette. And it’s not exactly pretty. Still this isn’t a common task:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;o-syntax-highlight--css&quot;&gt;.example {
	--paper-hue: 27.69deg;
	--paper-saturation: 100%;
	--paper-lightness: 94.9%;
	background: hsl(
		var(--paper-hue),
		var(--paper-saturation),
		calc(var(--paper-lightness) - 10%)
	);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Are there any Sass functions we just must have? I can’t think of any.&lt;/p&gt;

&lt;h2 id=&quot;mixins&quot;&gt;Mixins&lt;/h2&gt;

&lt;p&gt;Sass mixins allow us to share chunks of CSS. We can even pass arguments to a mixin to control its output. For example a link mixin which accepts a theme to customise a link’s colour:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;o-syntax-highlight--scss&quot;&gt;@mixin link($base-color: black, $hover-color: teal) {
	color: $base-color;
	text-decoration-line: underline;
	text-decoration-thickness: 3px;
	&amp;amp;:hover {
		color: $hover-color;
	}
}

.link {
	@include link();
}

.link.link--my-fancy-link {
	@include link($base-color: hotpink, $hover-color: mediumvioletred);
}

.link.link--another-lovely-link {
	@include link($base-color: turquoise, $hover-color: cadetblue);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There is no CSS equivalent but maybe this isn’t so necessary now. With CSS Custom Properties and the CSS cascade we can achieve the same affect as this example, in fewer lines of code and with less repetition in the final CSS output:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;o-syntax-highlight--scss&quot;&gt;.link {
	--link-color: var(--base-color, black);
	color: var(--link-color);
	text-decoration-line: underline;
	text-decoration-thickness: 3px;
	&amp;amp;:hover {
		--link-color: var(--hover-color, teal);
	}
}

.link.link--my-fancy-link {
	--base-color: hotpink;
	--hover-color: mediumvioletred;
}

.link.link--another-lovely-link {
	--base-color: turquoise;
	--hover-color: cadetblue;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A more complex example of an Origami Sass mixin is &lt;a href=&quot;https://registry.origami.ft.com/components/o-buttons@7.8.1/sassdoc?brand=core#mixin-obuttonsaddtheme&quot;&gt;oButtonsAddTheme&lt;/a&gt;. Now this is pretty cool. You can basically say “give me a hotpink button” and it’ll go away and follow pre-determined FT design rules to generate every state for you (hover, focus, pressed, disabled, etc.) and check for accessibility at the same time. Writing this in Sass was wildly complex though. It’s really quite hard to reason about or modify. It wouldn’t scale to support more brands with their own rules. And, it’s not used all that much – we have a limited set of buttons for a reason! Sass is the wrong tool for that job.&lt;/p&gt;

&lt;h2 id=&quot;nesting&quot;&gt;Nesting&lt;/h2&gt;

&lt;p&gt;Sass allows nesting of selectors. For example this Sass:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;o-syntax-highlight--scss&quot;&gt;.example {
	.example__content {
		h1 {
			// declarations
		}

		a {
			// declarations
		}
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Becomes this CSS:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;o-syntax-highlight--css&quot;&gt;.example .example__content h1 {
	// declarations
}
.example .example__content a {
	// declarations
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It might not look like much from this simple example, but nesting makes authoring CSS so much more efficient and, by grouping selectors, easier to read too.&lt;/p&gt;

&lt;p&gt;There is now a &lt;a href=&quot;https://www.w3.org/TR/css-nesting-1/&quot;&gt;CSS Nesting Module specification (W3C Working Draft)&lt;/a&gt; to bring native nesting to CSS. This has been shipped in major browsers including Chrome, Edge, Safari, and (very soon, behind a flag) to Firefox.&lt;/p&gt;

&lt;p&gt;Woo! But, the awkward news is that this &lt;a href=&quot;https://kilianvalkhof.com/2023/css-html/the-gotchas-of-css-nesting/&quot;&gt;works differently to Sass’ implementation&lt;/a&gt;. Under the hood, CSS nesting uses the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/:is&quot;&gt;:is pseudo-class&lt;/a&gt; so that:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;o-syntax-highlight--css&quot;&gt;main,
#intro {
	&amp;amp; div {
		...;
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Is interpreted by the client (browser) as:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;o-syntax-highlight--css&quot;&gt;:is(main, #intro) div {
	// declarations
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In Sass, the same code would transpile to the following CSS:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;o-syntax-highlight--css&quot;&gt;main div,
#intro div {
	// declarations
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Since &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:is&lt;/code&gt; takes the specificity of the highest selector, these two interpretations (Sass vs. native CSS nesting) have different specificities, and could therefore apply differently. I’ll leave Kilian’s blog post, &lt;a href=&quot;https://kilianvalkhof.com/2023/css-html/the-gotchas-of-css-nesting/&quot;&gt;the gotchas of CSS Nesting&lt;/a&gt; (where I stole this example from), to demonstrate this in more detail.&lt;/p&gt;

&lt;p&gt;My take: Yikes! Sass have &lt;a href=&quot;https://sass-lang.com/blog/sass-and-native-nesting&quot;&gt;committed to aligning with native CSS nesting&lt;/a&gt; by switching to outputting &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:is&lt;/code&gt;, but not until it’s supported by 98% of the global browser market share. The new CSS native syntax will be actively taught and used long before then, causing confusion for those new to Sass or switching between Sass/CSS projects in the meantime.&lt;/p&gt;

&lt;p&gt;Also important to note is that the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;amp;&lt;/code&gt; symbol in Sass supports the parent selector to append additional text:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;o-syntax-highlight--scss&quot;&gt;.accordion {
	&amp;amp;__copy {
		// declarations
	}

	&amp;amp;--open {
		// declarations
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Which transpiles to:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;o-syntax-highlight--scss&quot;&gt;.accordion__copy {
	// declarations
}

.accordion--open {
	// declarations
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This isn’t supported by the native CSS &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;amp;&lt;/code&gt; syntax. The Sass team do not plan to align what &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;amp;&lt;/code&gt; means in Sass and CSS because “this behavior [sic] is too important to existing Sass users”. It shouldn’t be, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;amp;-suffix&lt;/code&gt; just makes debugging hard, because it’s difficult to locate where a selector has been defined in a large project. Type a few extra characters, don’t use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;amp;-suffix&lt;/code&gt; syntax in Sass.&lt;/p&gt;

&lt;p&gt;Now Sass is no longer a CSS superset, it’s a compelling time to switch to the upcoming native CSS syntax. To support older browsers we can use PostCSS with &lt;a href=&quot;https://www.npmjs.com/package/postcss-nesting&quot;&gt;postcss-nesting&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/@csstools/postcss-is-pseudo-class&quot;&gt;postcss-is-pseudo-class&lt;/a&gt;, though there are some &lt;a href=&quot;https://www.npmjs.com/package/@csstools/postcss-is-pseudo-class#user-content-specificity&quot;&gt;manageable caveats&lt;/a&gt; there too.&lt;/p&gt;

&lt;h2 id=&quot;import&quot;&gt;Import&lt;/h2&gt;

&lt;p&gt;Sass also helps us organise our CSS into manageable files using &lt;a href=&quot;https://sass-lang.com/documentation/at-rules/import&quot;&gt;Sass’ @import&lt;/a&gt;, which is being replaced by &lt;a href=&quot;https://sass-lang.com/documentation/at-rules/use&quot;&gt;@use&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Using Sass we can write two Sass files to separate our button and link styles, then combine them into a single file later:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;o-syntax-highlight--scss&quot;&gt;@use 'buttons';
@use 'links';
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;CSS can do this too with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@import&quot;&gt;the native @import&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;o-syntax-highlight--css&quot;&gt;@import 'buttons.css';
@import 'links.css';
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&quot;https://csswizardry.com/2018/11/css-and-network-performance/#avoid-import-in-css-files&quot;&gt;CSS’ @import isn’t performant&lt;/a&gt;, as the browser needs to download one CSS file before it can discover and download any subsequent imports it contains. This creates a waterfall of requests rather than downloading them at the same time, in parallel. We’ve previously found &lt;a href=&quot;https://medium.com/ft-product-technology/a-faster-ft-com-10e7c077dc1c&quot;&gt;site performance has a direct impact on engagement&lt;/a&gt;, so this is something we should avoid.&lt;/p&gt;

&lt;p&gt;Again we can overcome this with PostCSS, by using &lt;a href=&quot;https://github.com/postcss/postcss-import&quot;&gt;postcss-import&lt;/a&gt; to resolve &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@import&lt;/code&gt; for us before publishing our CSS.&lt;/p&gt;

&lt;h2 id=&quot;performance&quot;&gt;Performance&lt;/h2&gt;

&lt;p&gt;If we need to rely on PostCSS with multiple plugins to support nesting and support for older browsers, will we see any performance gain? Yep! Seems so.&lt;/p&gt;

&lt;p&gt;I created 2 test projects to compare performance, using a real world complex component. For the Sass version I included Origami’s o-buttons Sass, whilst for the native CSS test I copied its compiled CSS in full. To both I added nesting examples as above. This ensures both tests transpile a large amount of CSS (o-buttons CSS output is way bigger than it needs to be) and also shows a real life example in terms of Sass complexity. Both projects used Vite to build, an average of 5:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The Sass version: 3.78 seconds.&lt;/li&gt;
  &lt;li&gt;The CSS + PostCSS version: 0.25 seconds.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is a little unfair to Sass. o-buttons includes some really wild Sass and PostCSS had relatively few nest transformations to make. However, as this uses a real life component, it’s indicative of the code Sass enables and its potential performance impact.&lt;/p&gt;

&lt;p&gt;Style authors are always making changes quickly, iteratively, and checking back to see the results of their changes. It’s easy to make hundreds of changes through the course of a day. This time adds up. Imagine working on a feature and checking in on your progress every 5 minutes (conservative). Across 30 people that’s 12 hours wasted each week, just waiting for a project to build.&lt;/p&gt;

&lt;p&gt;Also, it’s very easy to get distracted whilst waiting… &lt;em&gt;doom scrolls&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;We can actually boost this further because a CSS author won’t need to run the PostCSS plugins at all to preview their work in a modern browser.&lt;/p&gt;

&lt;h2 id=&quot;choice&quot;&gt;Choice&lt;/h2&gt;

&lt;p&gt;Origami components currently force teams to use Sass, unless they’re using the Origami Build Service which takes away control and customisation regarding a product’s build.&lt;/p&gt;

&lt;p&gt;Other than Sass, Origami is based on web standards. Teams can choose the best language or framework for their team and project, Origami is flexible. We see this manifest with external parties using Vue.JS to build ft.com pages; the apps team using Preact; and others using vanilla JS too. Sass is an exception for the team. It would be great to give teams more control regarding how they author their styles with Origami – whether that’s sticking with Sass or not.&lt;/p&gt;

&lt;p&gt;Though we should work on consistency of approach across teams for a bunch of reasons, Origami shouldn’t get in the way of trailing new approaches. Favouring web standards helps.&lt;/p&gt;

&lt;h2 id=&quot;documentation&quot;&gt;Documentation&lt;/h2&gt;

&lt;p&gt;There’re a bunch of tools for documenting Sass, notably for Origami:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A curated README (&lt;a href=&quot;https://registry.origami.ft.com/components/o-buttons@7.8.1/readme?brand=core#sass&quot;&gt;o-buttons README&lt;/a&gt;).&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://sassdoc.com/&quot;&gt;SassDoc&lt;/a&gt; for style authors to reference (&lt;a href=&quot;https://registry.origami.ft.com/components/o-buttons@7.8.1/sassdoc?brand=core&quot;&gt;o-buttons SassDoc&lt;/a&gt;).&lt;/li&gt;
  &lt;li&gt;Limited autocompletion is available in a style authors editor (&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=mrmlnc.vscode-scss&quot;&gt;VS Code SCSS IntelliSense Plugin&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Sass also supports &lt;a href=&quot;https://sass-lang.com/documentation/at-rules/warn&quot;&gt;@warn&lt;/a&gt;, which we use to log messages to a style author’s terminal (e.g. to inform of deprecations).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Moving away from Sass poses some new challenges for documentation and code completion. However I think we can drop Sass and still get to a better place, where a designer can hand off to an engineer much more effectively, using the same language and Origami components or variables.&lt;/p&gt;

&lt;p&gt;Whether we continue to use Sass or not, it’s very likely we’ll adopt &lt;a href=&quot;https://design-tokens.github.io/community-group/format/&quot;&gt;Design Tokens&lt;/a&gt; to manage support for multiple brands and themes. Ben already wrote about Origami’s most recent design token trials in &lt;a href=&quot;https://financialtimes.atlassian.net/wiki/spaces/OR/blog/2023/04/20/8047034476/Origami+Team+Trials+Design+Tokens&quot;&gt;Origami Team Trials Design Tokens (Confluence, behind a login)&lt;/a&gt;. These tokens represent design decisions such as colour, typographic style, spacing, etc. We may store meta data against them including documentation. We will then be able to surface these in Figma, READMEs, and elsewhere – awesome! It will reduce a lot of friction between designer and engineer during hand over and provide better documentation for both.&lt;/p&gt;

&lt;p&gt;Moving away from Sass’ &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@warn&lt;/code&gt; feature doesn’t seem so bad, either. Sass logs get mixed up with warnings from a bunch of complex tooling and is easy to ignore. We’ve seen in recent years more teams building multiple entry points (multiple separate Sass files) which duplicates warnings. They become annoying, hard to parse, and even easier to ignore. Using Design Token meta data again we can document deprecation warnings for everyone to see across design and engineering tooling.&lt;/p&gt;

&lt;p&gt;I expect code editor tooling and autocompletion to be on par. &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=mrmlnc.vscode-scss&quot;&gt;VS Code’s SCSS IntelliSense Plugin&lt;/a&gt; is super helpful for local development, but less helpful at working with dependencies. I couldn’t get it to make suggestions for Origami Sass installed via npm, but may have got there by fiddling with settings.&lt;/p&gt;

&lt;p&gt;Do you think we have any documentation or tooling around Sass that is irreplaceable?&lt;/p&gt;

&lt;h2 id=&quot;support&quot;&gt;Support&lt;/h2&gt;

&lt;p&gt;We already have teams at the FT who don’t use Sass. Sass will &lt;em&gt;eventually&lt;/em&gt; release a major change to better align with native CSS nesting behaviour. Whether we stick with Sass now or not, we will end up in the position of some teams/projects using the current Sass nesting behaviour and some not. Origami is a good, collective project to guide us through this transition.&lt;/p&gt;

&lt;p&gt;If we do choose to drop Sass, Origami would publish plain CSS already transpiled by PostCSS and ready to ship. Therefore style authors using Origami components wouldn’t need to worry about what tools were used to create them. Moving from Sass and when, if at all, would be up to individual teams. Meanwhile, the Origami team would be able to offer dedicated support for contributors and provide training for others who are interested in moving away from Sass.&lt;/p&gt;

&lt;p&gt;(Oh my, there’s so many cool things happening in the world of CSS that I want to discuss and share and learn about with you fellow CSS authors).&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I started writing about how I’d love to switch away from Sass within the FT but how we just can’t yet. Through writing this and exploring the limitations of PostCSS plugins some more, I’ve come to think we can and should. Starting with Origami.&lt;/p&gt;

&lt;p&gt;What do you think?&lt;/p&gt;</content><author><name>Lee Moody</name></author><category term="Sass" /><summary type="html">TL;DR: There’s a bunch of reasons it would be desirable to drop Sass. Though there are some complexities and caveats to think through, I think now could be the time. Starting with Origami. Please send your thoughts and feedback, and keep an eye on future TGG (technical governance group) proposals.</summary></entry><entry><title type="html">Origami Newsletter, April 2023 - May 2023</title><link href="https://origami.ft.com/blog/2023/05/31/newsletter/" rel="alternate" type="text/html" title="Origami Newsletter, April 2023 - May 2023" /><published>2023-05-31T00:00:00+01:00</published><updated>2023-05-31T00:00:00+01:00</updated><id>https://origami.ft.com/blog/2023/05/31/newsletter</id><content type="html" xml:base="https://origami.ft.com/blog/2023/05/31/newsletter/">&lt;p&gt;&lt;abbr title=&quot;Too long; didn't read&quot;&gt;
&lt;strong&gt;
TL;DR:
&lt;/strong&gt;
&lt;/abbr&gt; Origami is preparing two talks for June. We released FT Professional themes for a bunch of components. We started working on Origami For Everyone(O3) and we started talking to other organisations to share knowledge about design systems.&lt;/p&gt;

&lt;h2 id=&quot;top-things&quot;&gt;Top things&lt;/h2&gt;

&lt;p&gt;Some of the bigger Origami news since our last update:&lt;/p&gt;

&lt;h2 id=&quot;upcoming-talks-and-workshops&quot;&gt;Upcoming talks and workshops&lt;/h2&gt;

&lt;p&gt;Mark your calendars! We have two engaging talks lined up for the upcoming month.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://financialtimes.learn.link/content/62f4125979e7860012a64e2e/&quot;&gt;Introduction to Origami&lt;/a&gt;: Lee will be delivering an insightful session that provides a high-level overview of Origami. Whether you work in Product or Technology, this talk is for you! Discover why Origami exists and how it can benefit you in your work.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://financialtimes.learn.link/content/6478b3546da1c4001190511a&quot;&gt;Origami Foundations&lt;/a&gt;: Join Ako as he explores the fundamentals of Origami components. This talk will delve into the usage, advantages, and practical implementation of key components such as o-normalise, o-fonts, o-spacing, o-colors, o-typography, and a glimpse into o-grid.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Note:&lt;/em&gt;&lt;/strong&gt; This talk is engineer oriented but anyone who want to deepen their Origami knowledge is definitely welcome.&lt;/p&gt;

&lt;h2 id=&quot;ft-professional&quot;&gt;FT Professional&lt;/h2&gt;

&lt;p&gt;Last months Origami has been working with FT Professional to gather requirements and identify which Origami components require a new FT Professional theme, this quarter we managed to release more themes than we promised and we will release a few more before Q2 finishes.&lt;/p&gt;

&lt;p&gt;Currently we support &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;o-banner&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;o-forms&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;o-tooltip&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;o-typography&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;o-buttons&lt;/code&gt; component themes and variations.&lt;/p&gt;

&lt;h2 id=&quot;origami-for-everyone&quot;&gt;Origami for everyone&lt;/h2&gt;

&lt;p&gt;We’re excited about &lt;a href=&quot;https://financialtimes.atlassian.net/wiki/spaces/OR/blog/2023/05/18/8064925807/Introducing+Origami+for+Everyone&quot;&gt;Origami for Everyone&lt;/a&gt; as creating differentiated products targeting different audiences is a central theme of the &lt;a href=&quot;https://inside.ft.com/home/knowledge-base/Product-strategy-2023&quot;&gt;FT’s product and growth strategy&lt;/a&gt;. Origami for Everyone will allow Origami to scale to support more brands, designer-developer collaboration, and multi-platform compatibility.&lt;/p&gt;

&lt;p&gt;To achieve these vision, we’ll need to make some fundamental changes in the existing Origami implementation. We’ve already started recruiting a new designer to lead on the design side of Origami, and we’ve been conducting research into design tokens, which will form the backbone of the new implementation of Origami. Ben already did a demo for new design tokens system and we got some initial positive feedback from our potential users. You can read more about this on our blogpost &lt;a href=&quot;https://financialtimes.atlassian.net/wiki/spaces/OR/blog/2023/04/20/8047034476/Origami+Team+Trials+Design+Tokens&quot;&gt;Origami Team Trials Design Tokens&lt;/a&gt; and if you want to know more of a technical decisions made along the way check out &lt;a href=&quot;https://financialtimes.atlassian.net/wiki/spaces/OR/blog/2023/04/26/8049524875/Conventions+for+Origami+Design+Tokens&quot;&gt;Conventions for origami Design Tokens&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We encourage everyone to actively participate in this project, offering feedback and sharing proposals for the new Origami architecture. Together, we can shape a future where the Origami design system works seamlessly with every product we deliver.&lt;/p&gt;

&lt;h2 id=&quot;knowledge-sharing-with-other-organisations&quot;&gt;Knowledge sharing with other organisations&lt;/h2&gt;

&lt;p&gt;We’ve been talking with other organisations to share knowledge about design systems. We had a meeting with the design system team from the Lego, Washington Post, and Compare The Market. Next month we have a meeting scheduled with Conde Nast and we are all excited to share our knowledge and learn from each other.&lt;/p&gt;

&lt;h2 id=&quot;special-thanks&quot;&gt;Special Thanks&lt;/h2&gt;

&lt;p&gt;We had a few contributors who helped us to improve Origami components and we want to thank them for their contributions. Thanks to Juan Sanchez Alcala for contributing to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;o-topper&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;o-video&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;o-comments&lt;/code&gt; components.&lt;/p&gt;

&lt;p&gt;Special thanks to Anna Bebb for deprecating  the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;n-sliding-popup&lt;/code&gt; component – that prompted us to write some docs on how to do deprecate Origami components. Now we have a &lt;a href=&quot;https://origami.ft.com/documentation/components/versioning/#deprecate-a-component&quot;&gt;guide on how to deprecate Origami components&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We had new contributors who helped us to improve Origami components. Thanks to Marlon Bucley for helping us to improve &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;o-multi-select&lt;/code&gt; component and thanks to Ed Gargan for helping us to improve &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;o-forms&lt;/code&gt; component.&lt;/p&gt;

&lt;p&gt;And a final thankyou to Arjun Gadhia who contributed a new customisation feature to o-autocomplete to support the TagMe rewrite. This was a most &lt;a href=&quot;https://github.com/Financial-Times/origami/pull/1127&quot;&gt;excellent pull request&lt;/a&gt; which included problem context, screenshots, documentation, and demos – making it very easy for the team to review and approve.&lt;/p&gt;
&lt;h2 id=&quot;broader-update&quot;&gt;Broader update&lt;/h2&gt;

&lt;p&gt;A digest list of some other things that have happened in April and May:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Major &lt;a href=&quot;https://registry.origami.ft.com/components/o-multi-select&quot;&gt;o-multi-select&lt;/a&gt;: After some feedback from Spark we improved &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;o-multi-select&lt;/code&gt; functionality and now it can be initialised with a selected value. We also added a custom event &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OptionChange&lt;/code&gt; to enable users to track interactions to o-multi-select. We also published TSX templates.&lt;/li&gt;
  &lt;li&gt;Minor &lt;a href=&quot;https://registry.origami.ft.com/components/o-forms&quot;&gt;o-forms&lt;/a&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;o-forms&lt;/code&gt; had a few minor releases in the last two months. We removed the “green” valid state from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;o-forms&lt;/code&gt;. Deprecated pseudo-radio-links. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;o-forms&lt;/code&gt; now also has TSX templates published and can be used by other TSX projects. We also released FT Professional themes for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;o-forms&lt;/code&gt; elements. Now we apply invalid input styles to inputs with custom validation, as well as those which use default browser validation.&lt;/li&gt;
  &lt;li&gt;Minor &lt;a href=&quot;https://registry.origami.ft.com/components/o-topper&quot;&gt;o-topper&lt;/a&gt;: To improve accessibility, we changed the outline colour for focus links in some cases.&lt;/li&gt;
  &lt;li&gt;Minor &lt;a href=&quot;https://registry.origami.ft.com/components/ft-concept-button&quot;&gt;ft-concept-button&lt;/a&gt;: Now &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ft-concept-button&lt;/code&gt; sets aria-label on initialise.&lt;/li&gt;
  &lt;li&gt;Minor &lt;a href=&quot;https://registry.origami.ft.com/components/o-buttons&quot;&gt;o-buttons&lt;/a&gt;: Now o-buttons supports &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;professional&lt;/code&gt; themes.&lt;/li&gt;
  &lt;li&gt;Minor &lt;a href=&quot;https://registry.origami.ft.com/components/o-colors&quot;&gt;o-colors&lt;/a&gt;: Professional color Mint is now part of o-colors pallet. We added &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;page-inverse&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;base-inverse&lt;/code&gt; colour usecases.&lt;/li&gt;
  &lt;li&gt;Minor &lt;a href=&quot;https://registry.origami.ft.com/components/o-tooltip&quot;&gt;o-tooltip&lt;/a&gt;: added &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;professional&lt;/code&gt; themes and now it supports setting themes imperatively.&lt;/li&gt;
  &lt;li&gt;Minor &lt;a href=&quot;https://registry.origami.ft.com/components/o-typography&quot;&gt;o-typography&lt;/a&gt;: added &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;professional&lt;/code&gt; themes for body and links.&lt;/li&gt;
  &lt;li&gt;Minor &lt;a href=&quot;https://registry.origami.ft.com/components/o-autocomplete&quot;&gt;o-autocomplete&lt;/a&gt;: added a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;suggestionTemplate&lt;/code&gt; override option. This function is used to override the default rendering of suggestion items in autocomplete, with a function that returns a custom HTML string for the given option. It is typically used when wanting to provide additional context or styling for each suggestion item.&lt;/li&gt;
  &lt;li&gt;Minor &lt;a href=&quot;https://registry.origami.ft.com/components/o-banner&quot;&gt;o-banner&lt;/a&gt;: added a new &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;inverse-professional&lt;/code&gt; themes.&lt;/li&gt;
  &lt;li&gt;Patch &lt;a href=&quot;https://registry.origami.ft.com/components/o-header&quot;&gt;o-header&lt;/a&gt;: We improved scroll button behaviour in the o-header subnav.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Akaki Mikaia</name></author><category term="Newsletter" /><summary type="html">TL;DR: Origami is preparing two talks for June. We released FT Professional themes for a bunch of components. We started working on Origami For Everyone(O3) and we started talking to other organisations to share knowledge about design systems.</summary></entry><entry><title type="html">Origami Newsletter, March 2023</title><link href="https://origami.ft.com/blog/2023/03/29/newsletter/" rel="alternate" type="text/html" title="Origami Newsletter, March 2023" /><published>2023-03-29T00:00:00+01:00</published><updated>2023-03-29T00:00:00+01:00</updated><id>https://origami.ft.com/blog/2023/03/29/newsletter</id><content type="html" xml:base="https://origami.ft.com/blog/2023/03/29/newsletter/">&lt;p&gt;&lt;abbr title=&quot;Too long; didn't read&quot;&gt;
&lt;strong&gt;
TL;DR:
&lt;/strong&gt;
&lt;/abbr&gt; Featuring FT Professional updates; front-end technology tooling maps; TSX templates and Storybook demos; and the bit where we failed to deliver around 9k image requests each day due to a confusing and unprompted error, affecting pretty much every FT Group product.&lt;/p&gt;

&lt;h2 id=&quot;top-things&quot;&gt;Top things&lt;/h2&gt;

&lt;p&gt;Some of the bigger Origami news since our last update:&lt;/p&gt;

&lt;h3 id=&quot;ft-professional&quot;&gt;FT Professional&lt;/h3&gt;

&lt;p&gt;We’re getting ready to support the rollout of FT Professional’s rebrand! This month Origami has been working with FT Professional to gather requirements and identify which Origami components require a new professional theme, ahead of a Q2 rollout.&lt;/p&gt;

&lt;p&gt;As part of that work Thomas Moody has been designing Professional themed Origami components and adding them to our shared Figma UI Kit – this allows designers to pull reusable components into a design, rather than have to design everything from scratch all the time. We partnered on button updates (these are surprisingly complex, with many states) and made a bunch of other improvements at the same time.&lt;/p&gt;

&lt;details&gt;
  &lt;summary&gt;
    Latest o-buttons updates to our Figma UI Kit.
  &lt;/summary&gt;
    &lt;ul&gt;
    &lt;li&gt;We replaced the boolean &quot;Primary&quot; variant with a &quot;Type&quot; variant which can be “Primary”, “Secondary”, or “Ghost” button types. This aligns design tooling with the Origami component engineers pull into production applications.&lt;/li&gt;
    &lt;li&gt;We deleted the separate ghost button Figma component, now that we can switch the type of button as above.&lt;/li&gt;
    &lt;li&gt;We deleted a “custom” theme. It's possible to use o-buttons to generate buttons for a custom colour, but what was this specific example in design tooling for? We don’t want to encourage use of that particular theme do we..?&lt;/li&gt;
    &lt;li&gt;We fixed the inverse focus state of buttons so designs more accurately reflect what an engineer will produce with Origami's o-buttons component.&lt;/li&gt;
    &lt;/ul&gt;
&lt;/details&gt;

&lt;p&gt;It was fun pairing with Tom on that and picking up a few more Figma tricks as an engineer: designers and engineers unite!&lt;/p&gt;

&lt;p&gt;These changes are aimed at increasing design team efficiency and improving designer/engineer hand over by aligning our design tooling and implementation. We have a lot more to do here, as many components are missing or difficult to work with design side. An engineer can’t engineer with a re-usable capability if we don’t design with them in mind.&lt;/p&gt;

&lt;h3 id=&quot;technology-tooling-maps&quot;&gt;Technology Tooling Maps&lt;/h3&gt;

&lt;p&gt;Origami as a project started over 9 years ago. We’ve come a long way since then with all sorts of new components, tools, and services. Yet the technologies we use within Origami components themselves have stayed largely the same. This kind of adaptable stability is, I think, pretty remarkable and to be celebrated.&lt;/p&gt;

&lt;p&gt;However the technology landscape within and outside the FT has changed substantially. Front-end frameworks are mature, we no longer need to support IE11, and there’s a whole ecosystem around design systems which didn’t exist before. What opportunities are we missing to help the FT scale? Wouldn’t it be great if a designer could move from Internal to Specialist teams, or vice-versa, and get up and running quickly with a familiar suite of tools; if a designer in Professional could select a portion of their ft.com design and apply the Professional sub-brand with a click? If they could hand over to an engineer who could see at a glance which re-usable component to pull in, and what options to apply, instead of asking in a back-and-forth conversation or scrabbling around documentation for a few hours? Finally, what if the developer experience for the most used, most recommended technology choices at the FT were prioritised – no more figuring out how to integrate an Origami component with [insert framework of choice] for the 100th time?&lt;/p&gt;

&lt;p&gt;Having a thorough understanding of the technology landscape at the FT will help us make technical decisions to achieve such things. Of course, we have our reckons – our assumptions – but we’ll also be reaching out to teams to ask. We would be super grateful for your time. We’ll be looking to put together a front-end technology tooling map which can answer:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;What tools and techniques FT Group engineers use today.&lt;/li&gt;
  &lt;li&gt;Any plans teams have to migrate to new technologies in the near future.&lt;/li&gt;
  &lt;li&gt;What tools and techniques teams would be keen to explore.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We’ll use this to make decisions about how we author Origami components in the future – expect a Request For Comment 😊&lt;/p&gt;

&lt;h3 id=&quot;tsx-templates-and-storybook-demos&quot;&gt;TSX templates and Storybook demos&lt;/h3&gt;

&lt;p&gt;As you may know, the Origami team has been working on re-creating &lt;a href=&quot;https://registry.origami.ft.com/components&quot;&gt;Origami component&lt;/a&gt; demos in &lt;a href=&quot;https://origami.ft.com/storybook/&quot;&gt;Storybook&lt;/a&gt;. We’ve been working at it slowly around competing priorities for forever, having first started talking about Storybook in a &lt;a href=&quot;https://origami.ft.com/blog/2021/11/05/newsletter/&quot;&gt;Nov 2021 blog post&lt;/a&gt; – it’s been a turbulent time for the team during this period, having lost and regained headcount, which slowed down projects outside Business As Usual (BAU) significantly. This isn’t a moan, it’s an excuse.&lt;/p&gt;

&lt;p&gt;Anyhow, now we’re a healthier team again at 3 engineers, we’re still trying to do too much. We’ve decided not to work on any more Storybook or TSX templates during Q2 – though we will come back to it, eventually, else maintain multiple systems which make up our custom component registry forever.&lt;/p&gt;

&lt;p&gt;For now, our focus will be on supporting the rollout of the new FT Professional sub-brand (excited eek!) and working on a technical architecture proposal for modern Origami components (amazed and curious oooooohhh!) – so we can much more effectively scale to support new brands and sub-brands in the future and better support collaboration across groups.&lt;/p&gt;

&lt;p&gt;We’ve created Storybook demos and TSX templates for 26 of our components which need them – most recently this month, o-table 🎉 There are 14 left which we’d like to do, tracked in Epic &lt;a href=&quot;https://financialtimes.atlassian.net/browse/OR-15&quot;&gt;OR-15&lt;/a&gt; now &lt;a href=&quot;https://origami.ft.com/blog/2023/03/03/newsletter/#jira&quot;&gt;we’re on Jira&lt;/a&gt;. If you’re keen to have a particular interactive demo in Storybook which isn’t already there, or you would benefit immediately from a TSX template rather than copy-pasting and noodling around with HTML attributes, let us know and we’ll get that prioritised especially for you ❤️ One off pull requests, bootcamps, and secondments are also very welcome!&lt;/p&gt;

&lt;h2 id=&quot;special-thanks&quot;&gt;Special Thanks&lt;/h2&gt;

&lt;p&gt;Speaking of BAU. The Origami Image Service surprise &lt;strike&gt;exploded&lt;/strike&gt; experienced a technical malfunction this month, resulting in many thousands of errors (around 9k over 24 hours), with each error representing a failure to deliver a requested image to a reader – impacting pretty much every FT Group product that displays images. We hadn’t made any changes and struggled to identify a cause. Thankfully, a bunch of excellent people across the FT offered to help. It’s a path which lead me to a conversation about &lt;a href=&quot;https://en.wikipedia.org/wiki/Cipher&quot;&gt;ciphers&lt;/a&gt; – way out of my comfort zone, I thought I was a humble, front-end focused engineer.&lt;/p&gt;

&lt;p&gt;Anyhow, that’s all resolved now so don’t fear, reader! We mitigated the issue reasonably swiftly and subsequently found a fix – there’s an &lt;a href=&quot;https://financialtimes.slack.com/archives/C04S3UGD8HL/p1678452906995959&quot;&gt;incident summary in Slack&lt;/a&gt; and a &lt;a href=&quot;https://github.com/Financial-Times/origami-image-service/pull/826&quot;&gt;PR with technical details&lt;/a&gt; if you’re interested.&lt;/p&gt;

&lt;p&gt;My point is, what a wonderful, supportive culture we have here at the FT. A huge special thanks this month goes to everyone who took time out of their day to help in the &lt;a href=&quot;https://financialtimes.slack.com/archives/C03TWD9G1/p1677843126578639&quot;&gt;#engineering channel&lt;/a&gt;, the &lt;a href=&quot;https://financialtimes.slack.com/archives/CKULLGWQ1/p1677863674600469&quot;&gt;incident channel&lt;/a&gt;, and in subsequent pairing over video call. I want to give a particular shout out to Alex Muller 🙇 and Rowan Manning 🙇, if it wasn’t for the time we spent pairing I’m sure it would have taken much longer to get to a proper resolution.&lt;/p&gt;

&lt;h2 id=&quot;broader-update&quot;&gt;Broader update&lt;/h2&gt;

&lt;p&gt;A digest list of some other things that have happened in March:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;NEW &lt;a href=&quot;https://registry.origami.ft.com/components/o-multi-select@1.0.0&quot;&gt;o-multi-select&lt;/a&gt;: As promised in our &lt;a href=&quot;https://origami.ft.com/blog/2023/03/03/newsletter/#new-component--o-multi-select&quot;&gt;previous newsletter for February&lt;/a&gt;, we have released a new new component, o-multi-select! Thanks Will Renny for your proposal and design work on that, we’re looking forward to seeing this rollout in Spark first 👏 Note that we’ve released this component experimentally for now as we await an accessibility review by a Digital Accessibility Centre (DAC) representative, but we’ve done our own research and you should feel free to use now – with the caveat that we may need to make changes depending on DAC’s feedback.&lt;/li&gt;
  &lt;li&gt;MAJOR &lt;a href=&quot;https://registry.origami.ft.com/components/ft-date-format@3.0.0/readme&quot;&gt;ft-date-format&lt;/a&gt;: Introduces &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;t&lt;/code&gt; symbol support for formatting for time following FT’s Editorial style.&lt;/li&gt;
  &lt;li&gt;MAJOR &lt;a href=&quot;https://registry.origami.ft.com/components/o-date@6.0.0&quot;&gt;o-date&lt;/a&gt;: Introduces the latest version of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ft-date-format&lt;/code&gt; to support formatting time following FT’s Editorial style. To upgrade see the &lt;a href=&quot;https://github.com/Financial-Times/origami/blob/main/components/o-date/MIGRATION.md#migrating-from-v5-to-v6&quot;&gt;o-date migration guide&lt;/a&gt; – nice one, Chee Rabbits and Leigh-Ann Gant!&lt;/li&gt;
  &lt;li&gt;MAJOR &lt;a href=&quot;https://registry.origami.ft.com/components/o-topper@6.0.3&quot;&gt;o-topper&lt;/a&gt;: o-topper no longer includes JavaScript to select the correct topper for JSON-formatted FT articles and flags. This helper was deeply tied to the FT.com content store, and included hardcoded UUIDs and business logic beyond the scope of Origami. Origami components focus on providing reusable user interfaces – without business logic assumptions which could limit their use outside specific groups or use-cases. Juan Sanchez and the StoryTelling team have also since updated the Deep Portrait topper style for improved readability 🎉 To upgrade see &lt;a href=&quot;https://github.com/Financial-Times/origami/blob/main/components/o-topper/MIGRATION.md#migrating-from-v5-to-v6&quot;&gt;o-topper migration guide&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;MINOR &lt;a href=&quot;https://registry.origami.ft.com/components/o-forms@9.7.0&quot;&gt;o-forms&lt;/a&gt;: Adds a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GenericInput&lt;/code&gt; TSX template, to use custom form inputs within an o-forms field – which includes label and related layout styles.&lt;/li&gt;
  &lt;li&gt;MINOR &lt;a href=&quot;https://registry.origami.ft.com/components/o-table@9.3.0&quot;&gt;o-table&lt;/a&gt;: As mentioned, o-table includes TSX templates and &lt;a href=&quot;https://origami.ft.com/storybook/brands/core/?path=/story/components-o-table-responsive--table-with-responsive-scroll&quot;&gt;interactive Storybook demos&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;MINOR &lt;a href=&quot;https://registry.origami.ft.com/components/github-label-sync@2.3.1/readme&quot;&gt;github-label-sync&lt;/a&gt; we accepted a couple of &lt;a href=&quot;https://github.com/Financial-Times/github-label-sync/releases&quot;&gt;Open Source contributions&lt;/a&gt; for github-label-sync this month. These improve Github label name and description validation as well as add an optional “delete” flag which allows managed Github labels to be deleted.&lt;/li&gt;
  &lt;li&gt;MINOR &lt;a href=&quot;https://registry.origami.ft.com/components/o-icons@7.6.0&quot;&gt;o-icons&lt;/a&gt;: adds a new preferences (/filter) icon, another shout out to Thomas Moody for that contribution 🔥&lt;/li&gt;
  &lt;li&gt;PATCH &lt;a href=&quot;https://registry.origami.ft.com/components/o-typography@7.3.5&quot;&gt;o-typography&lt;/a&gt;: o-typography links which open in a new window/tab no longer cause unwanted overflow, &lt;a href=&quot;https://financialtimes.slack.com/archives/CSH1XFM5W/p1678978026106699&quot;&gt;this was a fun problem which caused a whole bunch of excess whitespace&lt;/a&gt; at the bottom of our “FT 1000: the seventh annual ranking of Europe’s fastest-growing companies”. Hey Storytelling! When you have time, pull in the latest version of o-typography to fix that ☺️&lt;/li&gt;
  &lt;li&gt;PATCH &lt;a href=&quot;https://registry.origami.ft.com/components/o-teaser@6.2.6&quot;&gt;o-teaser&lt;/a&gt;: Nothing much, just uses the latest version of o-date in its demos.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Lee Moody</name></author><category term="Newsletter" /><summary type="html">TL;DR: Featuring FT Professional updates; front-end technology tooling maps; TSX templates and Storybook demos; and the bit where we failed to deliver around 9k image requests each day due to a confusing and unprompted error, affecting pretty much every FT Group product.</summary></entry><entry><title type="html">Origami Newsletter, February 2023</title><link href="https://origami.ft.com/blog/2023/03/03/newsletter/" rel="alternate" type="text/html" title="Origami Newsletter, February 2023" /><published>2023-03-03T00:00:00+00:00</published><updated>2023-03-03T00:00:00+00:00</updated><id>https://origami.ft.com/blog/2023/03/03/newsletter</id><content type="html" xml:base="https://origami.ft.com/blog/2023/03/03/newsletter/">&lt;p&gt;&lt;abbr title=&quot;Too long; didn't read&quot;&gt;
&lt;strong&gt;
TL;DR:
&lt;/strong&gt;
&lt;/abbr&gt; Origami updates on its new components and work exploring options for a Multi-brand design system&lt;/p&gt;

&lt;h2 id=&quot;top-things&quot;&gt;Top things&lt;/h2&gt;

&lt;p&gt;Some of the bigger Origami news since our last update:&lt;/p&gt;

&lt;h3 id=&quot;new-component--o-multi-select&quot;&gt;New component – o-multi-select&lt;/h3&gt;

&lt;p&gt;Akaki has been working with Designers to introduce a new component – o-multi-select. This component allows users to select multiple options from a list, building upon the browser’s native multi select capability. Will Renny has collaborated with us to provide guidance on design.&lt;/p&gt;

&lt;p&gt;o-multi-select is near completion and will ship with TSX templates. It is planned to be released in the upcoming month.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://www.ft.com/__origami/service/image/v2/images/raw/https://origami.ft.com/assets/images/2023-03-03-newsletter/o-multi-select.png?width=500&amp;amp;quality=highest&amp;amp;source=origami&quot; alt=&quot;the o-multi-select component&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;multi-brand-exploration&quot;&gt;Multi-brand exploration&lt;/h3&gt;

&lt;p&gt;As Origami’s user base grows, it will naturally end up supporting more components. Specifically, more variations of existing components. This can sometimes end up with component fragmentation with teams copy/pasting existing components and styling to their needs.&lt;/p&gt;

&lt;p&gt;Origami already supports multiple brands with ft-core, internal, and whitelabel branding. With the Origami team planning support for the FT Professional brand, we have been exploring ways in which we can scale the rollout of new brands. Fortunately, there are tools which can help us spin up new brands quicker and introduce more variations of existing components. Another key question for us is how can we provide design tooling to match engineering tooling.&lt;/p&gt;

&lt;p&gt;The Origami team has been exploring some of the options in February. Exploration will continue with a proof of concept being delivered next.&lt;/p&gt;

&lt;h3 id=&quot;jira&quot;&gt;Jira&lt;/h3&gt;

&lt;p&gt;As an enablement team, we collaborate with a lot of multi-disciplinary teams across the FT Group. We want to ensure our shared tracked work is visible across all disciplines in Product and Technology, and our current board for tracking, GitHub, is less familiar to people outside of engineering. In light of this, we have begun using Jira to track our shared work so that our collaborators have better visibility on what we do.&lt;/p&gt;

&lt;p&gt;Our new board can be accessed through &lt;a href=&quot;https://financialtimes.atlassian.net/jira/software/c/projects/OR/boards/1658&quot;&gt;Jira&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;special-thanks&quot;&gt;Special Thanks&lt;/h2&gt;

&lt;p&gt;Special thanks to; Will Renny for their contributions to o-multi-select; Juan Sanchez, Alberto Cubero Navas, Phil Hunt, for their contributions throughout February.&lt;/p&gt;

&lt;h2 id=&quot;broader-update&quot;&gt;Broader update&lt;/h2&gt;

&lt;p&gt;A digest list of some other things that have happened in February:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://registry.origami.ft.com/components/o-forms&quot;&gt;o-forms&lt;/a&gt;: has been updated to allow submit events to be intercepted. This helps the Acquisition team use reCaptcha on the sign-up page.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://registry.origami.ft.com/components/o-buttons&quot;&gt;o-buttons&lt;/a&gt;: now supports any string as an icon parameter, also preserves the default set as inputs to help TypeScript users.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://registry.origami.ft.com/components/o-comments&quot;&gt;o-comments&lt;/a&gt;: upgrades to support Coral v7, introduces a custom scroll container option, introduces ability to set additional classes on shadow dom, various styling changes. This will enable the Storytelling team to upgrade Coral.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://registry.origami.ft.com/components/ft-concept-button&quot;&gt;ft-concept-button&lt;/a&gt;: introduces inverse monochrome variant as requested by the Storytelling team.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://registry.origami.ft.com/components/o-topper&quot;&gt;o-topper&lt;/a&gt;: change styling for deep landscape, various other styling changes.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Ben Freshwater</name></author><category term="Newsletter" /><summary type="html">TL;DR: Origami updates on its new components and work exploring options for a Multi-brand design system</summary></entry><entry><title type="html">Origami Newsletter, January 2023</title><link href="https://origami.ft.com/blog/2023/01/30/newsletter/" rel="alternate" type="text/html" title="Origami Newsletter, January 2023" /><published>2023-01-30T00:00:00+00:00</published><updated>2023-01-30T00:00:00+00:00</updated><id>https://origami.ft.com/blog/2023/01/30/newsletter</id><content type="html" xml:base="https://origami.ft.com/blog/2023/01/30/newsletter/">&lt;p&gt;&lt;abbr title=&quot;Too long; didn't read&quot;&gt;
&lt;strong&gt;
TL;DR:
&lt;/strong&gt;
&lt;/abbr&gt; Origami has more team members; Storybook templates; More accessibility improvements; New CLI tool to create new components.&lt;/p&gt;

&lt;h2 id=&quot;top-things&quot;&gt;Top things&lt;/h2&gt;

&lt;p&gt;Some of the bigger Origami news since our last update:&lt;/p&gt;

&lt;h3 id=&quot;origami-has-more-team-members&quot;&gt;Origami has more team members&lt;/h3&gt;

&lt;p&gt;The Origami team is very happy that we have new team members joining. Ben Freshwater joined as a full-time S1 developer. Rhys Evans is helping Origami as a part-time product owner.&lt;/p&gt;

&lt;h3 id=&quot;storybook-templates&quot;&gt;Storybook templates&lt;/h3&gt;

&lt;p&gt;Origami has been thinking about adopting a tool for documenting and making interactive component demos. So last year Origami started writing TSX templates for existing components. Which gets integrated into our &lt;a href=&quot;https://origami.ft.com/storybook/&quot;&gt;Storybook&lt;/a&gt; demos. This approach will also support designers to work closer with the Origami team and will enable other developers to have a better demo experience.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; This is still a work in progress and not every component has a TSX template, but play around with the ones that we already published. Also if you think we should prioritise some components get in touch with us or join us during our office hours.&lt;/p&gt;

&lt;h3 id=&quot;more-accessibility-improvements&quot;&gt;More accessibility improvements&lt;/h3&gt;

&lt;p&gt;In December Origami dedicated its energy to closing as many accessibility issues as possible following the DAC audit. In this successful endeavour, we managed to close 38 issues out of 40. The remaining two are in progress.&lt;/p&gt;

&lt;p&gt;The most notable change was related to focus styles. We published &lt;a href=&quot;https://origami.ft.com/blog/2022/12/14/focus-styles/&quot;&gt;a blog&lt;/a&gt; about this if you want to have deeper dive into it, but in short, focus rings are black and white shadows around the focusable elements.&lt;/p&gt;

&lt;h3 id=&quot;new-cli-tool-to-create-new-components&quot;&gt;New CLI tool to create new components&lt;/h3&gt;

&lt;p&gt;Summer 2022 Origami rebuilt a CLI tool to make it easier for other developers to create new components. To create new components run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm run create-component&lt;/code&gt; from the root folder and it will guide you through the new component creation process and will generate template files and even some default code to get started with.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Since Origami is trying to migrate existing components to TSX templates, as mentioned above, we decided to make this even easier and at the moment the CLI tool also supports a command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm run create-component storybook&lt;/code&gt; that should help you to generate all the files needed to start building a TSX template for existing components.&lt;/p&gt;

&lt;h2 id=&quot;special-thanks&quot;&gt;Special Thanks&lt;/h2&gt;

&lt;p&gt;Special thanks, in last quarter, goes to Orhan Bakir and Andy Little for helping Origami to write a &lt;a href=&quot;https://origami.ft.com/storybook/brands/core/?path=/story/components-o-forms-box-radio-buttons--box-radio-button&quot;&gt;TSX template for o-forms&lt;/a&gt;. It was a very big component and thanks both of you for your contribution.&lt;/p&gt;

&lt;h2 id=&quot;broader-update&quot;&gt;Broader update&lt;/h2&gt;

&lt;p&gt;A digest list of some other things that have happened in January:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://registry.origami.ft.com/components/o-forms&quot;&gt;o-forms&lt;/a&gt;: has TSX templates and a &lt;a href=&quot;https://origami.ft.com/storybook/brands/core/?path=/story/components-o-forms-box-radio-buttons--box-radio-button&quot;&gt;storybook demo&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://registry.origami.ft.com/components/o-header&quot;&gt;o-header&lt;/a&gt;: Origami stopped supporting subbrand variants, since they are not in use anymore, in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;o-header&lt;/code&gt; component. We also published TSX templates for the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;o-header&lt;/code&gt; component. The drawer component has improved accessibility and it traps focus within the drawer.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://registry.origami.ft.com/components/o-share&quot;&gt;o-share&lt;/a&gt;: is version 9 now. The accessibility has improved and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;o-share&lt;/code&gt; no longer provides client-side JavaScript to generate markup. Instead, users will need to write the &lt;a href=&quot;https://github.com/Financial-Times/origami/blob/o-share-v9.0.1/components/o-share/MIGRATION.md#deprecate-autogenerate-share-links&quot;&gt;full markup&lt;/a&gt;. To address some accessibility issues &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;o-share&lt;/code&gt; now uses inline SVGs for icons.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://registry.origami.ft.com/components/o-ft-affiliate-ribbon&quot;&gt;o-ft-affiliate-ribbon&lt;/a&gt;: now has &lt;a href=&quot;https://origami.ft.com/storybook/brands/core/?path=/story/components-o-ft-affiliate-ribbon--ft-affiliate-ribbon-story&quot;&gt;storybook demo&lt;/a&gt; and TSX templates are also published to NPM.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://registry.origami.ft.com/components/o-colors&quot;&gt;o-colors&lt;/a&gt;: only warns users of colour deprecations via Sass when they explicitly request a colour or colour use-case, reducing noise so engineers can focus on true issues.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://registry.origami.ft.com/components/o-editorial-layout&quot;&gt;o-editorial-layout&lt;/a&gt;: has TSX templates and a &lt;a href=&quot;https://origami.ft.com/storybook/brands/core/?path=/story/components-o-editorial-layout--body&quot;&gt;storybook demo&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://registry.origami.ft.com/components/o-big-number&quot;&gt;o-big-number&lt;/a&gt;: We published TSX template to NPM packages.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://registry.origami.ft.com/components/o-normalise&quot;&gt;o-normalise&lt;/a&gt;: updated to match &lt;a href=&quot;https://docs.google.com/document/d/1z6kecy_o9qHYIznTmqQ-IJqre72jhfd0nVa4JMsS7Q4/edit&quot;&gt;FT browser&lt;/a&gt; policy and deprecate code supporting IE.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://registry.origami.ft.com/components/o-comments&quot;&gt;o-comments&lt;/a&gt;: got migrated to Coral V7.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://registry.origami.ft.com/components/o-topper&quot;&gt;o-topper&lt;/a&gt;: We supported the dynamic storytelling team to release two new toppers for articles: Deep Landscape and Deep Portrait, as featured in the recent product release announcement. Shout out to Alberto Cubero, Juan Sanchez, and Phil Hunt for their work on the o-topper Origami component!&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://registry.origami.ft.com/components/o-video&quot;&gt;o-video&lt;/a&gt;: Thanks to Juan Sanchez for contributing to o-video component that now tracks that progress of video playback at 99%, since 100% is not sent by Chrome.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Akaki Mikaia</name></author><category term="Newsletter" /><summary type="html">TL;DR: Origami has more team members; Storybook templates; More accessibility improvements; New CLI tool to create new components.</summary></entry><entry><title type="html">Updated Focus Styles</title><link href="https://origami.ft.com/blog/2022/12/14/focus-styles/" rel="alternate" type="text/html" title="Updated Focus Styles" /><published>2022-12-14T00:00:00+00:00</published><updated>2022-12-14T00:00:00+00:00</updated><id>https://origami.ft.com/blog/2022/12/14/focus-styles</id><content type="html" xml:base="https://origami.ft.com/blog/2022/12/14/focus-styles/">&lt;p&gt;&lt;abbr title=&quot;Too long; didn't read&quot;&gt;
&lt;strong&gt;
TL;DR:
&lt;/strong&gt;
&lt;/abbr&gt; We’ve released new focus styles to improve the accessibility of FT Group products which use Origami. These changes will roll out gradually as teams &lt;a href=&quot;#upgrade-your-project&quot;&gt;pull in the latest Origami component releases&lt;/a&gt;. We’re treating this as a minor release and there should be no code changes required to upgrade. However, this is a broad, global change and we encourage teams to &lt;a href=&quot;#upgrade-your-project&quot;&gt;test focus states&lt;/a&gt; within their projects – the Origami team are here to help if you have any questions, or spot any issues.&lt;/p&gt;

&lt;h2 id=&quot;what-are-focus-styles&quot;&gt;What are focus styles?&lt;/h2&gt;

&lt;p&gt;People browse the web in a number of different ways depending on their preference and access needs. For example some people do not use a mouse but instead use only their keyboard, or other input devices. Focus styles allow people to know which element they’re on when moving around a page. &lt;a href=&quot;https://www.sarasoueidan.com/blog/focus-indicators/#what-exactly-is-a-focus-indicator%3F&quot;&gt;Sara Soueidan’s guide to focus indicators&lt;/a&gt; explains this well and includes a screen recording of focus states in action if you would like to learn more.&lt;/p&gt;

&lt;h2 id=&quot;why-are-focus-styles-being-updated&quot;&gt;Why are focus styles being updated?&lt;/h2&gt;

&lt;p&gt;In a number of places our focus state styles lack contrast and are difficult to see; particularly when the focused element has a dark background colour, or is on a dark page background. This makes FT Group products difficult to use in places and is a particular barrier to users with certain disabilities.&lt;/p&gt;

&lt;p&gt;This issue was highlighted through an audit provided by the &lt;a href=&quot;https://digitalaccessibilitycentre.org/&quot;&gt;Digital Accessibility Centre&lt;/a&gt; and must be fixed in order for ft.com to be accredited accessible as outlined in &lt;a href=&quot;https://www.ft.com/accessibility&quot;&gt;the FT’s accessibility commitments&lt;/a&gt; – however both user facing products as well as internal tools and documentation are affected.&lt;/p&gt;

&lt;h2 id=&quot;what-do-the-new-styles-look-like&quot;&gt;What do the new styles look like?&lt;/h2&gt;

&lt;p&gt;Buttons and inputs will now display a new 2 band outline when focused. One band is near-black (&lt;a href=&quot;https://registry.origami.ft.com/components/o-colors&quot;&gt;black-70&lt;/a&gt;) and the other white, ensuring that at least one band provides sufficient contrast. Focus state styles for other elements, including links, will remain unchanged as the new approach breaks down when applied to multi-line text, as shown below.&lt;/p&gt;

&lt;figure&gt;
    &lt;img alt=&quot;Checkboxes from the o-forms component. One has a focus state but it's not very obvious which.&quot; src=&quot;/assets/images/2022-12-14-focus-styles/focus-checkbox-before.png&quot; /&gt;
    &lt;img alt=&quot;Checkboxes from the o-forms component with the new double border focus styles. The second, focused checkbox is distinctly highlighted using a 2 band outline of near-black and white.&quot; src=&quot;/assets/images/2022-12-14-focus-styles/focus-checkbox-after.png&quot; /&gt;
    &lt;figcaption&gt;Checkboxes from the o-forms component, before / after. In the before screenshot it's not clear that the second checkbox is the one with focus (note the small outline).&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
    &lt;img alt=&quot;Primary buttons from the o-buttons component, with the inverse theme applied for use on a dark background. When the second button is focused it looks a lot like the 4th button shown, which is disabled and not interactive.&quot; src=&quot;/assets/images/2022-12-14-focus-styles/focus-button-inverse-before.png&quot; /&gt;
    &lt;img alt=&quot;Primary buttons from the o-buttons component, with the inverse theme applied for use on a dark background. The second, focused button is more visibility highlighted using a 2 band outline of white and near-black – the bands are inverse to account for a light element on a dark background.&quot; src=&quot;/assets/images/2022-12-14-focus-styles/focus-button-inverse-after.png&quot; /&gt;
    &lt;figcaption&gt;Primary buttons from the o-buttons component with the &quot;inverse&quot; theme applied, for use on a dark background, before / after. In the before screenshot the second button is focused but it looks a lot like the 4th button shown, which is disabled and not interactive. This is somewhat improved with the new double-band focus style for buttons.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
    &lt;img alt=&quot;The o-cookie-message component with the accept button focused. Again it's not super clear which element is focused.&quot; src=&quot;/assets/images/2022-12-14-focus-styles/focus-cookie-message-before.png&quot; /&gt;
    &lt;img alt=&quot;The o-cookie-message component with the accept button focused. A new 2 band focus outline of near-black and white makes it easier to see that the accept button is focused.&quot; src=&quot;/assets/images/2022-12-14-focus-styles/focus-cookie-message-after.png&quot; /&gt;
    &lt;figcaption&gt;The o-cookie-message component, before/after. The &quot;accept cookies&quot; button has focus. In the first image the focus outline is hard to see against the colour of the button. It is much more apparent which element has focus in the second image, which shows the new focus state styles.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
    &lt;img alt=&quot;&quot; src=&quot;/assets/images/2022-12-14-focus-styles/focus-teaser-no-good.png&quot; /&gt;
    &lt;img alt=&quot;&quot; src=&quot;/assets/images/2022-12-14-focus-styles/focus-teaser-no-change.png&quot; /&gt;
    &lt;figcaption&gt;The o-teaser component, experiment/after. We chose to keep the existing style by default including for links. Links do not suffer the same contrast issues highlighted above and the new double ring outline breaks down when used on multi-line text elements. Note how the first image shows how the new focus style would have obscured multi-line text.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;upgrade-your-project&quot;&gt;Upgrade Your Project&lt;/h2&gt;

&lt;p&gt;We’re treating this as a minor release and there should be no code changes required to upgrade. To pull the changes into your project make sure you’re using the latest version of Origami components.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;npm: If your project uses npm to install Origami components via a &lt;a href=&quot;https://semver.org/&quot;&gt;semver range, such as a caret (^)&lt;/a&gt;, run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm update&lt;/code&gt; to update your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package-lock.json&lt;/code&gt;. If you request a specific version of a component in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt;, rather than a semver range, or are a major release behind, you can run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm outdated&lt;/code&gt; to identify out of date packages which need to be updated – including Origami components.&lt;/li&gt;
  &lt;li&gt;Origami Build Service: If you include components using an Origami Build Service url, use the &lt;a href=&quot;https://www.ft.com/__origami/service/build/url-updater&quot;&gt;URL Updater&lt;/a&gt; to check it’s up to date.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Since this is a broad, global change we recommend that you also test focus states within your project. Do this by browsing your project using the tab key on your keyboard (&lt;a href=&quot;https://www.a11yproject.com/posts/macos-browser-keyboard-navigation/&quot;&gt;Browser keyboard navigation in macOS&lt;/a&gt;) or by browsing with a screen-reader such as &lt;a href=&quot;https://webaim.org/articles/voiceover/&quot;&gt;VoiceOver on MacOS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Finally, Origami is no longer enhanced by the &lt;a href=&quot;https://github.com/WICG/focus-visible&quot;&gt;focus-visible polyfill&lt;/a&gt;. If using, aim to remove the focus-visible polyfill from your project as the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible&quot;&gt;:focus-visible CSS selector&lt;/a&gt; now has wide browser support.&lt;/p&gt;

&lt;p&gt;If you need any help or find any issue the Origami team are here to help, contact us in the &lt;a href=&quot;https://financialtimes.slack.com/messages/origami-support/&quot;&gt;#origami-support Slack channel&lt;/a&gt; or email &lt;a href=&quot;mailto:origami-support@ft.com&quot;&gt;origami-support@ft.com&lt;/a&gt;. 😊&lt;/p&gt;

&lt;h2 id=&quot;technical-notes&quot;&gt;Technical Notes&lt;/h2&gt;

&lt;p&gt;Hello, you’re still here!? Lovely. For the curious, here’re a couple of technical notes:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;The double outline of the new focus style is achieved using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/box-shadow&quot;&gt;box-shadow CSS property&lt;/a&gt;, rather than the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/outline&quot;&gt;outline CSS property&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We no longer depend on the &lt;a href=&quot;https://github.com/WICG/focus-visible&quot;&gt;focus-visible&lt;/a&gt; polyfill. The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible&quot;&gt;:focus-visible CSS selector&lt;/a&gt; now has wide browser support. We provide a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/:focus&quot;&gt;:focus&lt;/a&gt; fallback for the minority of browsers in the FT’s browser support policy which do not support the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:focus-visible&lt;/code&gt; selector. We’ll let the Customer Products Platforms team know that can be dropped from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dotcom-page-kit&lt;/code&gt; to simplify our tech and keep ft.com performant for readers 🙌&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Sadly (for me) the FT supports older versions of IOS which does not understand the &lt;a href=&quot;https://css-tricks.com/supports-selector/&quot;&gt;@supports selector&lt;/a&gt; syntax, so we apply a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/:focus&quot;&gt;:focus&lt;/a&gt; style by default and remove it later if &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible&quot;&gt;:focus-visible&lt;/a&gt; is supported (rather than applying &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:focus&lt;/code&gt; if &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:focus-visible&lt;/code&gt; is not supported). This is a bit more complicated and introduces a little more CSS, which we always aim to reduce for performance reasons.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;
    Focus styles are applied by default with the &lt;a href=&quot;https://registry.origami.ft.com/components/o-normalise&quot;&gt;o-normalise component&lt;/a&gt;, but if you would like to manually apply a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:focus-visible&lt;/code&gt; style with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:focus&lt;/code&gt; fallback to a component checkout the new &lt;a href=&quot;https://registry.origami.ft.com/components/o-normalise/sassdoc&quot;&gt;o-normalise Sass mixins&lt;/a&gt;. E.g.

    &lt;div data-o-component=&quot;o-syntax-highlight&quot;&gt;

  &lt;pre tabindex=&quot;0&quot;&gt;&lt;code class=&quot;o-syntax-highlight--scss&quot;&gt;.my-element {
    // Style `.my-element:focus-visible` with
    // `.my-element:focus` fallback.
    @include oNormaliseFocusApply() {
            // Use the &amp;quot;inverse&amp;quot; focus ring,
            // where the dark and light bands are switched.
            @include oNormaliseFocusContentInverse();
            // Make the colour hotpink when focus is applied,
            // because I have a serious and unreasonable disregard
            // for brand guidelines.
            color: hotpink;
    };
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name>Lee Moody</name></author><summary type="html">TL;DR: We’ve released new focus styles to improve the accessibility of FT Group products which use Origami. These changes will roll out gradually as teams pull in the latest Origami component releases. We’re treating this as a minor release and there should be no code changes required to upgrade. However, this is a broad, global change and we encourage teams to test focus states within their projects – the Origami team are here to help if you have any questions, or spot any issues.</summary></entry><entry><title type="html">Origami Newsletter, March 2022</title><link href="https://origami.ft.com/blog/2022/03/30/newsletter/" rel="alternate" type="text/html" title="Origami Newsletter, March 2022" /><published>2022-03-30T00:00:00+01:00</published><updated>2022-03-30T00:00:00+01:00</updated><id>https://origami.ft.com/blog/2022/03/30/newsletter</id><content type="html" xml:base="https://origami.ft.com/blog/2022/03/30/newsletter/">&lt;p&gt;&lt;abbr title=&quot;Too long; didn't read&quot;&gt;
&lt;strong&gt;
TL;DR:
&lt;/strong&gt;
&lt;/abbr&gt; A new Origami component ft-concept-button (:blobaww:); more accessibility fixes (:blob-hype:); an update on the Bower and Origami Build Service v2 migration (:blobhelp:).&lt;/p&gt;

&lt;h2 id=&quot;top-things&quot;&gt;Top things&lt;/h2&gt;

&lt;p&gt;Some of the bigger Origami news since our last update:&lt;/p&gt;

&lt;h3 id=&quot;a-new-component-ft-concept-button&quot;&gt;A new component, ft-concept-button&lt;/h3&gt;

&lt;p&gt;We have a new component, &lt;a href=&quot;https://origami.ft.com/storybook/?path=/story/components-ft-concept-button--follow-button&quot;&gt;ft-concept-button&lt;/a&gt;! ft-concept-button was added to support the Accounts team build the new newsletters signup page. This component represents a number of exciting firsts. Nice work chee 👏&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The first new component to be added to the &lt;a href=&quot;https://www.figma.com/file/MyHQ1qdwYyek5IBdhEEaND/FT-UI-Library?node-id=156%3A669&quot;&gt;design team’s Figma UI Library&lt;/a&gt; ahead of implementation in Origami – big thanks to Ajai! 💪 We think this workflow is the correct way around. Origami aims to be the reference implementation of our design guidelines.&lt;/li&gt;
  &lt;li&gt;The first component to be developed from scratch within Storybook.&lt;/li&gt;
  &lt;li&gt;The first component to release public JSX templates for consuming projects to use.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You won’t find ft-concept-button in the &lt;a href=&quot;https://registry.origami.ft.com/components/&quot;&gt;Origami component registry&lt;/a&gt; right now. Instead take a look at our work in progress &lt;a href=&quot;https://origami.ft.com/storybook/?path=/story/components-ft-concept-button--follow-button&quot;&gt;Storybook demos&lt;/a&gt;. We continue to add new demos for existing components there. Read our previous newsletter to learn &lt;a href=&quot;/blog/2022/01/28/newsletter/#storybook-stories--jsx-templates&quot;&gt;why Storybook and JSX templates are an exciting addition to Origami components.&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;more-accessibility-improvements&quot;&gt;More accessibility improvements&lt;/h3&gt;

&lt;p&gt;We continue to work away at accessibility improvements to address &lt;a href=&quot;https://github.com/Financial-Times/origami/issues/498&quot;&gt;issues raised by our Digital Accessibility Centre (DAC) audit&lt;/a&gt;. Jake has led on this work and shared his learnings along the way, which has been great. For example I’ve enjoyed using MacOS Voice Control to test an issue in &lt;a href=&quot;https://registry.origami.ft.com/components/o-forms&quot;&gt;o-forms&lt;/a&gt; demos where the form inputs &lt;a href=&quot;https://www.w3.org/WAI/WCAG21/Techniques/general/G211&quot;&gt;accessible name and visible label do not match&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In case you haven’t seen it already the &lt;a href=&quot;https://financialtimes.slack.com/archives/C2LMEKC6S&quot;&gt;#accessibility Slack channel&lt;/a&gt; is a great place to ask questions and share tips and articles.&lt;/p&gt;

&lt;p&gt;If you are thinking about organising an accessibility audit for your project, contact Rich Lewis or Guy Powell in the &lt;a href=&quot;https://financialtimes.slack.com/archives/C02NW8G3VPD&quot;&gt;#accessibility-improvements Slack channel&lt;/a&gt;. DAC provide the FT with 10 hours per week for new audits and reviews, they can also provide suggestions for improvements and answer any accessibility related questions.&lt;/p&gt;

&lt;h3 id=&quot;update-on-the-bower-and-origami-build-service-v2-migration&quot;&gt;Update on the Bower and Origami Build Service v2 migration&lt;/h3&gt;

&lt;p&gt;There are only &lt;em&gt;3 months left&lt;/em&gt; to migrate from Origami Build Service V2 to V3 and migrate from the Bower to npm package manager. Apps which fail to migrate will break in July, a year after &lt;a href=&quot;https://origami.ft.com/blog/2021/07/01/origami-on-npm-and-how-to-migrate/&quot;&gt;our initial announcement&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To learn more about the changes see the original &lt;a href=&quot;https://origami.ft.com/blog/2021/07/01/origami-on-npm-and-how-to-migrate/&quot;&gt;announcement and guides on how to migrate products&lt;/a&gt;. We also have a &lt;a href=&quot;https://docs.google.com/spreadsheets/d/1Pem5e6cR0aiuKpYa7VD08AnSSynzjRtWt_VAHAoyhPQ/edit#gid=1513272952&quot;&gt;migration tracker&lt;/a&gt; you may use to identify whether any of your systems are affected. I’m seeing a lot of projects from FT Core, FT Creative, FT Specialist there 👀 We’re continuing to reach out to teams and offer support, please let us know in the &lt;a href=&quot;https://financialtimes.slack.com/archives/C02FU5ARJ&quot;&gt;#origami-support&lt;/a&gt; Slack channel if you have any questions!&lt;/p&gt;

&lt;h2 id=&quot;special-thanks&quot;&gt;Special Thanks&lt;/h2&gt;

&lt;p&gt;Special thanks this week goes to Joanna Kao from the data journalism team for her work migrating the &lt;a href=&quot;https://registry.origami.ft.com/components/g-audio@2.0.1&quot;&gt;g-audio&lt;/a&gt; component from Bower to npm, and making a number of other improvements to bring it inline with current Origami standards. Thanks Joanna!&lt;/p&gt;

&lt;h2 id=&quot;broader-update&quot;&gt;Broader update&lt;/h2&gt;

&lt;p&gt;A digest list of some other things that have happened recently:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://registry.origami.ft.com/components/o-tracking&quot;&gt;o-tracking&lt;/a&gt;: now has an option to always use a queue instead of using the Beacon API, which only works when the device is online. This will allow ft-app to upgrade to the latest version of Origami components. Thank you Charlotte Payne for reviewing, and clearly communicating the apps requirements!&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://registry.origami.ft.com/components/g-audio&quot;&gt;g-audio&lt;/a&gt;: has migrated from bower to npm, thanks again Joanna.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://registry.origami.ft.com/components/o-forms&quot;&gt;o-forms&lt;/a&gt;: toggles and standard checkboxes may now include a label and longer description, this was added to support the acquisition team make improvements to consent options on article sign up and register pages; also toggles have been updated with iconography to indicate on/off state; and finally the colour of inverse toggles for dark background has been fixed.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://origami.ft.com/storybook/?path=/story/components-ft-concept-button--follow-button&quot;&gt;ft-concept-button&lt;/a&gt;: as mentioned, we have a new ft-concept-button component! Added to support the Accounts team build the new newsletters signup page.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/Financial-Times/o-fonts-assets&quot;&gt;o-fonts-assets&lt;/a&gt;: we’re continuing to work on rolling out variable fonts, so our digital products can have more typographic design choices available – strengthening the FT brand – without hindering performance. We have the commissioned fonts from our type foundry Klim, and are working to verify they work as expected. Watch this space.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/Financial-Times/useragent_parser&quot;&gt;useragent_parser&lt;/a&gt;: now detects iOS &amp;gt;=11 in-app webview, this project is used by &lt;a href=&quot;https://polyfill.io/&quot;&gt;polyfill.io&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/Financial-Times/polyfill-library&quot;&gt;polyfill-library&lt;/a&gt;: &lt;a href=&quot;https://github.com/Financial-Times/polyfill-library/releases/tag/v3.111.0&quot;&gt;gets a number of fixes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://registry.origami.ft.com/components/o-table&quot;&gt;o-table&lt;/a&gt;: has received a fix which ensures table rows are displayed correctly when a filter is applied more than once.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://registry.origami.ft.com/components/o-typography&quot;&gt;o-typography&lt;/a&gt;: external links no longer display an icon. During the Origami accessibility audit we discovered some people think the icon indicates the link will open in a new window, when in-fact we mean it to indicate an external link. The &lt;a href=&quot;https://designnotes.blog.gov.uk/2016/11/28/removing-the-external-link-icon-from-gov-uk/&quot;&gt;Government Digital Services (GDS) team came to the same conclusion in their user testing&lt;/a&gt;. After discussing with the broader design team we followed GDS and removed the icon entirely from external links.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://origami.ft.com/storybook/?path=/story/components-o-buttons--ghost-button&quot;&gt;o-buttons&lt;/a&gt;: has a new button type, the ghost button 👻 It’s useful when many buttons are used together, for example rows in a table with repeated action buttons. We’ve also added pagination and button group Storybook stories. The pagination &lt;a href=&quot;https://origami.ft.com/storybook/?path=/story/components-o-buttons--pagination&quot;&gt;Storybook demo&lt;/a&gt; is interactive, much more helpful than our &lt;a href=&quot;https://registry.origami.ft.com/components/o-buttons@7.5.0#demo-pagination-layout&quot;&gt;current pagination demo&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://registry.origami.ft.com/components/o-visual-effects&quot;&gt;o-visual-effects&lt;/a&gt;: gets new CSS Custom Properties so Origami Build Service users may match shadow styles e.g. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--o-visual-effects-shadow-high&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/Financial-Times/origami-vscode-extension-pack&quot;&gt;origami-vscode-extension-pack&lt;/a&gt;: Is an extension pack for VSCode to make working with Origami components a smoother experience. It now includes Prettier.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://registry.origami.ft.com/components/o-header&quot;&gt;o-header&lt;/a&gt;: Now shows the entire focus ring within the drawer, improving accessibility for keyboard users.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://registry.origami.ft.com/components/o-cookie-message&quot;&gt;o-cookie-message&lt;/a&gt;: Now supports a configurable “manage cookies page” url, so non-ft projects can use it.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://registry.origami.ft.com/components/o-banner&quot;&gt;o-banner&lt;/a&gt;: has a number of accessibility improvements, e.g. the close button label is not repeated and it now appears in the navigation tree to allow users of assistive technology to jump straight to the banner.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://registry.origami.ft.com/components/o-quote&quot;&gt;o-quote&lt;/a&gt;: now has &lt;a href=&quot;https://origami.ft.com/storybook/?path=/story/components-o-quote--editorial-quote&quot;&gt;o-quote Storybook demos&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://registry.origami.ft.com/components/o-tabs&quot;&gt;o-tabs&lt;/a&gt;: now has &lt;a href=&quot;https://origami.ft.com/storybook/?path=/story/components-o-tabs--big&quot;&gt;o-tabs Storybook demos&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Lee Moody</name></author><category term="Newsletter" /><summary type="html">TL;DR: A new Origami component ft-concept-button (:blobaww:); more accessibility fixes (:blob-hype:); an update on the Bower and Origami Build Service v2 migration (:blobhelp:).</summary></entry><entry><title type="html">Origami Newsletter, January 2022</title><link href="https://origami.ft.com/blog/2022/01/28/newsletter/" rel="alternate" type="text/html" title="Origami Newsletter, January 2022" /><published>2022-01-28T00:00:00+00:00</published><updated>2022-01-28T00:00:00+00:00</updated><id>https://origami.ft.com/blog/2022/01/28/newsletter</id><content type="html" xml:base="https://origami.ft.com/blog/2022/01/28/newsletter/">&lt;p&gt;&lt;abbr title=&quot;Too long; didn't read&quot;&gt;
&lt;strong&gt;
TL;DR:
&lt;/strong&gt;
&lt;/abbr&gt; A belated happy new year to you! The Origami team are off to a flying start. This feature includes many accessibility improvements; app team collaboration; Storybook Stories and JSX templates for components; and ongoing bower to npm migration support.&lt;/p&gt;

&lt;h2 id=&quot;top-things&quot;&gt;Top things&lt;/h2&gt;

&lt;p&gt;Some of the bigger Origami news from the last month:&lt;/p&gt;

&lt;h3 id=&quot;bower-to-npm--origami-build-service-migration-update&quot;&gt;Bower To npm / Origami Build Service migration update&lt;/h3&gt;

&lt;p&gt;Back in July 2021 we announced Origami components had moved from the Bower to npm package manager. That means there is 6 months remaining until we turn off the Origami Bower Registry and Origami Build Service V2.&lt;/p&gt;

&lt;p&gt;Teams using Bower need to migrate to npm, and teams using V2 of the Origami Build Service need to migrate to V3. Your team has scheduled migration work right? Right? If not fear not. We’re continuing to reach out to teams and offer support, please let us know in the &lt;a href=&quot;https://financialtimes.slack.com/archives/C02FU5ARJ&quot;&gt;#origami-support&lt;/a&gt; Slack channel if you have any questions. 😊&lt;/p&gt;

&lt;p&gt;To learn more about the changes see the original &lt;a href=&quot;https://origami.ft.com/blog/2021/07/01/origami-on-npm-and-how-to-migrate/&quot;&gt;announcement and guides on how to migrate products&lt;/a&gt;. We also have a &lt;a href=&quot;https://docs.google.com/spreadsheets/d/1Pem5e6cR0aiuKpYa7VD08AnSSynzjRtWt_VAHAoyhPQ/edit#gid=1513272952&quot;&gt;migration tracker&lt;/a&gt; you may use to identify whether any of your systems are affected.&lt;/p&gt;

&lt;h3 id=&quot;accessibility-audit&quot;&gt;Accessibility audit&lt;/h3&gt;

&lt;p&gt;Accessibility audits for ft.com help Origami identify issues in components and distribute fixes to other projects which use Origami, from 3rd party maintained products to internal tools. But Origami components have never been audited proactively and in isolation, until now!&lt;/p&gt;

&lt;p&gt;We received our first accessibility audit by DAC (Digital Accessibility Center) and it’s a whopping 237 pages. This month the team have triaged the issues and begun releasing fixes. I’m pleased to report we’ve resolved 25% so far.&lt;/p&gt;

&lt;p&gt;One great example is &lt;a href=&quot;https://registry.origami.ft.com/components/o-tabs@8.0.0&quot;&gt;o-tabs v8&lt;/a&gt; which now implements the &lt;a href=&quot;https://www.w3.org/TR/wai-aria-practices/#tabpanel&quot;&gt;wai-aria tabs design pattern&lt;/a&gt;. Improvements include keyboard support for moving between tabs using arrow keys, relationships between tabs and their associated tab-panel, and more (&lt;a href=&quot;https://github.com/Financial-Times/origami/pull/571&quot;&gt;o-tabs@8 pull request&lt;/a&gt;).&lt;/p&gt;

&lt;figure&gt;
    &lt;blockquote&gt;
        &lt;p&gt;that tab panel looks pretty much prefect to me!&lt;/p&gt;
    &lt;/blockquote&gt;
    &lt;figcaption&gt;- Digital Accessibility Center representative&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;In case you missed Guy Powell’s email last week, you might like to know “DAC are now engaged 10 hours per week, every week to provide audits, reviewing new products and services, provide suggestions for improvements and answer any accessibility related questions”. It has been incredibly helpful to get quick and iterative feedback on our improvements. 🙏 If you are thinking about organising an accessibility audit for your project, contact Rich Lewis or Guy Powell in the &lt;a href=&quot;https://financialtimes.slack.com/archives/C02NW8G3VPD&quot;&gt;#accessibility-improvements Slack channel&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;app-team-collaboration&quot;&gt;App team collaboration&lt;/h3&gt;

&lt;p&gt;This month the Origami team collaborated with the Apps team to investigate ways the article page font resizing setting in the app could be improved using a little known &lt;a href=&quot;https://registry.origami.ft.com/components/o-typography@7.1.0/sassdoc?brand=core#variable-o-typography-relative-units&quot;&gt;relative typography and spacing feature in Origami&lt;/a&gt;. Our aims were to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Improve the app’s article font size feature for users&lt;/strong&gt;, only some aspects of the article page resize correctly, other aspects do not respond and look somewhat broken – not a quality offering.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Improve the app’s design consistency&lt;/strong&gt;, some Origami components cannot be used on the article page without significant work and ongoing maintenance of style overrides for the font size feature. This requires more work to re-implement UI in the app and reduces consistency across FT products.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Reduce cost of new article page features / maintenance&lt;/strong&gt;, specific font size overrides currently need to be considered and maintained for any new article page feature.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure&gt;
	&lt;img alt=&quot;Left: FT APP article page with pull quote. The pull quote text is strangely smaller in size than the main article copy, with a large line height that makes it awkward to read. Right: FT APP article page with large, correctly scaled pull quote.&quot; src=&quot;https://www.ft.com/__origami/service/image/v2/images/raw/https://origami.ft.com/assets/images/2022-01-28-newsletter/ft-app-font-size-quote.png?source=origami&quot; /&gt;
	&lt;figcaption&gt;
        Right: FT App article page with a large font size setting chosen. The pull quote does not scale correctly, lowering its impact and making it more difficult to read. Left: A proposed solution would allow all app elements to scale in proportion without targeted overrides – improving reliability and reducing implementation costs for new article features.
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
	&lt;img alt=&quot;Left: FT APP article page with table. Table data is displayed larger and out of proportion compared to the main article copy. Right: FT APP article page with correctly scaled table data.&quot; src=&quot;https://www.ft.com/__origami/service/image/v2/images/raw/https://origami.ft.com/assets/images/2022-01-28-newsletter/ft-app-font-size-table.png?source=origami&quot; /&gt;
	&lt;figcaption&gt;
        Right: FT App article page with a small font size setting selected. The table content does not scale in line with article body content, it looks out of place and means the user can't evaluate more table data without scrolling back and forth. Left: As before, a proposed solution would allow fix this. Since all components scale with this method without further targeted overrides components aren't missed and don't look out proportion, improving the perceived quality of the app.
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;By the end of the week we had 5 possible approaches to recommend, ranging in scope from “delete the feature” to “modernise all the things”, in-between a very clever and pragmatic solution – if we do say so ourselves.&lt;/p&gt;

&lt;p&gt;See the &lt;a href=&quot;https://docs.google.com/document/d/1JpAxWOzUTn1sD3hAj_9yWS_FMaKcxKECk_tiXUfjO-E/edit#heading=h.5a2d438n46du&quot;&gt;ft-app font size feature spike document&lt;/a&gt; to learn more.&lt;/p&gt;

&lt;p&gt;The spike was a lot of fun and a great way to share knowledge between our teams. Massive shout out to Charlotte Payne from the apps team for her excellent work on this!&lt;/p&gt;

&lt;h3 id=&quot;storybook-stories--jsx-templates&quot;&gt;Storybook Stories &amp;amp; JSX templates&lt;/h3&gt;

&lt;p&gt;We mentioned in our &lt;a href=&quot;/blog/2021/11/05/newsletter/#storybook&quot;&gt;previous blog post&lt;/a&gt; that we are working on an &lt;a href=&quot;https://origami.ft.com/storybook/&quot;&gt;Origami Storybook&lt;/a&gt; which we see as an eventual replacement to our very custom &lt;a href=&quot;https://registry.origami.ft.com/components?active=true&amp;amp;maintained=true&quot;&gt;Origami component registry&lt;/a&gt;. We’re making progress and adding new components each week.&lt;/p&gt;

&lt;p&gt;This is very exciting because it will allow us to make the most of a large ecosystem of tools to help speed up design and development at the FT (&lt;a href=&quot;/blog/2021/11/05/newsletter/#storybook&quot;&gt;see details and screenshots in previous blog post&lt;/a&gt;). It’s also exciting because we’re writing JSX templates for our components for the first time, which we may make public in the near future. For teams who also use JSX templates, this could hugely reduce the complexity of implementing Origami components in a project and make our most tricky kind of migration (markup changes) simple when upgrading from one major version of a component to another.&lt;/p&gt;

&lt;p&gt;You can get a sneak peak at &lt;a href=&quot;https://origami.ft.com/storybook&quot;&gt;origami.ft.com/storybook&lt;/a&gt; and track our progress on our &lt;a href=&quot;https://github.com/Financial-Times/origami/issues/522&quot;&gt;component demos / storybook issue&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;special-thanks&quot;&gt;Special thanks&lt;/h2&gt;

&lt;p&gt;Special thanks this month goes to Guy and Rich, and the Digital Accessibility Center, for their support in the &lt;a href=&quot;https://financialtimes.slack.com/archives/C02NW8G3VPD&quot;&gt;#accessibility-improvements Slack channel&lt;/a&gt; 🙇‍♂️&lt;/p&gt;</content><author><name>Lee Moody</name></author><category term="Newsletter" /><summary type="html">TL;DR: A belated happy new year to you! The Origami team are off to a flying start. This feature includes many accessibility improvements; app team collaboration; Storybook Stories and JSX templates for components; and ongoing bower to npm migration support.</summary></entry><entry><title type="html">Origami Newsletter, October 2021</title><link href="https://origami.ft.com/blog/2021/11/05/newsletter/" rel="alternate" type="text/html" title="Origami Newsletter, October 2021" /><published>2021-11-05T00:00:00+00:00</published><updated>2021-11-05T00:00:00+00:00</updated><id>https://origami.ft.com/blog/2021/11/05/newsletter</id><content type="html" xml:base="https://origami.ft.com/blog/2021/11/05/newsletter/">&lt;p&gt;&lt;abbr title=&quot;Too long; didn't read&quot;&gt;
&lt;strong&gt;
TL;DR:
&lt;/strong&gt;
&lt;/abbr&gt; Origami image sets have moved and improved; the “master” brand is now the “core” brand; we’re creating Storybook demos for Origami components.&lt;/p&gt;

&lt;h2 id=&quot;top-things&quot;&gt;Top things&lt;/h2&gt;

&lt;p&gt;Some of the bigger Origami news from the last month:&lt;/p&gt;

&lt;h3 id=&quot;image-sets-have-moved-home&quot;&gt;Image sets have moved home&lt;/h3&gt;

&lt;p&gt;Origami image sets have moved. You used to be able to find image sets maintained by the Origami team under the &lt;a href=&quot;https://registry.origami.ft.com/components&quot;&gt;Origami registry&lt;/a&gt;. Now image sets are listed directly within &lt;a href=&quot;https://www.ft.com/__origami/service/image/v2/docs/image-sets&quot;&gt;Origami Image Service&lt;/a&gt; documentation. No more jumping between the Origami registry and the Origami Image Service URL Builder!&lt;/p&gt;

&lt;p&gt;Behind the scenes we’ve moved the images from multiple separate git repositories and S3 buckets into the Origami Image Service repository itself, using &lt;a href=&quot;https://git-lfs.github.com/&quot;&gt;Git Large File Storage (LFS)&lt;/a&gt;. This is a more simple architecture that allows us to publish new images and logos more quickly. Finally, author headshots were moved from being owned by Origami to being Editorial owned a couple years ago. However, many projects were still using the Origami Image Service to request (stale) author headshots. So we have now updated the Origami Image Service to no longer return an old headshot but to instead fetch an up-to-date image from our Content API.&lt;/p&gt;

&lt;p&gt;What’s the &lt;a href=&quot;https://www.ft.com/__origami/service/image/v2/&quot;&gt;Origami Image Service&lt;/a&gt;? It’s a service used to optimise, resize, and transform images. It works with FT images from an Origami image set, our Content APIs, or any image url. The quickest way to get started is to experiment with the &lt;a href=&quot;https://www.ft.com/__origami/service/image/v2/docs/url-builder&quot;&gt;URL builder&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;the-master-brand-is-now-the-core-brand&quot;&gt;The “master” brand is now the “core” brand&lt;/h3&gt;

&lt;p&gt;Origami components currently support 3 brands:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;master: FT branding for public ft.com sites and affiliates.&lt;/li&gt;
  &lt;li&gt;internal: Style suitable for tools, documentation, and internal products.&lt;/li&gt;
  &lt;li&gt;whitelabel: Base, structural styles only to add support for new brands.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To &lt;a href=&quot;https://docs.google.com/document/d/1v6z7_NkLFeYAFotTYB8C1OguO5iMHHLpAOv_yG5EKHI/edit#heading=h.tzfu5ukd61s&quot;&gt;address offensive and objectionable technology terms&lt;/a&gt; we opened a &lt;a href=&quot;https://github.com/Financial-Times/origami/issues/243&quot;&gt;proposal to rename the master brand&lt;/a&gt;, our brand team agreed we should rename the brand and decided with other stakeholders to rename the “master” brand to the “core” brand.&lt;/p&gt;

&lt;p&gt;We’re in the process of rolling out the rename. The “master” brand will become the “core” brand. This change will be reflected across Origami components, services, and documentation.&lt;/p&gt;

&lt;h4 id=&quot;how-does-the-brand-rename-affect-your-project&quot;&gt;How Does The Brand Rename Affect Your Project?&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;It doesn’t!&lt;/strong&gt; For now Origami components and services will continue to recognise the “master” brand.&lt;/p&gt;

&lt;p&gt;However, if your project is using the latest version of Origami components we suggest setting the “core” brand in your Sass.&lt;/p&gt;

&lt;div class=&quot;language-diff highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gd&quot;&gt;-$o-brand: 'master';
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+$o-brand: 'core';
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And if your project uses v3 of the Origami Build Service, we recommend setting “core” instead of “master” as your brand query parameter.&lt;/p&gt;

&lt;div class=&quot;language-diff highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gd&quot;&gt;-https://www.ft.com/__origami/service/build/v3/bundles/css?components=o-layout@^5.0.6&amp;amp;brand=master
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+https://www.ft.com/__origami/service/build/v3/bundles/css?components=o-layout@^5.0.6&amp;amp;brand=core
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We’re rolling out documentation changes this week. Keep a look out for that!&lt;/p&gt;

&lt;h3 id=&quot;storybook&quot;&gt;Storybook&lt;/h3&gt;

&lt;p&gt;We’re working on an &lt;a href=&quot;https://origami.ft.com/storybook/&quot;&gt;Origami Storybook&lt;/a&gt;. We see it as an eventual replacement to our very custom &lt;a href=&quot;https://registry.origami.ft.com/components?active=true&amp;amp;maintained=true&quot;&gt;Origami component registry&lt;/a&gt;. Why? Because we can maintain less code and take advantage of the substantial Storybook ecosystem. Let me tell you some of the reasons why that’s super exciting.&lt;/p&gt;

&lt;p&gt;Our current component demos are static. Take &lt;a href=&quot;https://registry.origami.ft.com/components/o-buttons@7.0.1&quot;&gt;o-buttons demos&lt;/a&gt; as an example. What you see is what you get. You can’t experiment by changing the type of button, the icon, or button text. However in the &lt;a href=&quot;https://origami.ft.com/storybook/?path=/story/button--big&quot;&gt;o-buttons story&lt;/a&gt; you can try updating a demo with your own content right in the browser under the “controls” tab.
&lt;img alt=&quot;&quot; src=&quot;/assets/images/2021-11-05-newsletter/story-controls.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We’ve made use of the Storybook plugin system to add a custom HTML tab, similar to the existing registry, where Origami users can copy HTML from when building web products. Unlike our existing component registry this HTML changes when you toggle demo controls. This should make it much easier to experiment with a component, find the feature/variants you’re looking for, then copy the HTML to implement it in your project.
&lt;img alt=&quot;&quot; src=&quot;/assets/images/2021-11-05-newsletter/story-html.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Storybook could also help us implement new components and keep in sync with the design team. We added a “design” tab to see a component’s Figma design right alongside its actual working implementation.
&lt;img alt=&quot;&quot; src=&quot;/assets/images/2021-11-05-newsletter/story-design.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In addition we’ve been hard at work bringing over our existing documentation alongside demos, such as component readme, migration guides, and changelog.
&lt;img alt=&quot;&quot; src=&quot;/assets/images/2021-11-05-newsletter/story-migration.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We’re also excited to make use of the existing plugin ecosystem. Check out the accessibility tab which will look for issues such as colour contrast.
&lt;img alt=&quot;&quot; src=&quot;/assets/images/2021-11-05-newsletter/story-accessibility.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Our next steps are to add more components and missing features such as Codedocs. We’ll also be looking for user feedback. We’d love to know what you think. 🙂&lt;/p&gt;

&lt;h2 id=&quot;special-thanks&quot;&gt;Special thanks&lt;/h2&gt;

&lt;p&gt;Special thanks this week goes to Mo Shawwa! Mo contributed to Origami to &lt;a href=&quot;https://github.com/Financial-Times/origami/pull/346&quot;&gt;fix a low level accessibility issue in o-normalise&lt;/a&gt; that could prevent readers with Voice activation software from filling out forms. Thanks for that! 💛&lt;/p&gt;

&lt;h2 id=&quot;broader-update&quot;&gt;Broader update&lt;/h2&gt;

&lt;p&gt;A digest of other things that have happened this month:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;o-normalise: Mo &lt;a href=&quot;https://github.com/Financial-Times/origami/pull/346&quot;&gt;improved o-normalise&lt;/a&gt; for users of voice control software like Dragon. Thanks, Mo!&lt;/li&gt;
  &lt;li&gt;o-date: We &lt;a href=&quot;https://github.com/Financial-Times/origami/issues/203&quot;&gt;improved consistency and accessibility&lt;/a&gt; by deprecating options for abbreviated date formats e.g. “1d ago” over “1 day ago”. This format was &lt;a href=&quot;https://github.com/Financial-Times/origami/issues/203&quot;&gt;only used on myft topic cards&lt;/a&gt;, which we opened a PR to change.&lt;/li&gt;
  &lt;li&gt;o-editorial-layout: The spacing between some article headings has been increased.&lt;/li&gt;
  &lt;li&gt;o-no: lots of other small things, we didn’t update this very thoroughly through the month.&lt;/li&gt;
  &lt;li&gt;Design token investigation continues steadily. We have a proof of concept to distribute design decisions (brand assets, colour palette, typographic scale, spacing, etc) across web, native platforms, and design tooling. We need to gather more feedback from designers and engineers and investigate possible workflows for the design team to make updates. To learn more see the &lt;a href=&quot;https://drive.google.com/file/d/12NykJZZy8VgvB4lEbwacjqXsZowI7QhM/view&quot;&gt;tech all hands recording&lt;/a&gt; (36 minutes in).&lt;/li&gt;
&lt;/ul&gt;</content><author><name>lee &amp; chee</name></author><category term="Newsletter" /><summary type="html">TL;DR: Origami image sets have moved and improved; the “master” brand is now the “core” brand; we’re creating Storybook demos for Origami components.</summary></entry><entry><title type="html">Origami Newsletter, September 2021</title><link href="https://origami.ft.com/blog/2021/10/05/newsletter/" rel="alternate" type="text/html" title="Origami Newsletter, September 2021" /><published>2021-10-05T00:00:00+01:00</published><updated>2021-10-05T00:00:00+01:00</updated><id>https://origami.ft.com/blog/2021/10/05/newsletter</id><content type="html" xml:base="https://origami.ft.com/blog/2021/10/05/newsletter/">&lt;p&gt;&lt;abbr title=&quot;Too long; didn't read&quot;&gt;
&lt;strong&gt;
TL;DR:
&lt;/strong&gt;
&lt;/abbr&gt; We made a monorepo, and gained a delivery manager&lt;/p&gt;

&lt;h2 id=&quot;top-things&quot;&gt;Top things&lt;/h2&gt;

&lt;p&gt;Some of the bigger Origami news from the last month:&lt;/p&gt;

&lt;h3 id=&quot;the-origami-component-system&quot;&gt;The Origami Component System&lt;/h3&gt;

&lt;p&gt;The biggest thing we’ve done this month is move all of our components into a single repository.&lt;/p&gt;

&lt;p&gt;Each component used to live in a separate code base, and that meant a lot of extra work when we want to make changes that affected more than one component. This work doesn’t change a lot by itself beyond how we work on components, but it is the foundation from which we’ll build a better component system.&lt;/p&gt;

&lt;h4 id=&quot;how-does-this-affect-me&quot;&gt;How does this affect me?&lt;/h4&gt;

&lt;p&gt;How this change affects you depends on how you interact with Origami&lt;/p&gt;

&lt;h5 id=&quot;origami-contributors&quot;&gt;Origami contributors&lt;/h5&gt;

&lt;p&gt;If you want to open an issue or a pull request on an Origami component, you should do it in the &lt;a href=&quot;https://github.com/Financial-Times/origami&quot;&gt;Origami Component System repository&lt;/a&gt;. The testing in CI is so fast now, any change runs the test on every single component and for most changes it finishes in about 2 minutes. Everything else should be about the same.&lt;/p&gt;

&lt;p&gt;Documentation is a little light at the moment, but if you run into any trouble you can always talk to us in #origami-support or #origami-chat on Slack.&lt;/p&gt;

&lt;h5 id=&quot;origami-consumers&quot;&gt;Origami consumers&lt;/h5&gt;

&lt;p&gt;This work itself doesn’t affect end-users of Origami, but later changes it unlocks (design tokens, better documentation, sass modules) will make your life better, I promise.&lt;/p&gt;

&lt;h5 id=&quot;designers&quot;&gt;Designers&lt;/h5&gt;

&lt;p&gt;This change won’t affect you yet, but the work we’re going to build on top of this will give you better insight into how a change to one component affects the others. And it’s the first step to Origami being the reference implementation of the design system.&lt;/p&gt;

&lt;h5 id=&quot;everyone-else&quot;&gt;Everyone else&lt;/h5&gt;

&lt;p&gt;The sites that depend on Origami have a bright future of performing better and being more accessible.&lt;/p&gt;

&lt;h3 id=&quot;origami-has-a-new-team-member&quot;&gt;Origami has a new team member&lt;/h3&gt;

&lt;p&gt;Since we last spoke, the team has grown!&lt;/p&gt;

&lt;p&gt;We’re very happy to welcome aboard Kamran Muniree who is now serving as Origami’s delivery manager. He’s already made a big difference, and the team are very excited about the future.&lt;/p&gt;

&lt;p&gt;We’re also still hiring for an engineering role, so make sure you apply if you’ve ever wanted to work on Origami. There has never been a better time to be part of the team.&lt;/p&gt;

&lt;h3 id=&quot;origami-office-hours&quot;&gt;Origami Office Hours&lt;/h3&gt;

&lt;p&gt;This isn’t new, but every week on a Friday at 2p.m. (London time) the team are available On-Line at a meeting called &lt;a href=&quot;https://calendar.google.com/event?action=TEMPLATE&amp;amp;tmeid=MWVzZDgzMmhtcXZhYTVvNmlyZXZyNm5tNjdfMjAyMTEwMDhUMTMwMDAwWiBjaGVlLnJhYmJpdHNAZnQuY29t&amp;amp;tmsrc=chee.rabbits%40ft.com&amp;amp;scp=ALL&quot;&gt;Origami Office Hours&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you ever have any questions that you’d prefer talking through in person, you can pop by there and we’ll be available.&lt;/p&gt;

&lt;p&gt;Thanks to Kamran Muniree it is now available in the P&amp;amp;T calendar.&lt;/p&gt;

&lt;h2 id=&quot;special-thanks&quot;&gt;Special thanks&lt;/h2&gt;

&lt;p&gt;leaf rogers 🍃 for helping out Jake in an emergency when an unexpected large video found its way into the image service and ate all the memory and it crashed&lt;/p&gt;

&lt;h2 id=&quot;broader-update&quot;&gt;Broader update&lt;/h2&gt;

&lt;p&gt;A digest of other things that have happened this month:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Added a &lt;a href=&quot;https://origami.ft.com/storybook/?path=/story/button--inverse&amp;amp;args=label:Edit;size:big;type:primary;icon:edit&quot;&gt;storybook config for o-buttons&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Added Origami website to monorepo&lt;/li&gt;
  &lt;li&gt;Added script which logs out what releases will be made for which packages&lt;/li&gt;
  &lt;li&gt;Replaced scroll event with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IntersectionObserver&lt;/code&gt; to improve performance of o-layout&lt;/li&gt;
  &lt;li&gt;Add wheat-100 to o-colors master brand palette&lt;/li&gt;
  &lt;li&gt;Brought n-notification into the monorepo&lt;/li&gt;
  &lt;li&gt;Updated the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;origami.json&lt;/code&gt; urls to point at the monorepo&lt;/li&gt;
  &lt;li&gt;Added homepage, bugs and support email to the package.json of every component&lt;/li&gt;
  &lt;li&gt;Increased the bottom margin of h2 and h3 editorial headings&lt;/li&gt;
&lt;/ul&gt;</content><author><name>chee</name></author><category term="Newsletter" /><summary type="html">TL;DR: We made a monorepo, and gained a delivery manager</summary></entry></feed>