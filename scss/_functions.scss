/// Gets the color of a button property for a given theme and state.
///
/// @example background: oButtonsGetColor($state: 'hover', $property: 'border', $theme: 'primary');
///
/// @access public
/// @param {String} $state
/// @param {String} $property
/// @param {String|List} $theme If no theme is provided the currently configured brand theme is used.
/// @return {Color}
@function oButtonsGetColor($state, $property, $theme: null) {
	$state-color: oBrandGet('o-buttons', '#{$state}-#{$property}', $force-variant: $theme);
	@if $state-color {
		@return $state-color;
	}
	$default-color: oBrandGet('o-buttons', 'default-#{$property}', $force-variant: $theme);
	@return $default-color;
}

/// Maps button theme names to class modifiers.
///
/// Remove if possible in the next https://github.com/Financial-Times/o-buttons/issues/156.
///
/// @example
///  _oButtonsGetThemeSelector('primary') // o-buttons--primary
///  _oButtonsGetThemeSelector('primary-inverse') // o-buttons--primary.o-buttons--inverse
///
/// @access private
/// @param {String} $theme - One of $o-buttons-themes
/// @param {String} $button-class - The base button class e.g. o-buttons
/// @return {String} CSS class selector without leading `.` e.g. o-buttons.o-buttons--inverse
@function _oButtonsGetThemeSelector($theme, $button-class: $o-buttons-class) {
	// Generate the selector.
	$theme-selector: '';
	@if length($theme) > 1 {
		@each $theme-part in $theme {
			$prepend: if($theme-selector == '', '', '#{$theme-selector}.');
			$theme-selector: '#{$prepend}#{$button-class}--#{$theme-part}';
		}
	} @else {
		$theme-selector: '#{$button-class}--#{$theme}';
	}
	@return $theme-selector;
}
