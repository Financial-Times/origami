/// Gets the color of a button property for a given theme and state.
///
/// @example background: oButtonsGetColor($state: 'hover', $property: 'border', $theme: 'primary');
///
/// @access public
/// @param {String} $state
/// @param {String} $property
/// @param {String|List|Map} $theme A theme string/list or a custom theme map. Will default to the currently configured theme.
/// @return {Color}
@function oButtonsGetColor($state, $property, $theme: null) {
	$state-color: null;
	$default-color: null;
	@if type-of($theme) == 'map' {
		// Custom theme. Override button color.
		$custom-config: _oButtonsThemeToBrandConfig($theme);
		$state-color: oBrandGet($component: 'o-buttons', $variables: '#{$state}-#{$property}', $override-config: $custom-config);
		$default-color: oBrandGet($component: 'o-buttons', $variables: 'default-#{$property}', $override-config: $custom-config);
	} @else {
		// The theme is defined as a brand variant.
		$state-color: oBrandGet($component: 'o-buttons', $variables: '#{$state}-#{$property}', $configure-for: $theme);
		$default-color: oBrandGet($component: 'o-buttons', $variables: 'default-#{$property}', $configure-for: $theme);
	}
	@return if($state-color, $state-color, $default-color);
}

/// Maps button theme names to class modifiers.
///
/// Remove if possible in the next https://github.com/Financial-Times/o-buttons/issues/156.
///
/// @example
///  _oButtonsGetThemeSelector('primary') // o-buttons--primary
///  _oButtonsGetThemeSelector('primary', 'inverse') // o-buttons--primary.o-buttons--inverse
///
/// @access private
/// @param {String} $theme - One of $o-buttons-themes
/// @param {String} $button-class - The base button class e.g. o-buttons
/// @return {String} CSS class selector without leading `.` e.g. o-buttons.o-buttons--inverse
@function _oButtonsGetThemeSelector($theme, $button-class: $o-buttons-class) {
	// Generate the selector.
	$theme-selector: '';
	@if length($theme) > 1 {
		@each $theme-part in $theme {
			$prepend: if($theme-selector == '', '', '#{$theme-selector}.');
			$theme-selector: '#{$prepend}#{$button-class}--#{$theme-part}';
		}
	} @else {
		$theme-selector: '#{$button-class}--#{$theme}';
	}
	@return $theme-selector;
}
