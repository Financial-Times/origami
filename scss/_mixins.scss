@mixin oFtButtonsSize($size) {
	// Dimensions
	$button-dimensions: map-get($o-ft-buttons-sizes, $size);
	padding: 0 map-get($button-dimensions, padding-right) 0 map-get($button-dimensions, padding-left);
	font-size: map-get($button-dimensions, font-size);
	line-height: map-get($button-dimensions, height) - 2px; // height - border width
}
@mixin oFtButtonsTheme($theme) {
	@include oColorsFor(o-ft-buttons-#{$theme});

	&[aria-selected=true] {
		@include oColorsFor(o-ft-buttons-#{$theme}-selected);

		@if oColorsGetColorFor(o-ft-buttons-#{$theme}-selected, text) != transparent {
			&:focus {
				box-shadow: inset 0 0 3px 1px oColorsGetColorFor(o-ft-buttons-#{$theme}-selected, text);
			}
		}
	}

	&[aria-pressed=true] {
		@include oColorsFor(o-ft-buttons-#{$theme}-pressed);

		@if oColorsGetColorFor(o-ft-buttons-#{$theme}-pressed, text) != transparent {
			&:focus {
				box-shadow: inset 0 0 3px 1px oColorsGetColorFor(o-ft-buttons-#{$theme}-pressed, text);
			}
		}
	}

	@if oColorsGetColorFor(o-ft-buttons-#{$theme}, border) != transparent {
		&:focus {
			box-shadow: inset 0 0 3px 1px oColorsGetColorFor(o-ft-buttons-#{$theme}, border);
		}
	}

	#{$o-hoverable-if-hover-enabled} & {
		// Apply :hover state only in these cases:
		// - Not disabled
		// - Not selected
		// - Not pressed
		&:not([disabled]):not([aria-selected=true]):not([aria-pressed=true]):hover {
			transition: background-color 0.3s ease 0;
			background-color: rgba(oColorsGetColorFor(o-ft-buttons-#{$theme}-hover, background), 0.15);
		}
	}
}

@mixin oFtButtons($theme: standard, $size: medium) {
	box-sizing: border-box;
	display: inline-block;
	margin: 0;
	-moz-appearance: none;
	-webkit-appearance: none;
	text-decoration: none;
	text-align: center;
	border-width: 1px;
	border-style: solid;
	border-radius: 5px;
	outline: 0;
	user-select: none;
	cursor: pointer;
	transition: background-color 0.3s;

	@include oFtButtonsSize($size);
	@include oFtButtonsTheme($theme);

	&[disabled] {
		cursor: default;
		opacity: 0.4;
	}
}
