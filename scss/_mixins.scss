////
/// @group o-buttons
/// @link http://registry.origami.ft.com/components/o-buttons
////

/// Button size
/// Ouputs dimensions for a specific button size
///
/// @example
/// .my-button--big {
/// 	@include oButtonsSize(big);
/// }
///
/// @param {String} $size
@mixin oButtonsSize($size) {
	$button-dimensions: map-get($o-buttons-sizes, $size);
	$border-width: map-get($button-dimensions, border-width);
	$vertical-padding: 1/2 * (map-get($button-dimensions, min-height) - map-get($button-dimensions, font-size)) - $border-width;

	background-size: map-get($button-dimensions, background-size);
	min-height: map-get($button-dimensions, min-height);
	min-width: map-get($button-dimensions, min-width);
	padding: $vertical-padding map-get($button-dimensions, padding-right) $vertical-padding map-get($button-dimensions, padding-left);
	font-size: map-get($button-dimensions, font-size);
	line-height: map-get($button-dimensions, min-height) - $border-width * 2 - $vertical-padding * 2;
	border-width: $border-width;
}

// Properties for a state of a given theme
//
// @param {String} $state - One of normal, hover, focus, selected, disabled, pressed
@mixin _oButtonsPropertiesForState($theme, $state) {
	@if _oButtonsThemeHasState($theme, $state) {
		$states: map-get($o-buttons-themes, $theme);

		@each $property, $value in map-get($states, $state) {
			#{$property}: #{$value};
		}
	}
}

/// Button theme construct
/// Ouputs styles for all button states
///
/// @example
/// .my-button--standout {
/// 	@include oButtonsTheme(standout);
/// }
///
/// @param {String} $theme
@mixin oButtonsTheme($theme) {
	@include _oButtonsPropertiesForState($theme, normal);

	// http://www.w3.org/TR/wai-aria/states_and_properties#aria-selected
	// http://www.w3.org/TR/wai-aria/states_and_properties#aria-pressed
	&[aria-selected=true], // e.g. A selected tab or page number in pagination
	&[aria-pressed=true] { // e.g. A "follow" button that is pressed
		@include _oButtonsPropertiesForState($theme, pressedselected);
	}

	&[disabled] {
		@include _oButtonsPropertiesForState($theme, disabled);
	}

	&:not([disabled]) {
		&:focus:not(:hover),
		#{$o-hoverable-if-hover-enabled} &:hover {
			@include _oButtonsPropertiesForState($theme, hover);
		}
		&:active {
			@include _oButtonsPropertiesForState($theme, active);
		}
	}
	&:focus:not(:active):not(:hover) {
		@include _oButtonsPropertiesForState($theme, focus);
	}
}

/// Button construct
/// Basic button styling and default states for specific theme and size
///
/// @example Base styles
///  .my-button {
///  	@include oButtons;
///  }
/// @example Custom theme
///  .my-inverse-button {
///  	@include oButtons($theme: inverse);
///  }
/// @example Custom size
///  .my-big-button {
///  	@include oButtons(big);
///  }
/// @example Custom size and theme
///  .my-big-standout-button {
///  	@include oButtons(big, standout);
///  }
///
/// @param {String} $size (medium)
/// @param {String} $theme (standard)
@mixin oButtons($size: medium, $theme: standard) {
	display: inline-block;
	box-sizing: border-box;
	vertical-align: middle;
	margin: 0;
	outline: 0;
	border-style: solid;
	text-align: center;
	text-decoration: none;
	font-family: $o-buttons-font-family;
	font-weight: $o-buttons-font-weight;
	border-radius: $_o-buttons-border-radius;
	cursor: pointer;
	transition: 0.3s background-color, 0.15s color ease-out, 0.15s border-color ease-out;
	-moz-appearance: none;
	-webkit-appearance: none;
	user-select: none;
	background-clip: padding-box;
	// Prevent fat white type on a dark background
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;

	@include oButtonsSize($size);
	@include oButtonsTheme($theme);

	// Same as aria-disabled:
	// http://www.w3.org/TR/wai-aria/states_and_properties#aria-disabled
	// This is a common style for all button themes
	&[disabled] {
		pointer-events: none;
		opacity: 0.4;
		cursor: default;
	}

	// Remove extra padding in Firefox
	&::-moz-focus-inner {
		border: 0;
		padding: 0;
	}
}
