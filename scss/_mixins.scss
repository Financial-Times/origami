@mixin oTopperThemeElements {
	.o-topper__opinion-genre {
		@include oTopperOpinionGenre;
	}

	.o-topper__headshot {
		@include oTopperHeadshot;
	}

	.o-topper__headshot-image {
		@include oTopperHeadshotImage;
	}

	.o-topper__anchor-link {
		@include oTopperAnchorLink;
	}
}

@mixin oTopperThemes() {
	@include oTopperThemeElements;

	.o-topper--branded {
		@include oTopperThemeBranded;
	}

	.o-topper--opinion {
		@include oTopperThemeOpinion;
	}

	.o-topper--has-headshot {
		@include oTopperHasHeadshot;
	}

	.o-topper--full-bleed-offset {
		@include oTopperThemeFullBleedOffset;
	}

	.o-topper--split-text-left,
	.o-topper--split-text-center {
		@include oTopperThemeSplitText;
	}

	.o-topper--full-bleed-image-center,
	.o-topper--full-bleed-image-left {
		@include oTopperThemeFullBleedImage;
	}

	.o-topper--package {
		@include oTopperThemePackage;
	}

	.o-topper--package-extra,
	.o-topper--package-extra-wide {
		@include oTopperThemePackageExtra;
	}

	.o-topper--package-special-report {
		@include oTopperThemePackageSpecialReport;
	}

	.o-topper--news-package {
		@include oTopperThemeNewsPackage;
	}
}

@mixin oTopperElements {
	.o-topper {
		@include oTopper;
	}

	.o-topper--centered {
		@include oTopperCentered;
	}

	.o-topper__content {
		@include oTopperContent;
	}

	.o-topper__visual {
		@include oTopperVisual;
	}

	.o-topper__visual,
	.o-topper__background {
		@include oTopperBackground;
	}

	.o-topper--basic {
		@include oTopperBasic;
	}

	.o-topper__headline {
		@include oTopperHeadline;
	}

	.o-topper__headline--large {
		@include oTopperHeadlineLarge;
	}

	.o-topper__summary {
		@include oTopperSummary;
	}

	.o-topper__standfirst {
		@include oTopperStandfirst;
	}

	.o-topper__summary--body {
		@include oTopperSummaryBody;
	}

	.o-topper__tags {
		@include oTopperTags;
	}

	.o-topper__columnist {
		@include oTopperColumnist;
	}

	.o-topper__columnist-name {
		@include oTopperColumnistName;
	}

	.o-topper__brand {
		@include oTopperBrand;
	}

	.o-topper__topic {
		@include oTopperTopic;
	}

	.o-topper__read-next {
		@include oTopperReadNext;
	}

	.o-topper__image {
		@include oTopperImage;
	}

	.o-topper__image-credit {
		@include oTopperImageCredit;
	}
}

@mixin oTopperColors() {
	@each $color in $_o-topper-colors {
		.o-topper--color-#{$color} {
			@include oTopperColor($color);
		}
	}
}

// uses topper background colour to set background and pick contrasting text color
@mixin oTopperColor($color-name) {
	$background: oColorsGetPaletteColor($color-name);
	$foreground: oColorsGetTextColor($background, $opacity: 100);
	$is-light: $foreground == 'white';
	$hover-color: lighten($foreground, 40%);

	@if $is-light {
		$hover-color: darken($foreground, 20%);
	}

	// include oTopperColor on a parent then extend this placeholder on a
	// descendent to lend that descendent the color you specified in the mixin
	.o-topper__background,
	.o-topper__content {
		@if $color-name == 'wheat' {
			background-color: oColorsMix($color: 'wheat', $percentage: 40);
		} @else {
			background-color: $background;
		}
	}

	@if not $is-light {
		.o-topper__standfirst {
			a {
				color: $foreground;
				border-bottom-color: $foreground;

				&:hover {
					color: $hover-color;
					border-bottom-color: $hover-color;
				}
			}
		}
	}

	.o-topper__headline {
		&::after {
			border-bottom: 6px solid $foreground;

			@include oGridRespondTo($from: L) {
				border-bottom-width: 8px;
			}
		}
	}

	.o-topper__tags,
	.o-topper__columnist-name,
	.o-topper__headline,
	.o-topper__standfirst,
	.o-topper__summary {
		color: $foreground;
	}

	.o-topper__topic,
	.o-topper__brand {
		color: $foreground;

		&:hover {
			color: oColorsMix($foreground, $color-name, 73);
		}
	}

	@if $color-name == 'paper' or $color-name == 'wheat' {
		.o-topper__topic,
		.o-topper__columnist-name {
			@include oColorsFor('tag-link', text);

			&:hover {
				@include oColorsFor('tag-link-hover', text);
			}
		}
	}

	@if $color-name == 'sky' {
		.o-topper__tags,
		.o-topper__topic,
		.o-topper__columnist-name {
			color: oColorsGetPaletteColor('oxford');

			&:hover {
				color: oColorsGetPaletteColor('black-80');
			}
		}
	}
}

@mixin _oTopperAlignText($position) {
	$mleft: ('left': 0, 'center': auto, 'right': auto);
	$mright: ('left': auto, 'center': auto, 'right': 0);
	$value: ('left': flex-start, 'center': center, 'right': flex-end);

	.o-topper__headline--large {
		&:after {
			margin-left: map-get($mleft, #{$position});
			margin-right: map-get($mright, #{$position});
		}
	}

	.o-topper__content {
		text-align: $position;
		align-self: map-get($value, #{$position});
	}

	.o-topper__tags {
		justify-content: map-get($value, #{$position});
	}
}

@mixin _oTopperDefineOnce($label) {
	@if not map-has-key($_o-topper-defined, $label) {
		@content;
		$_o-topper-defined: map-merge($_o-topper-defined, (
			$label: true
		));
	}
}
