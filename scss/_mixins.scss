////
/// @group o-buttons
/// @link http://registry.origami.ft.com/components/o-buttons
////

/// Button theme construct
/// Ouputs dimensions for a specific button size
///
/// @example
/// .my-button--big {
/// 	@include oButtonsSize(big);
/// }
///
/// @param {String} $size
@mixin oButtonsSize($size) {
	$button-dimensions: map-get($o-buttons-sizes, $size);
	$border-width: map-get($button-dimensions, border-width);
	$vertical-padding: 1/2 * (map-get($button-dimensions, height) - map-get($button-dimensions, font-size)) - $border-width * 2;

	padding: $vertical-padding map-get($button-dimensions, padding-right) $vertical-padding map-get($button-dimensions, padding-left);
	font-size: map-get($button-dimensions, font-size);
	line-height: map-get($button-dimensions, height) - $border-width * 2 - $vertical-padding * 2;
	border-width: $border-width;
}

/// Button theme construct
/// Ouputs styles for all button states
///
/// @example
/// .my-button--standout {
/// 	@include oButtonsTheme(standout);
/// }
///
/// @param {String} $theme
@mixin oButtonsTheme($theme) {
	$states: map-get($o-buttons-themes, $theme);

	@each $property, $value in map-get($states, normal) {
		#{$property}: #{$value};
	}

	&:focus {
		@each $property, $value in map-get($states, focus) {
			#{$property}: #{$value};
		}
	}

	@if map-get($states, hover) {
		#{$o-hoverable-if-hover-enabled} & {
			// Apply :hover state only in these cases:
			// - Not disabled
			// - Not selected
			// - Not pressed
			&:not([disabled]):not([aria-selected=true]):not([aria-pressed=true]):hover {
				background: map-get(map-get($states, hover), background);
			}
		}
	}

	@if map-get($states, selected) {
		// http://www.w3.org/TR/wai-aria/states_and_properties#aria-selected
		&[aria-selected=true] {
			@each $property, $value in map-get($states, selected) {
				#{$property}: #{$value};
			}

			&:focus {
				@if map-has-key(map-get($states, selected), color) {
					box-shadow: inset 0 0 4px 1px map-get(map-get($states, selected), color);
				}
			}
		}
	}

	@if map-get($states, pressed) {
		// http://www.w3.org/TR/wai-aria/states_and_properties#aria-pressed
		&[aria-pressed=true] {
			@each $property, $value in map-get($states, pressed) {
				#{$property}: #{$value};
			}

			&:focus {
				@if map-has-key(map-get($states, pressed), color) {
					box-shadow: inset 0 0 4px 1px map-get(map-get($states, pressed), color);
				}
			}
		}
	}

	@if map-get($states, disabled) {
		&[disabled] {
			@each $property, $value in map-get($states, disabled) {
				#{$property}: #{$value};
			}
		}
	}
}

/// Button construct
/// Basic button styling and default states for specific theme and size
///
/// @example
/// .my-button {
/// 	@include oButtons;
/// }
/// .my-inverse-button {
/// 	@include oButtons($theme: inverse);
/// }
/// .my-big-standout-button {
/// 	@include oButtons(big, standout);
/// }
/// .my-big-button {
/// 	@include oButtons(big);
/// }
///
/// @param {String} $size (medium)
/// @param {String} $theme (standard)
@mixin oButtons($size: medium, $theme: standard) {
	display: inline-block;
	box-sizing: border-box;
	vertical-align: middle;
	margin: 0;
	outline: 0;
	border-style: solid;
	border-radius: 5px;
	text-align: center;
	text-decoration: none;
	font-family: $o-buttons-font-family;
	cursor: pointer;
	transition: 0.3s background-color, 0.15s box-shadow ease-in;
	-moz-appearance: none;
	-webkit-appearance: none;
	user-select: none;
	background-clip: padding-box;

	@include oButtonsSize($size);
	@include oButtonsTheme($theme);

	// Same as aria-disabled:
	// http://www.w3.org/TR/wai-aria/states_and_properties#aria-disabled
	// This is a common style for all button themes
	&[disabled] {
		pointer-events: none;
		opacity: 0.4;
		cursor: default;
	}

	// Remove extra padding in Firefox
	&::-moz-focus-inner {
		border: 0;
		padding: 0;
	}
}
