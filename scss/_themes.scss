////
/// @group o-buttons
/// @link http://registry.origami.ft.com/components/o-buttons
////

/// scss-lint:disable SpaceAfterComma

@include oColorsSetUseCase(o-buttons-standard-normal,   text,       'link-1');
@include oColorsSetUseCase(o-buttons-standard-normal,   background, 'warm-2');
@include oColorsSetUseCase(o-buttons-standard-normal,   border,     'warm-3');
@include oColorsSetUseCase(o-buttons-standard-hover,    background, 'link-1');
@include oColorsSetUseCase(o-buttons-standard-hover,    border,     'link-1');
@include oColorsSetUseCase(o-buttons-standard-selected, background, 'link-1');
@include oColorsSetUseCase(o-buttons-standard-selected, text,       'link-1');
@include oColorsSetUseCase(o-buttons-standard-selected, border,     'transparent');
@include oColorsSetUseCase(o-buttons-standard-pressed,  background, 'green');
@include oColorsSetUseCase(o-buttons-standard-pressed,  text,       'white');
@include oColorsSetUseCase(o-buttons-standard-pressed,  border,     'green');

/// Theme: Standard
///
/// @type Map
$o-buttons-themes__standard: (
	normal: (
		text-transform: lowercase,
		color: oColorsGetColorFor(o-buttons-standard-normal, text),
		background: oColorsGetColorFor(o-buttons-standard-normal, background),
		border-color: oColorsGetColorFor(o-buttons-standard-normal, border)
	),
	focus: (
		box-shadow: inset 0 0 4px currentColor,
	),
	hover: (
		border-color: rgba(oColorsGetColorFor(o-buttons-standard-hover, border), 0.5),
		background: rgba(oColorsGetColorFor(o-buttons-standard-hover, background), 0.15),
	),
	selected: (
		color: oColorsGetColorFor(o-buttons-standard-selected, text),
		background: rgba(oColorsGetColorFor(o-buttons-standard-selected, background), 0.15),
		border-color: oColorsGetColorFor(o-buttons-standard-selected, border),
	),
	pressed: (
		color: oColorsGetColorFor(o-buttons-standard-pressed, text),
		background: oColorsGetColorFor(o-buttons-standard-pressed, background),
		border-color: oColorsGetColorFor(o-buttons-standard-pressed, border),
	)
) !default;

@include oColorsSetUseCase(o-buttons-standout-normal,   text,       'white');
@include oColorsSetUseCase(o-buttons-standout-normal,   background, 'link-1');
@include oColorsSetUseCase(o-buttons-standout-normal,   border,     'link-1');
@include oColorsSetUseCase(o-buttons-standout-hover,    background, 'link-2');
@include oColorsSetUseCase(o-buttons-standout-selected, background, 'link-2');
@include oColorsSetUseCase(o-buttons-standout-selected, text,       'white');

/// Theme: Standout
///
/// @type Map
$o-buttons-themes__standout: (
	normal: (
		text-transform: uppercase,
		color: oColorsGetColorFor(o-buttons-standout-normal, text),
		background: oColorsGetColorFor(o-buttons-standout-normal, background),
		border-color: oColorsGetColorFor(o-buttons-standout-normal, border),
		// Prevent fat white type on a dark background
		"-webkit-font-smoothing": antialiased,
		"-moz-osx-font-smoothing": grayscale,
	),
	hover: (
		background: oColorsGetColorFor(o-buttons-standout-hover, background),
	),
	selected: (
		color: oColorsGetColorFor(o-buttons-standout-selected, text),
		background: oColorsGetColorFor(o-buttons-standout-selected, background),
		border-color: oColorsGetColorFor(o-buttons-standout-selected, background),
	),
	disabled: (
		// Looks like a standard disabled button
		color: oColorsGetColorFor(o-buttons-standard-normal, text),
		background: oColorsGetColorFor(o-buttons-standard-normal, background),
		border-color: oColorsGetColorFor(o-buttons-standard-normal, border),
	)
) !default;

@include oColorsSetUseCase(o-buttons-inverse-normal,   text,       'white');
@include oColorsSetUseCase(o-buttons-inverse-normal,   background, 'transparent');
@include oColorsSetUseCase(o-buttons-inverse-normal,   border,     'white');
@include oColorsSetUseCase(o-buttons-inverse-hover,    background, 'white');
@include oColorsSetUseCase(o-buttons-inverse-selected, text,       'grey-tint4');
@include oColorsSetUseCase(o-buttons-inverse-selected, background, 'white');
@include oColorsSetUseCase(o-buttons-inverse-selected, border,     'white');

/// Theme: Inverse
///
/// @type Map
$o-buttons-themes__inverse: (
	normal: (
		color: oColorsGetColorFor(o-buttons-inverse-normal, text),
		background: oColorsGetColorFor(o-buttons-inverse-normal, background),
		border-color: oColorsGetColorFor(o-buttons-inverse-normal, border),
	),
	hover: (
		background: rgba(oColorsGetColorFor(o-buttons-inverse-hover, background), 0.3),
	),
	selected: (
		color: oColorsGetColorFor(o-buttons-inverse-selected, text),
		background: oColorsGetColorFor(o-buttons-inverse-selected, background),
		border-color: oColorsGetColorFor(o-buttons-inverse-selected, border),
	)
) !default;

@include oColorsSetUseCase(o-buttons-uncolored-normal, text,       'pink-tint5');
@include oColorsSetUseCase(o-buttons-uncolored-normal, background, 'transparent');
@include oColorsSetUseCase(o-buttons-uncolored-normal, border,     'pink-tint5');

/// Theme: Uncolored
///
/// @type Map
$o-buttons-themes__uncolored: (
	normal: (
		color: oColorsGetColorFor(o-buttons-uncolored-normal, text),
		background: oColorsGetColorFor(o-buttons-uncolored-normal, background),
		border-color: oColorsGetColorFor(o-buttons-uncolored-normal, border),
	)
) !default;
